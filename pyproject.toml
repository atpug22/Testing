[tool.poetry]
name = "fastapi-boilerplate"
version = "0.1.0"
description = "FastAPI Boilerplate"
authors = ["Abbas <me@abbasmj.com>"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
# Core FastAPI and web framework
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
gunicorn = "^23.0.0"

# Database and ORM
SQLAlchemy = "^2.0.36"
alembic = "^1.13.3"
asyncpg = "^0.30.0"

# Authentication and security
PyJWT = "^2.9.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
cryptography = "^43.0.0"
bcrypt = "^4.2.1"

# Data validation and settings
pydantic = "^2.10.3"
pydantic-settings = "^2.7.0"
email-validator = "^2.2.0"

# HTTP client and utilities
httpx = "^0.28.1"
ujson = "^5.10.0"
pyyaml = "^6.0.2"

# Background tasks
celery = "^5.4.0"

# Caching
redis = "^5.2.1"

# AI and LangChain
langchain = "^0.3.0"
langchain-openai = "^0.2.0"
langchain-anthropic = "^0.2.0"
langchain-community = "^0.3.0"

# CLI and utilities
click = "^8.1.7"
greenlet = "^3.1.1"

# Development and testing
pytest = "^8.3.4"
pytest-asyncio = "^0.24.0"
faker = "^32.0.0"

# Code quality (moved to dev dependencies)
isort = "^5.13.2"
black = "^24.10.0"
pylint = "^3.3.1"

# FastAPI extensions
fastapi-event = "^0.1.3"

[tool.poetry.group.dev.dependencies]
# Testing
behave = "^1.2.6"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"

# Code quality
black = "^24.10.0"
isort = "^5.13.2"
pylint = "^3.3.1"
mypy = "^1.13.0"

# Development tools
pre-commit = "^4.0.1"
bandit = "^1.7.10"
safety = "^3.2.10"

# Documentation
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.46"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "core", "api", "tests"]

[tool.pylint]
max-line-length = 88
disable = [
    "C0330",  # Wrong hanging indentation
    "C0326",  # Bad whitespace
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app", "core", "api"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
