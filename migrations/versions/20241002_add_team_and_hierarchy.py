"""add team and hierarchy

Revision ID: a1b2c3d4e5f6
Revises: cabcbd0d8153
Create Date: 2024-10-02 00:00:00.000000

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "a1b2c3d4e5f6"
down_revision = "cabcbd0d8153"
branch_labels = None
depends_on = None


def upgrade():
    # ### Add role and manager_id to users table ###
    op.add_column(
        "users",
        sa.Column(
            "role",
            sa.String(length=50),
            nullable=False,
            server_default="engineer",
        ),
    )
    op.add_column(
        "users",
        sa.Column("manager_id", sa.BigInteger(), nullable=True),
    )
    op.create_foreign_key(
        "fk_users_manager_id",
        "users",
        "users",
        ["manager_id"],
        ["id"],
        ondelete="SET NULL",
    )

    # ### Create teams table ###
    op.create_table(
        "teams",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("name", sa.Unicode(length=255), nullable=False),
        sa.Column("description", sa.Unicode(length=500), nullable=True),
        sa.Column("manager_id", sa.BigInteger(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["users.id"],
            name="fk_teams_manager_id",
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("uuid"),
    )

    # ### Create user_teams association table ###
    op.create_table(
        "user_teams",
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("team_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="fk_user_teams_user_id",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
            name="fk_user_teams_team_id",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("user_id", "team_id"),
    )

    # ### Create pull_requests table ###
    op.create_table(
        "pull_requests",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("github_pr_id", sa.BigInteger(), nullable=False),
        sa.Column("title", sa.Unicode(length=500), nullable=False),
        sa.Column("description", sa.Unicode(length=2000), nullable=True),
        sa.Column("github_url", sa.Unicode(length=500), nullable=False),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("author_id", sa.BigInteger(), nullable=False),
        sa.Column("team_id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
            name="fk_pull_requests_author_id",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
            name="fk_pull_requests_team_id",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("github_pr_id"),
        sa.UniqueConstraint("uuid"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("pull_requests")
    op.drop_table("user_teams")
    op.drop_table("teams")
    op.drop_constraint("fk_users_manager_id", "users", type_="foreignkey")
    op.drop_column("users", "manager_id")
    op.drop_column("users", "role")
    # ### end Alembic commands ###

