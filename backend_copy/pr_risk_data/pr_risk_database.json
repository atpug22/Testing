{
  "repositories": {
    "Stellarids/website": {
      "owner": "Stellarids",
      "repo": "website",
      "analyzed_at": "2025-08-28T18:53:24.224549",
      "total_prs_analyzed": 0,
      "pr_analyses": [],
      "avg_delivery_risk_score": 0.0,
      "high_risk_pr_count": 0,
      "critical_risk_pr_count": 0,
      "team_velocity_impact": 0.0,
      "release_risk_assessment": "Low risk - most PRs are healthy"
    },
    "facebook/react": {
      "owner": "facebook",
      "repo": "react",
      "analyzed_at": "2025-09-29T19:49:44.171105",
      "total_prs_analyzed": 37,
      "pr_analyses": [
        {
          "pr_number": 34454,
          "title": "[DevTools] Inspect the Screen when inspecting a Root",
          "author": "eps1lon",
          "state": "open",
          "created_at": "2025-09-10T09:20:41Z",
          "updated_at": "2025-09-29T14:10:59Z",
          "url": "https://github.com/facebook/react/pull/34454",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 0.07721573666666667,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 0.07721573666666667,
            "pr_age_days": 19.204814544583336,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 36,
            "critical_path_touched": false,
            "lines_added": 534,
            "lines_removed": 304,
            "files_changed": 18,
            "test_coverage_delta": 11.11111111111111,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 100.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 13,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 19,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 10.0,
            "blast_radius_score": 55.0,
            "dynamics_score": 0.0,
            "business_impact_score": 40.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:45:36.979486"
        },
        {
          "pr_number": 34621,
          "title": "React DOM: Add support for onFullscreenChange and onFullscreenError events",
          "author": "chirokas",
          "state": "open",
          "created_at": "2025-09-27T08:20:33Z",
          "updated_at": "2025-09-29T13:29:33Z",
          "url": "https://github.com/facebook/react/pull/34621",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 0.7690645144444445,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 0.7690645144444445,
            "pr_age_days": 2.246627688101852,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 8,
            "critical_path_touched": false,
            "lines_added": 38,
            "lines_removed": 0,
            "files_changed": 4,
            "test_coverage_delta": 25.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 35.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 11,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 0.0,
            "blast_radius_score": 32.0,
            "dynamics_score": 25.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:45:41.632656"
        },
        {
          "pr_number": 34638,
          "title": "[Flight] Improve aborted hanging promise stacks",
          "author": "unstubbable",
          "state": "open",
          "created_at": "2025-09-28T19:21:31Z",
          "updated_at": "2025-09-29T11:49:17Z",
          "url": "https://github.com/facebook/react/pull/34638",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 2.4414809013888887,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 2.4414809013888887,
            "pr_age_days": 0.7876774449652777,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 4,
            "critical_path_touched": false,
            "lines_added": 202,
            "lines_removed": 9,
            "files_changed": 2,
            "test_coverage_delta": 50.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 85.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 2,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 0,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 0.0,
            "blast_radius_score": 26.0,
            "dynamics_score": 0.0,
            "business_impact_score": 15.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:45:46.331812"
        },
        {
          "pr_number": 34520,
          "title": "Rollout enablePersistedModeClonedFlag",
          "author": "javache",
          "state": "open",
          "created_at": "2025-09-17T21:35:40Z",
          "updated_at": "2025-09-29T11:23:43Z",
          "url": "https://github.com/facebook/react/pull/34520",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 2.8690189019444445,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 2.8690189019444445,
            "pr_age_days": 11.694577176469908,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 22,
            "critical_path_touched": false,
            "lines_added": 18,
            "lines_removed": 43,
            "files_changed": 11,
            "test_coverage_delta": 36.36363636363637,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 0.0,
            "reviewer_load": 3,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 11,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 5.0,
            "blast_radius_score": 40.0,
            "dynamics_score": 40.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:45:51.468894"
        },
        {
          "pr_number": 34646,
          "title": "Allow running `yarn lint` on subset of paths",
          "author": "eps1lon",
          "state": "open",
          "created_at": "2025-09-29T09:38:24Z",
          "updated_at": "2025-09-29T09:43:02Z",
          "url": "https://github.com/facebook/react/pull/34646",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 4.548737523055555,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 4.548737523055555,
            "pr_age_days": 0.1927483227199074,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 4,
            "critical_path_touched": false,
            "lines_added": 10,
            "lines_removed": 4,
            "files_changed": 2,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 100.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 13,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 3,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 0.0,
            "blast_radius_score": 16.0,
            "dynamics_score": 0.0,
            "business_impact_score": 39.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:45:57.455301"
        },
        {
          "pr_number": 34639,
          "title": "Bump next prerelease version numbers",
          "author": "eps1lon",
          "state": "open",
          "created_at": "2025-09-28T21:19:19Z",
          "updated_at": "2025-09-29T07:03:23Z",
          "url": "https://github.com/facebook/react/pull/34639",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 7.212655793333333,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 7.212655793333333,
            "pr_age_days": 0.706129176574074,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 34,
            "critical_path_touched": true,
            "lines_added": 29,
            "lines_removed": 29,
            "files_changed": 17,
            "test_coverage_delta": 5.88235294117647,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 100.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 13,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 8,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 0.0,
            "blast_radius_score": 65.0,
            "dynamics_score": 0.0,
            "business_impact_score": 40.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK \u2022 Touches critical paths",
          "analyzed_at": "2025-09-29T19:46:08.561330"
        },
        {
          "pr_number": 34641,
          "title": "[DevTools] Synchronize Scroll Position Between Suspense Tab and Main Document",
          "author": "sebmarkbage",
          "state": "open",
          "created_at": "2025-09-29T00:53:29Z",
          "updated_at": "2025-09-29T07:00:24Z",
          "url": "https://github.com/facebook/react/pull/34641",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 7.265219059166667,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 7.265219059166667,
            "pr_age_days": 0.5575207015393518,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 8,
            "critical_path_touched": false,
            "lines_added": 170,
            "lines_removed": 6,
            "files_changed": 4,
            "test_coverage_delta": 25.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 100.0,
            "reviewer_load": 1,
            "approval_ratio": 0.0,
            "author_merge_history": 19,
            "avg_review_time_hours": 6.115277777777778
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 4,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 0.0,
            "blast_radius_score": 42.0,
            "dynamics_score": 20.0,
            "business_impact_score": 40.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:46:18.789506"
        },
        {
          "pr_number": 34640,
          "title": "Apply build script changes for RN to main",
          "author": "jackpope",
          "state": "open",
          "created_at": "2025-09-28T22:24:24Z",
          "updated_at": "2025-09-28T22:27:53Z",
          "url": "https://github.com/facebook/react/pull/34640",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 15.80854708138889,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 15.80854708138889,
            "pr_age_days": 0.6611084432060185,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 2,
            "critical_path_touched": false,
            "lines_added": 25,
            "lines_removed": 34,
            "files_changed": 1,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 95.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 3,
            "avg_review_time_hours": 0.05583333333333333
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 2,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 0.0,
            "blast_radius_score": 8.0,
            "dynamics_score": 0.0,
            "business_impact_score": 16.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:46:23.769842"
        },
        {
          "pr_number": 34637,
          "title": "[lint] Use settings for additional hooks in exhaustive deps",
          "author": "jbrown215",
          "state": "open",
          "created_at": "2025-09-28T18:32:34Z",
          "updated_at": "2025-09-28T18:39:44Z",
          "url": "https://github.com/facebook/react/pull/34637",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 19.612641679722223,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 19.612641679722223,
            "pr_age_days": 0.8221702551736112,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 8,
            "critical_path_touched": false,
            "lines_added": 199,
            "lines_removed": 7,
            "files_changed": 4,
            "test_coverage_delta": 50.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 35.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 7,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 0.0,
            "blast_radius_score": 42.0,
            "dynamics_score": 25.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:46:29.510552"
        },
        {
          "pr_number": 34497,
          "title": "[lint] Enable custom hooks configuration for useEffectEvent calling rules",
          "author": "jbrown215",
          "state": "open",
          "created_at": "2025-09-15T16:39:52Z",
          "updated_at": "2025-09-28T18:39:35Z",
          "url": "https://github.com/facebook/react/pull/34497",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 19.61656584388889,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 19.61656584388889,
            "pr_age_days": 13.90049348423611,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 4,
            "critical_path_touched": false,
            "lines_added": 90,
            "lines_removed": 3,
            "files_changed": 2,
            "test_coverage_delta": 50.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 35.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 5,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 5.0,
            "blast_radius_score": 16.0,
            "dynamics_score": 25.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:46:34.637382"
        },
        {
          "pr_number": 34633,
          "title": "Ship partial-prerendering APIs to Canary",
          "author": "eps1lon",
          "state": "open",
          "created_at": "2025-09-28T14:33:47Z",
          "updated_at": "2025-09-28T18:28:08Z",
          "url": "https://github.com/facebook/react/pull/34633",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 19.808789563333335,
            "unresolved_review_threads": 1,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 19.808789563333335,
            "pr_age_days": 0.9881092873611111,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 50,
            "critical_path_touched": false,
            "lines_added": 233,
            "lines_removed": 253,
            "files_changed": 56,
            "test_coverage_delta": 7.142857142857142,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 100.0,
            "reviewer_load": 1,
            "approval_ratio": 0.0,
            "author_merge_history": 13,
            "avg_review_time_hours": 1.7255555555555555
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 31,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 4.0,
            "blast_radius_score": 50.0,
            "dynamics_score": 20.0,
            "business_impact_score": 40.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:46:39.643193"
        },
        {
          "pr_number": 34630,
          "title": "[DevTools] Hide State and Props in the Sidebar for Suspense",
          "author": "sebmarkbage",
          "state": "open",
          "created_at": "2025-09-28T03:57:54Z",
          "updated_at": "2025-09-28T14:23:53Z",
          "url": "https://github.com/facebook/react/pull/34630",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 23.88141069,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 23.88141069,
            "pr_age_days": 1.4297694268981482,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 12,
            "critical_path_touched": false,
            "lines_added": 40,
            "lines_removed": 92,
            "files_changed": 6,
            "test_coverage_delta": 83.33333333333334,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 100.0,
            "reviewer_load": 1,
            "approval_ratio": 0.0,
            "author_merge_history": 19,
            "avg_review_time_hours": 5.587777777777778
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 9,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 0.0,
            "blast_radius_score": 50.0,
            "dynamics_score": 20.0,
            "business_impact_score": 40.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:46:46.079191"
        },
        {
          "pr_number": 34626,
          "title": "Fix comment typos and remove redundant DEV block",
          "author": "Caden-Hornyak",
          "state": "open",
          "created_at": "2025-09-27T17:28:41Z",
          "updated_at": "2025-09-27T17:31:09Z",
          "url": "https://github.com/facebook/react/pull/34626",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 44.76186967777778,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 44.76186967777778,
            "pr_age_days": 1.8667908662037038,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 6,
            "critical_path_touched": false,
            "lines_added": 11,
            "lines_removed": 25,
            "files_changed": 3,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 35.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 3,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 25.0,
            "blast_radius_score": 24.0,
            "dynamics_score": 25.0,
            "business_impact_score": 24.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:46:51.731155"
        },
        {
          "pr_number": 34623,
          "title": "[playground] Fix syntax error from crashing the Compiler playground",
          "author": "ianduvall",
          "state": "open",
          "created_at": "2025-09-27T15:08:25Z",
          "updated_at": "2025-09-27T17:16:11Z",
          "url": "https://github.com/facebook/react/pull/34623",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 45.01272447638889,
            "unresolved_review_threads": 1,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 45.01272447638889,
            "pr_age_days": 1.9642570383680555,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 6,
            "critical_path_touched": false,
            "lines_added": 40,
            "lines_removed": 1,
            "files_changed": 3,
            "test_coverage_delta": 33.33333333333333,
            "historical_regression_risk": 10.0
          },
          "dynamics_metrics": {
            "author_experience_score": 35.0,
            "reviewer_load": 1,
            "approval_ratio": 0.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 2.124722222222222
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 9,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 29.0,
            "blast_radius_score": 94.0,
            "dynamics_score": 45.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a1 MEDIUM RISK",
          "analyzed_at": "2025-09-29T19:46:56.808836"
        },
        {
          "pr_number": 34051,
          "title": "Repro for the \"rendered more hooks\" bug",
          "author": "eps1lon",
          "state": "open",
          "created_at": "2025-07-30T05:32:29Z",
          "updated_at": "2025-09-27T01:53:55Z",
          "url": "https://github.com/facebook/react/pull/34051",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 60.385142350833334,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 60.385142350833334,
            "pr_age_days": 61.364265190543975,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 2,
            "critical_path_touched": false,
            "lines_added": 117,
            "lines_removed": 0,
            "files_changed": 1,
            "test_coverage_delta": 100.0,
            "historical_regression_risk": 10.0
          },
          "dynamics_metrics": {
            "author_experience_score": 100.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 13,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 2,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 40.0,
            "blast_radius_score": 88.0,
            "dynamics_score": 0.0,
            "business_impact_score": 31.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a1 MEDIUM RISK",
          "analyzed_at": "2025-09-29T19:47:01.514705"
        },
        {
          "pr_number": 34611,
          "title": "[playground] Config panel quality fixes",
          "author": "EugeneChoi4",
          "state": "open",
          "created_at": "2025-09-26T15:45:12Z",
          "updated_at": "2025-09-26T21:58:51Z",
          "url": "https://github.com/facebook/react/pull/34611",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 64.30443262666667,
            "unresolved_review_threads": 1,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 64.30443262666667,
            "pr_age_days": 2.938830526111111,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 4,
            "critical_path_touched": false,
            "lines_added": 27,
            "lines_removed": 27,
            "files_changed": 2,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 10.0
          },
          "dynamics_metrics": {
            "author_experience_score": 97.5,
            "reviewer_load": 1,
            "approval_ratio": 0.0,
            "author_merge_history": 2,
            "avg_review_time_hours": 5.937777777777778
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 5,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 34.0,
            "blast_radius_score": 86.0,
            "dynamics_score": 20.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a1 MEDIUM RISK",
          "analyzed_at": "2025-09-29T19:47:06.958088"
        },
        {
          "pr_number": 34615,
          "title": "Add PropTypes validation to VersionPicker component",
          "author": "yashhhYB",
          "state": "open",
          "created_at": "2025-09-26T16:53:31Z",
          "updated_at": "2025-09-26T16:53:36Z",
          "url": "https://github.com/facebook/react/pull/34615",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 69.39321759055555,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 69.39321759055555,
            "pr_age_days": 2.8914419366435182,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 2,
            "critical_path_touched": false,
            "lines_added": 8,
            "lines_removed": 0,
            "files_changed": 1,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 75.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 6,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 30.0,
            "blast_radius_score": 8.0,
            "dynamics_score": 0.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:47:11.583809"
        },
        {
          "pr_number": 34612,
          "title": "Refactor IssueList component for better performance and accessibility",
          "author": "yashhhYB",
          "state": "open",
          "created_at": "2025-09-26T16:33:48Z",
          "updated_at": "2025-09-26T16:39:57Z",
          "url": "https://github.com/facebook/react/pull/34612",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 69.62205471805555,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 69.62205471805555,
            "pr_age_days": 2.9051897799189814,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 4,
            "critical_path_touched": true,
            "lines_added": 16,
            "lines_removed": 8,
            "files_changed": 2,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 75.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 8,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 30.0,
            "blast_radius_score": 41.0,
            "dynamics_score": 0.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK \u2022 Touches critical paths",
          "analyzed_at": "2025-09-29T19:47:16.397353"
        },
        {
          "pr_number": 34545,
          "title": "Add getClientRects to fabric fragment instance",
          "author": "jackpope",
          "state": "open",
          "created_at": "2025-09-20T17:00:44Z",
          "updated_at": "2025-09-26T15:59:31Z",
          "url": "https://github.com/facebook/react/pull/34545",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 70.29768258833333,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 70.29768258833333,
            "pr_age_days": 8.886558533773147,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 2,
            "critical_path_touched": false,
            "lines_added": 40,
            "lines_removed": 0,
            "files_changed": 1,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 95.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 3,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 1,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 35.0,
            "blast_radius_score": 8.0,
            "dynamics_score": 0.0,
            "business_impact_score": 8.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:47:22.657743"
        },
        {
          "pr_number": 34544,
          "title": "Add getRootNode to fabric fragment instance",
          "author": "jackpope",
          "state": "open",
          "created_at": "2025-09-20T16:50:30Z",
          "updated_at": "2025-09-26T15:57:52Z",
          "url": "https://github.com/facebook/react/pull/34544",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 70.32664731972221,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 70.32664731972221,
            "pr_age_days": 8.893726045729167,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 2,
            "critical_path_touched": false,
            "lines_added": 18,
            "lines_removed": 0,
            "files_changed": 1,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 95.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 3,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 1,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 35.0,
            "blast_radius_score": 8.0,
            "dynamics_score": 0.0,
            "business_impact_score": 8.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-09-29T19:47:27.930739"
        },
        {
          "pr_number": 34608,
          "title": "[lint] Allow eslint react hooks rule to apply to any wrapped components",
          "author": "javiergonzalez-synth",
          "state": "open",
          "created_at": "2025-09-26T09:52:05Z",
          "updated_at": "2025-09-26T10:06:24Z",
          "url": "https://github.com/facebook/react/pull/34608",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 76.1857369988889,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 76.1857369988889,
            "pr_age_days": 3.184347837916667,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 4,
            "critical_path_touched": false,
            "lines_added": 140,
            "lines_removed": 33,
            "files_changed": 2,
            "test_coverage_delta": 50.0,
            "historical_regression_risk": 20.0
          },
          "dynamics_metrics": {
            "author_experience_score": 35.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 6,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 40.0,
            "blast_radius_score": 100.0,
            "dynamics_score": 25.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a1 MEDIUM RISK \u2022 Stalled for 3+ days",
          "analyzed_at": "2025-09-29T19:47:32.653787"
        },
        {
          "pr_number": 31473,
          "title": "fix: remove mountWorkInProgressOffscreenFiber function",
          "author": "Collection50",
          "state": "open",
          "created_at": "2024-11-10T15:09:46Z",
          "updated_at": "2025-09-26T09:06:05Z",
          "url": "https://github.com/facebook/react/pull/31473",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 77.19244510444445,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 77.19244510444445,
            "pr_age_days": 322.96379400898144,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 2,
            "critical_path_touched": false,
            "lines_added": 6,
            "lines_removed": 14,
            "files_changed": 1,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 50.0
          },
          "dynamics_metrics": {
            "author_experience_score": 0.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 7,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 50.0,
            "blast_radius_score": 100.0,
            "dynamics_score": 40.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a0\ufe0f HIGH RISK \u2022 Stalled for 3+ days",
          "analyzed_at": "2025-09-29T19:47:37.802769"
        },
        {
          "pr_number": 34591,
          "title": "[DevTools] Enable Suspense tab for Canary releases",
          "author": "eps1lon",
          "state": "open",
          "created_at": "2025-09-24T18:06:00Z",
          "updated_at": "2025-09-25T20:01:11Z",
          "url": "https://github.com/facebook/react/pull/34591",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 90.27664852027777,
            "unresolved_review_threads": 1,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 90.27664852027777,
            "pr_age_days": 4.841515447604166,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 1.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 2,
            "critical_path_touched": false,
            "lines_added": 2,
            "lines_removed": 2,
            "files_changed": 1,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 100.0,
            "reviewer_load": 1,
            "approval_ratio": 0.5,
            "author_merge_history": 13,
            "avg_review_time_hours": 13.067361111111111
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 1,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 48.0,
            "blast_radius_score": 8.0,
            "dynamics_score": 15.0,
            "business_impact_score": 23.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK \u2022 Stalled for 3+ days",
          "analyzed_at": "2025-09-29T19:47:46.935221"
        },
        {
          "pr_number": 34602,
          "title": "Update index.js",
          "author": "yashhhYB",
          "state": "open",
          "created_at": "2025-09-25T14:38:52Z",
          "updated_at": "2025-09-25T14:50:21Z",
          "url": "https://github.com/facebook/react/pull/34602",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 95.45853135833335,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 95.45853135833335,
            "pr_age_days": 3.9854133436342596,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 2,
            "critical_path_touched": false,
            "lines_added": 2,
            "lines_removed": 2,
            "files_changed": 1,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 10.0
          },
          "dynamics_metrics": {
            "author_experience_score": 75.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 7,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 40.0,
            "blast_radius_score": 78.0,
            "dynamics_score": 0.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a1 MEDIUM RISK \u2022 Stalled for 3+ days",
          "analyzed_at": "2025-09-29T19:47:51.713171"
        },
        {
          "pr_number": 33434,
          "title": "[devtools] Prevent incorrect render detection for user components in didFiberRender (#33423)",
          "author": "developerjhp",
          "state": "open",
          "created_at": "2025-06-04T05:24:58Z",
          "updated_at": "2025-09-25T01:32:57Z",
          "url": "https://github.com/facebook/react/pull/33434",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 108.75266221555556,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 1,
            "time_waiting_for_reviewer_hours": 108.75266221555556,
            "pr_age_days": 117.37023824046297,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 2,
            "critical_path_touched": false,
            "lines_added": 14,
            "lines_removed": 1,
            "files_changed": 1,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 10.0
          },
          "dynamics_metrics": {
            "author_experience_score": 0.0,
            "reviewer_load": 1,
            "approval_ratio": 0.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 226.07444444444445
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 5,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 55.0,
            "blast_radius_score": 78.0,
            "dynamics_score": 70.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a0\ufe0f HIGH RISK \u2022 Stalled for 3+ days",
          "analyzed_at": "2025-09-29T19:48:06.584415"
        },
        {
          "pr_number": 34576,
          "title": "[Compiler] Don't throw calculate in render when there is a prop function call in effects",
          "author": "jorge-cab",
          "state": "open",
          "created_at": "2025-09-24T00:42:21Z",
          "updated_at": "2025-09-24T20:04:15Z",
          "url": "https://github.com/facebook/react/pull/34576",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 114.2402475461111,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 1,
            "time_waiting_for_reviewer_hours": 114.2402475461111,
            "pr_age_days": 5.566885314421296,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 37,
            "critical_path_touched": false,
            "lines_added": 1126,
            "lines_removed": 148,
            "files_changed": 29,
            "test_coverage_delta": 96.55172413793103,
            "historical_regression_risk": 10.0
          },
          "dynamics_metrics": {
            "author_experience_score": 100.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 19,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 45.0,
            "blast_radius_score": 100.0,
            "dynamics_score": 0.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a1 MEDIUM RISK \u2022 Stalled for 3+ days \u2022 Large code changes",
          "analyzed_at": "2025-09-29T19:48:39.893165"
        },
        {
          "pr_number": 34427,
          "title": "[DevTools] Fix hooks indexes counting",
          "author": "andreisilviudragnea",
          "state": "open",
          "created_at": "2025-09-09T09:55:34Z",
          "updated_at": "2025-09-24T20:00:24Z",
          "url": "https://github.com/facebook/react/pull/34427",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 114.30571419416667,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 114.30571419416667,
            "pr_age_days": 20.18276123957176,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 4,
            "critical_path_touched": false,
            "lines_added": 142,
            "lines_removed": 5,
            "files_changed": 2,
            "test_coverage_delta": 50.0,
            "historical_regression_risk": 10.0
          },
          "dynamics_metrics": {
            "author_experience_score": 0.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 9,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 50.0,
            "blast_radius_score": 96.0,
            "dynamics_score": 40.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a1 MEDIUM RISK \u2022 Stalled for 3+ days",
          "analyzed_at": "2025-09-29T19:48:44.571316"
        },
        {
          "pr_number": 33618,
          "title": "[compiler] log if a compiler error was opted out of",
          "author": "phryneas",
          "state": "open",
          "created_at": "2025-06-23T14:04:29Z",
          "updated_at": "2025-09-22T19:04:43Z",
          "url": "https://github.com/facebook/react/pull/33618",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 163.23509630805555,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 1,
            "time_waiting_for_reviewer_hours": 163.23509630805555,
            "pr_age_days": 98.00995771653935,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 4,
            "critical_path_touched": false,
            "lines_added": 5,
            "lines_removed": 2,
            "files_changed": 2,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 0.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 2,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 55.0,
            "blast_radius_score": 16.0,
            "dynamics_score": 40.0,
            "business_impact_score": 16.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK \u2022 Stalled for 3+ days",
          "analyzed_at": "2025-09-29T19:48:49.347003"
        },
        {
          "pr_number": 34547,
          "title": "Fix indices of hooks in devtools when using useSyncExternalStore",
          "author": "blazejkustra",
          "state": "open",
          "created_at": "2025-09-20T20:45:51Z",
          "updated_at": "2025-09-22T17:38:32Z",
          "url": "https://github.com/facebook/react/pull/34547",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 164.6728044786111,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 164.6728044786111,
            "pr_age_days": 8.731285834756944,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 2,
            "critical_path_touched": false,
            "lines_added": 26,
            "lines_removed": 7,
            "files_changed": 1,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 10.0
          },
          "dynamics_metrics": {
            "author_experience_score": 35.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 4,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 45.0,
            "blast_radius_score": 78.0,
            "dynamics_score": 25.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a1 MEDIUM RISK \u2022 Stalled for 3+ days",
          "analyzed_at": "2025-09-29T19:48:54.096551"
        },
        {
          "pr_number": 34540,
          "title": "Add fast path for React.memo with custom compare",
          "author": "barryam3",
          "state": "open",
          "created_at": "2025-09-20T04:44:20Z",
          "updated_at": "2025-09-20T04:45:49Z",
          "url": "https://github.com/facebook/react/pull/34540",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 225.55414596277777,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 225.55414596277777,
            "pr_age_days": 9.399119507708333,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 6,
            "critical_path_touched": false,
            "lines_added": 21,
            "lines_removed": 6,
            "files_changed": 3,
            "test_coverage_delta": 66.66666666666666,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 35.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 10,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 45.0,
            "blast_radius_score": 24.0,
            "dynamics_score": 25.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK \u2022 Stalled for 3+ days",
          "analyzed_at": "2025-09-29T19:49:03.925940"
        },
        {
          "pr_number": 34503,
          "title": "[compiler][rfc] enablePreserveMemo treats manual deps as non-nullable",
          "author": "josephsavona",
          "state": "open",
          "created_at": "2025-09-16T05:17:54Z",
          "updated_at": "2025-09-19T23:46:39Z",
          "url": "https://github.com/facebook/react/pull/34503",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 230.5416862338889,
            "unresolved_review_threads": 1,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 230.5416862338889,
            "pr_age_days": 13.37586887085648,
            "rebase_force_push_count": 1,
            "comment_velocity_decay": 1.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 29,
            "critical_path_touched": false,
            "lines_added": 1890,
            "lines_removed": 50,
            "files_changed": 19,
            "test_coverage_delta": 63.1578947368421,
            "historical_regression_risk": 10.0
          },
          "dynamics_metrics": {
            "author_experience_score": 80.0,
            "reviewer_load": 1,
            "approval_ratio": 0.0,
            "author_merge_history": 2,
            "avg_review_time_hours": 90.47916666666667
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 16,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 55.0,
            "blast_radius_score": 100.0,
            "dynamics_score": 30.0,
            "business_impact_score": 40.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a0\ufe0f HIGH RISK \u2022 Stalled for 3+ days \u2022 Large code changes",
          "analyzed_at": "2025-09-29T19:49:09.072531"
        },
        {
          "pr_number": 34471,
          "title": "[compiler] Auto-fix for non-exhaustive deps",
          "author": "josephsavona",
          "state": "open",
          "created_at": "2025-09-11T20:34:35Z",
          "updated_at": "2025-09-19T23:07:11Z",
          "url": "https://github.com/facebook/react/pull/34471",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 231.2008633775,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 231.2008633775,
            "pr_age_days": 17.739341529618056,
            "rebase_force_push_count": 1,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 17,
            "critical_path_touched": false,
            "lines_added": 1194,
            "lines_removed": 50,
            "files_changed": 10,
            "test_coverage_delta": 40.0,
            "historical_regression_risk": 10.0
          },
          "dynamics_metrics": {
            "author_experience_score": 80.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 2,
            "avg_review_time_hours": 97.78666666666666
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 10,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 52.0,
            "blast_radius_score": 100.0,
            "dynamics_score": 10.0,
            "business_impact_score": 40.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a1 MEDIUM RISK \u2022 Stalled for 3+ days \u2022 Large code changes",
          "analyzed_at": "2025-09-29T19:49:14.110206"
        },
        {
          "pr_number": 34394,
          "title": "[compiler] Implement exhaustive dependency checking for manual memoization",
          "author": "josephsavona",
          "state": "open",
          "created_at": "2025-09-04T19:14:42Z",
          "updated_at": "2025-09-19T23:07:11Z",
          "url": "https://github.com/facebook/react/pull/34394",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 231.2024156752778,
            "unresolved_review_threads": 5,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 231.2024156752778,
            "pr_age_days": 24.794880745729163,
            "rebase_force_push_count": 1,
            "comment_velocity_decay": 1.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 15,
            "critical_path_touched": false,
            "lines_added": 1117,
            "lines_removed": 0,
            "files_changed": 9,
            "test_coverage_delta": 44.44444444444444,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 80.0,
            "reviewer_load": 1,
            "approval_ratio": 0.0,
            "author_merge_history": 2,
            "avg_review_time_hours": 213.10607142857143
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 9,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 76.0,
            "blast_radius_score": 60.0,
            "dynamics_score": 30.0,
            "business_impact_score": 40.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a1 MEDIUM RISK \u2022 Stalled for 3+ days \u2022 Large code changes",
          "analyzed_at": "2025-09-29T19:49:19.698291"
        },
        {
          "pr_number": 34472,
          "title": "[compiler] ValidateExhaustiveDeps disallows unnecessary non-reactive deps",
          "author": "josephsavona",
          "state": "open",
          "created_at": "2025-09-11T22:12:59Z",
          "updated_at": "2025-09-19T23:07:10Z",
          "url": "https://github.com/facebook/react/pull/34472",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 231.20394662083334,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 231.20394662083334,
            "pr_age_days": 17.67112509068287,
            "rebase_force_push_count": 1,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 17,
            "critical_path_touched": false,
            "lines_added": 1267,
            "lines_removed": 50,
            "files_changed": 10,
            "test_coverage_delta": 40.0,
            "historical_regression_risk": 10.0
          },
          "dynamics_metrics": {
            "author_experience_score": 80.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 2,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 10,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 52.0,
            "blast_radius_score": 100.0,
            "dynamics_score": 0.0,
            "business_impact_score": 40.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a1 MEDIUM RISK \u2022 Stalled for 3+ days \u2022 Large code changes",
          "analyzed_at": "2025-09-29T19:49:24.209712"
        },
        {
          "pr_number": 34532,
          "title": "Improve clarity of \u2018Objects are not valid as a React child\u2019 error message. Closed #34530",
          "author": "ShivrajShelar99",
          "state": "open",
          "created_at": "2025-09-19T18:31:40Z",
          "updated_at": "2025-09-19T18:44:22Z",
          "url": "https://github.com/facebook/react/pull/34532",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 235.58526613472225,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 235.58526613472225,
            "pr_age_days": 9.824872200057872,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 10,
            "critical_path_touched": false,
            "lines_added": 25,
            "lines_removed": 28,
            "files_changed": 5,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 35.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 6,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 45.0,
            "blast_radius_score": 40.0,
            "dynamics_score": 25.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK \u2022 Stalled for 3+ days",
          "analyzed_at": "2025-09-29T19:49:28.958442"
        },
        {
          "pr_number": 34527,
          "title": "[compiler] Implement ValidateNoDerivedComputationsInEffects for calculate in render solvable cases",
          "author": "jorge-cab",
          "state": "open",
          "created_at": "2025-09-18T23:15:26Z",
          "updated_at": "2025-09-18T23:19:48Z",
          "url": "https://github.com/facebook/react/pull/34527",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 254.9973489,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 2,
            "time_waiting_for_reviewer_hours": 254.9973489,
            "pr_age_days": 10.627921944907406,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 4,
            "critical_path_touched": false,
            "lines_added": 428,
            "lines_removed": 179,
            "files_changed": 2,
            "test_coverage_delta": 0.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 100.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 2,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 55.0,
            "blast_radius_score": 31.0,
            "dynamics_score": 0.0,
            "business_impact_score": 16.0
          },
          "detailed_info": null,
          "ai_summary": "\u2705 LOW RISK \u2022 Stalled for 3+ days",
          "analyzed_at": "2025-09-29T19:49:38.457255"
        },
        {
          "pr_number": 34238,
          "title": "Rollout passChildrenWhenCloningPersistedNodes flag",
          "author": "javache",
          "state": "open",
          "created_at": "2025-08-20T12:57:25Z",
          "updated_at": "2025-09-18T11:01:59Z",
          "url": "https://github.com/facebook/react/pull/34238",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 267.29588044138893,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 267.29588044138893,
            "pr_age_days": 40.0571663146875,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 26,
            "critical_path_touched": false,
            "lines_added": 12,
            "lines_removed": 67,
            "files_changed": 13,
            "test_coverage_delta": 30.76923076923077,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 0.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 13,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 50.0,
            "blast_radius_score": 40.0,
            "dynamics_score": 40.0,
            "business_impact_score": 25.0
          },
          "detailed_info": null,
          "ai_summary": "\u26a1 MEDIUM RISK \u2022 Stalled for 3+ days",
          "analyzed_at": "2025-09-29T19:49:44.170484"
        }
      ],
      "avg_delivery_risk_score": 34.513513513513516,
      "high_risk_pr_count": 3,
      "critical_risk_pr_count": 0,
      "team_velocity_impact": 34.513513513513516,
      "release_risk_assessment": "Low risk - most PRs are healthy"
    },
    "n8n-io/n8n": {
      "owner": "n8n-io",
      "repo": "n8n",
      "analyzed_at": "2025-10-02T16:08:06.967692",
      "total_prs_analyzed": 4,
      "pr_analyses": [
        {
          "pr_number": 20183,
          "title": "refactor(editor): Extract workflow editing utils to an injectable composable",
          "author": "CharlieKolb",
          "state": "open",
          "created_at": "2025-09-30T07:36:28Z",
          "updated_at": "2025-10-02T10:35:18Z",
          "url": "https://github.com/n8n-io/n8n/pull/20183",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 0.04298795472222223,
            "unresolved_review_threads": 3,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 0.04298795472222223,
            "pr_age_days": 2.1259809795949076,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 50,
            "critical_path_touched": false,
            "lines_added": 526,
            "lines_removed": 224,
            "files_changed": 37,
            "test_coverage_delta": 43.24324324324324,
            "historical_regression_risk": 60.0
          },
          "dynamics_metrics": {
            "author_experience_score": 65.0,
            "reviewer_load": 1,
            "approval_ratio": 0.5,
            "author_merge_history": 0,
            "avg_review_time_hours": 28.458333333333336
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 31,
            "priority_label": null,
            "affects_core_functionality": false
          },
          "composite_scores": {
            "stuckness_score": 12.0,
            "blast_radius_score": 100.0,
            "dynamics_score": 25.0,
            "business_impact_score": 25.0
          },
          "detailed_info": {
            "description": "## Summary\r\n\r\nFirst steps in extracting the workflow being edited/modified from the workflowsStore.\r\n\r\n## Related Linear tickets, Github issues, and Community forum posts\r\n\r\n\r\nhttps://linear.app/n8n/issue/ADO-4235\r\n\r\n\r\n## Review / Merge checklist\r\n\r\n- [ ] PR title and summary are descriptive. ([conventions](../blob/master/.github/pull_request_title_conventions.md)) <!--\r\n   **Remember, the title automatically goes into the changelog.\r\n   Use `(no-changelog)` otherwise.**\r\n-->\r\n- [ ] [Docs updated](https://github.com/n8n-io/n8n-docs) or follow-up ticket created.\r\n- [ ] Tests included. <!--\r\n   A bug is not considered fixed, unless a test is added to prevent it from happening again.\r\n   A feature is not complete without tests.\r\n-->\r\n- [ ] PR Labeled with `release/backport` (if the PR is an urgent fix that needs to be backported)\r\n",
            "body_text": "## Summary\r\n\r\nFirst steps in extracting the workflow being edited/modified from the workflowsStore.\r\n\r\n## Related Linear tickets, Github issues, and Community forum posts\r\n\r\n\r\nhttps://linear.app/n8n/issue/ADO-4235\r\n\r\n\r\n## Review / Merge checklist\r\n\r\n- [ ] PR title and summary are descriptive. ([conventions](../blob/master/.github/pull_request_title_conventions.md)) <!--\r\n   **Remember, the title automatically goes into the changelog.\r\n   Use `(no-changelog)` otherwise.**\r\n-->\r\n- [ ] [Docs updated](https://github.com/n8n-io/n8n-docs) or follow-up ticket created.\r\n- [ ] Tests included. <!--\r\n   A bug is not considered fixed, unless a test is added to prevent it from happening again.\r\n   A feature is not complete without tests.\r\n-->\r\n- [ ] PR Labeled with `release/backport` (if the PR is an urgent fix that needs to be backported)\r\n",
            "files": [
              {
                "filename": "packages/frontend/editor-ui/src/components/CommunityPlusEnrollmentModal.test.ts",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "patch": "@@ -33,6 +33,14 @@ vi.mock('@/composables/useTelemetry', () => {\n \t};\n });\n \n+vi.mock('@/composables/useWorkflowState', async () => {\n+\tconst actual = await vi.importActual('@/composables/useWorkflowState');\n+\treturn {\n+\t\t...actual,\n+\t\tinjectWorkflowState: vi.fn(),\n+\t};\n+});\n+\n const renderComponent = createComponentRenderer(CommunityPlusEnrollmentModal, {\n \tglobal: {\n \t\tstubs: {",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomponents%2FCommunityPlusEnrollmentModal.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/components/InputPanel.test.ts",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "patch": "@@ -12,6 +12,7 @@ import {\n } from 'n8n-workflow';\n import { setActivePinia } from 'pinia';\n import { mockedStore } from '../__tests__/utils';\n+import { useWorkflowState } from '@/composables/useWorkflowState';\n \n vi.mock('vue-router', () => {\n \treturn {\n@@ -54,6 +55,7 @@ const render = (props: Partial<Props> = {}, pinData?: INodeExecutionData[], runD\n \n \tconst workflow = createTestWorkflow({ nodes, connections });\n \tconst workflowStore = useWorkflowsStore();\n+\tconst workflowState = useWorkflowState();\n \n \tworkflowStore.setWorkflow(workflow);\n \n@@ -62,7 +64,7 @@ const render = (props: Partial<Props> = {}, pinData?: INodeExecutionData[], runD\n \t}\n \n \tif (runData) {\n-\t\tworkflowStore.setWorkflowExecutionData({\n+\t\tworkflowState.setWorkflowExecutionData({\n \t\t\tid: '',\n \t\t\tworkflowData: {\n \t\t\t\tid: '',",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomponents%2FInputPanel.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/components/NodeExecuteButton.test.ts",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "patch": "@@ -23,6 +23,7 @@ import { usePinnedData } from '@/composables/usePinnedData';\n import { useMessage } from '@/composables/useMessage';\n import { useToast } from '@/composables/useToast';\n import * as buttonParameterUtils from '@/components/ButtonParameter/utils';\n+import { useWorkflowState } from '@/composables/useWorkflowState';\n \n vi.mock('vue-router', () => ({\n \tuseRouter: () => ({}),\n@@ -276,7 +277,7 @@ describe('NodeExecuteButton', () => {\n \tit('stops execution when clicking button while workflow is running', async () => {\n \t\tworkflowsStore.isWorkflowRunning = true;\n \t\tnodeTypesStore.isTriggerNode = () => true;\n-\t\tworkflowsStore.setActiveExecutionId('test-execution-id');\n+\t\tuseWorkflowState().setActiveExecutionId('test-execution-id');\n \t\tworkflowsStore.isNodeExecuting.mockReturnValue(true);\n \t\tworkflowsStore.getNodeByName.mockReturnValue(\n \t\t\tmockNode({ name: 'test-node', type: SET_NODE_TYPE }),",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomponents%2FNodeExecuteButton.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/components/WorkflowSettings.vue",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "patch": "@@ -24,6 +24,7 @@ import { getResourcePermissions } from '@n8n/permissions';\n import { useI18n } from '@n8n/i18n';\n import { useTelemetry } from '@/composables/useTelemetry';\n import { useDebounce } from '@/composables/useDebounce';\n+import { injectWorkflowState } from '@/composables/useWorkflowState';\n \n import { ElCol, ElRow, ElSwitch } from 'element-plus';\n import { N8nButton, N8nIcon, N8nInput, N8nOption, N8nSelect, N8nTooltip } from '@n8n/design-system';\n@@ -38,6 +39,7 @@ const rootStore = useRootStore();\n const settingsStore = useSettingsStore();\n const sourceControlStore = useSourceControlStore();\n const workflowsStore = useWorkflowsStore();\n+const workflowState = injectWorkflowState();\n const workflowsEEStore = useWorkflowsEEStore();\n \n const isLoading = ref(true);\n@@ -365,7 +367,7 @@ const saveSettings = async () => {\n \n \tconst oldSettings = deepCopy(workflowsStore.workflowSettings);\n \n-\tworkflowsStore.setWorkflowSettings(localWorkflowSettings);\n+\tworkflowState.setWorkflowSettings(localWorkflowSettings);\n \n \tisLoading.value = false;\n ",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomponents%2FWorkflowSettings.vue",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useCanvasOperations.test.ts",
                "status": "modified",
                "additions": 30,
                "deletions": 6,
                "changes": 36,
                "patch": "@@ -8,7 +8,6 @@ import type {\n \tWorkflowExecuteMode,\n } from 'n8n-workflow';\n import { NodeConnectionTypes, NodeHelpers, UserError } from 'n8n-workflow';\n-import { useCanvasOperations } from '@/composables/useCanvasOperations';\n import type { CanvasConnection, CanvasNode } from '@/types';\n import { CanvasConnectionMode } from '@/types';\n import type {\n@@ -57,6 +56,11 @@ import type { CanvasLayoutEvent } from './useCanvasLayout';\n import { useTelemetry } from './useTelemetry';\n import { useToast } from '@/composables/useToast';\n import * as nodeHelpers from '@/composables/useNodeHelpers';\n+import {\n+\tinjectWorkflowState,\n+\tuseWorkflowState,\n+\ttype WorkflowState,\n+} from '@/composables/useWorkflowState';\n \n import { TelemetryHelpers } from 'n8n-workflow';\n import { useRouter } from 'vue-router';\n@@ -75,6 +79,8 @@ vi.mock('vue-router', () => ({\n \t}),\n }));\n \n+import { useCanvasOperations } from '@/composables/useCanvasOperations';\n+\n vi.mock('n8n-workflow', async (importOriginal) => {\n \t// eslint-disable-next-line @typescript-eslint/consistent-type-imports\n \tconst actual = await importOriginal<typeof import('n8n-workflow')>();\n@@ -118,6 +124,14 @@ vi.mock('@/composables/useToast', () => {\n \t};\n });\n \n+vi.mock('@/composables/useWorkflowState', async () => {\n+\tconst actual = await vi.importActual('@/composables/useWorkflowState');\n+\treturn {\n+\t\t...actual,\n+\t\tinjectWorkflowState: vi.fn(),\n+\t};\n+});\n+\n describe('useCanvasOperations', () => {\n \tconst workflowId = 'test';\n \tconst initialState = {\n@@ -140,10 +154,15 @@ describe('useCanvasOperations', () => {\n \t\t},\n \t};\n \n+\tlet workflowState: WorkflowState;\n+\n \tbeforeEach(() => {\n \t\tconst pinia = createTestingPinia({ initialState });\n \t\tsetActivePinia(pinia);\n \n+\t\tworkflowState = useWorkflowState();\n+\t\tvi.mocked(injectWorkflowState).mockReturnValue(workflowState);\n+\n \t\tvi.clearAllMocks();\n \t});\n \n@@ -2976,13 +2995,14 @@ describe('useCanvasOperations', () => {\n \t\t\t\t\tcredentialsUpdated: credentialsUpdatedRef,\n \t\t\t\t};\n \t\t\t});\n+\t\t\tconst resetStateSpy = vi.spyOn(workflowState, 'resetState');\n \n \t\t\tnodeCreatorStore.setNodeCreatorState = vi.fn();\n \t\t\tnodeCreatorStore.setShowScrim = vi.fn();\n \t\t\tworkflowsStore.removeTestWebhook = vi.fn();\n \t\t\tworkflowsStore.resetWorkflow = vi.fn();\n \t\t\tworkflowsStore.resetState = vi.fn();\n-\t\t\tworkflowsStore.setActiveExecutionId = vi.fn();\n+\t\t\tconst setActiveExecutionId = vi.spyOn(workflowState, 'setActiveExecutionId');\n \t\t\tuiStore.resetLastInteractedWith = vi.fn();\n \t\t\texecutionsStore.activeExecution = null;\n \n@@ -3017,9 +3037,9 @@ describe('useCanvasOperations', () => {\n \t\t\texpect(nodeCreatorStore.setShowScrim).toHaveBeenCalledWith(false);\n \t\t\texpect(workflowsStore.removeTestWebhook).toHaveBeenCalledWith('workflow-id');\n \t\t\texpect(workflowsStore.resetWorkflow).toHaveBeenCalled();\n-\t\t\texpect(workflowsStore.resetState).toHaveBeenCalled();\n+\t\t\texpect(resetStateSpy).toHaveBeenCalled();\n \t\t\texpect(workflowsStore.currentWorkflowExecutions).toEqual([]);\n-\t\t\texpect(workflowsStore.setActiveExecutionId).toHaveBeenCalledWith(undefined);\n+\t\t\texpect(setActiveExecutionId).toHaveBeenCalledWith(undefined);\n \t\t\texpect(uiStore.resetLastInteractedWith).toHaveBeenCalled();\n \t\t\texpect(uiStore.stateIsDirty).toBe(false);\n \t\t\texpect(executionsStore.activeExecution).toBeNull();\n@@ -3142,6 +3162,8 @@ describe('useCanvasOperations', () => {\n \t\tit('should initialize workspace and set execution data when execution is found', async () => {\n \t\t\tconst workflowsStore = mockedStore(useWorkflowsStore);\n \t\t\tconst uiStore = mockedStore(useUIStore);\n+\t\t\tconst setWorkflowExecutionData = vi.spyOn(workflowState, 'setWorkflowExecutionData');\n+\n \t\t\tconst { openExecution } = useCanvasOperations();\n \n \t\t\tconst executionId = '123';\n@@ -3159,7 +3181,7 @@ describe('useCanvasOperations', () => {\n \n \t\t\tconst result = await openExecution(executionId);\n \n-\t\t\texpect(workflowsStore.setWorkflowExecutionData).toHaveBeenCalledWith(executionData);\n+\t\t\texpect(setWorkflowExecutionData).toHaveBeenCalledWith(executionData);\n \t\t\texpect(uiStore.stateIsDirty).toBe(false);\n \t\t\texpect(result).toEqual(executionData);\n \t\t});\n@@ -3605,6 +3627,8 @@ describe('useCanvasOperations', () => {\n \t\t\t\trenameNode: vi.fn(),\n \t\t\t});\n \n+\t\t\tconst setWorkflowName = vi.spyOn(workflowState, 'setWorkflowName');\n+\n \t\t\tconst canvasOperations = useCanvasOperations();\n \t\t\tconst workflowDataWithName = {\n \t\t\t\tname: 'Test Workflow Name',\n@@ -3614,7 +3638,7 @@ describe('useCanvasOperations', () => {\n \n \t\t\tawait canvasOperations.importWorkflowData(workflowDataWithName, 'file');\n \n-\t\t\texpect(workflowsStore.setWorkflowName).toHaveBeenCalledWith({\n+\t\t\texpect(setWorkflowName).toHaveBeenCalledWith({\n \t\t\t\tnewName: 'Test Workflow Name',\n \t\t\t\tsetStateDirty: true,\n \t\t\t});",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseCanvasOperations.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useCanvasOperations.ts",
                "status": "modified",
                "additions": 6,
                "deletions": 4,
                "changes": 10,
                "patch": "@@ -105,6 +105,7 @@ import { deepCopy, NodeConnectionTypes, NodeHelpers, TelemetryHelpers } from 'n8\n import { computed, nextTick, ref } from 'vue';\n import { useClipboard } from '@/composables/useClipboard';\n import { useUniqueNodeName } from '@/composables/useUniqueNodeName';\n+import { injectWorkflowState } from '@/composables/useWorkflowState';\n import { isPresent } from '../utils/typesUtils';\n import { useProjectsStore } from '@/stores/projects.store';\n import type { CanvasLayoutEvent } from './useCanvasLayout';\n@@ -153,6 +154,7 @@ type AddNodeOptions = AddNodesBaseOptions & {\n export function useCanvasOperations() {\n \tconst rootStore = useRootStore();\n \tconst workflowsStore = useWorkflowsStore();\n+\tconst workflowState = injectWorkflowState();\n \tconst credentialsStore = useCredentialsStore();\n \tconst historyStore = useHistoryStore();\n \tconst uiStore = useUIStore();\n@@ -1659,9 +1661,9 @@ export function useCanvasOperations() {\n \n \t\t// Reset editable workflow state\n \t\tworkflowsStore.resetWorkflow();\n-\t\tworkflowsStore.resetState();\n+\t\tworkflowState.resetState();\n \t\tworkflowsStore.currentWorkflowExecutions = [];\n-\t\tworkflowsStore.setActiveExecutionId(undefined);\n+\t\tworkflowState.setActiveExecutionId(undefined);\n \n \t\t// Reset actions\n \t\tuiStore.resetLastInteractedWith();\n@@ -2018,7 +2020,7 @@ export function useCanvasOperations() {\n \t\t\t}\n \n \t\t\tif (workflowData.name) {\n-\t\t\t\tworkflowsStore.setWorkflowName({ newName: workflowData.name, setStateDirty: true });\n+\t\t\t\tworkflowState.setWorkflowName({ newName: workflowData.name, setStateDirty: true });\n \t\t\t}\n \n \t\t\treturn workflowData;\n@@ -2220,7 +2222,7 @@ export function useCanvasOperations() {\n \n \t\tinitializeWorkspace(data.workflowData);\n \n-\t\tworkflowsStore.setWorkflowExecutionData(data);\n+\t\tworkflowState.setWorkflowExecutionData(data);\n \n \t\tif (!['manual', 'evaluation'].includes(data.mode)) {\n \t\t\tworkflowsStore.setWorkflowPinData({});",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseCanvasOperations.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useExecutionDebugging.test.ts",
                "status": "modified",
                "additions": 23,
                "deletions": 3,
                "changes": 26,
                "patch": "@@ -1,6 +1,11 @@\n import { createTestingPinia } from '@pinia/testing';\n import { mockedStore } from '@/__tests__/utils';\n import { useWorkflowsStore } from '@/stores/workflows.store';\n+import {\n+\tinjectWorkflowState,\n+\tuseWorkflowState,\n+\ttype WorkflowState,\n+} from '@/composables/useWorkflowState';\n import { useExecutionDebugging } from './useExecutionDebugging';\n import type { INodeUi, IExecutionResponse } from '@/Interface';\n import type { Workflow } from 'n8n-workflow';\n@@ -15,15 +20,28 @@ vi.mock('@/composables/useToast', () => {\n \t};\n });\n \n+vi.mock('@/composables/useWorkflowState', async () => {\n+\tconst actual = await vi.importActual('@/composables/useWorkflowState');\n+\treturn {\n+\t\t...actual,\n+\t\tinjectWorkflowState: vi.fn(),\n+\t};\n+});\n+\n+let workflowState: WorkflowState;\n let executionDebugging: ReturnType<typeof useExecutionDebugging>;\n let toast: ReturnType<typeof useToast>;\n \n describe('useExecutionDebugging()', () => {\n \tbeforeEach(() => {\n \t\tvi.clearAllMocks();\n \t\tcreateTestingPinia();\n-\t\texecutionDebugging = useExecutionDebugging();\n \t\ttoast = useToast();\n+\n+\t\tworkflowState = useWorkflowState();\n+\t\tvi.mocked(injectWorkflowState).mockReturnValue(workflowState);\n+\n+\t\texecutionDebugging = useExecutionDebugging();\n \t});\n \n \tit('should not throw when runData node is an empty array', async () => {\n@@ -165,10 +183,11 @@ describe('useExecutionDebugging()', () => {\n \t\t\tpinData: {},\n \t\t\tgetParentNodes: vi.fn().mockReturnValue([]),\n \t\t} as unknown as Workflow;\n+\t\tconst setWorkflowExecutionData = vi.spyOn(workflowState, 'setWorkflowExecutionData');\n \n \t\tawait executionDebugging.applyExecutionData('1');\n \n-\t\texpect(workflowStore.setWorkflowExecutionData).toHaveBeenCalledWith(mockExecution);\n+\t\texpect(setWorkflowExecutionData).toHaveBeenCalledWith(mockExecution);\n \t\texpect(toast.showToast).toHaveBeenCalledWith(expect.objectContaining({ type: 'info' }));\n \t\texpect(toast.showToast).toHaveBeenCalledWith(expect.objectContaining({ type: 'warning' }));\n \t});\n@@ -195,10 +214,11 @@ describe('useExecutionDebugging()', () => {\n \t\t\tpinData: {},\n \t\t\tgetParentNodes: vi.fn().mockReturnValue([]),\n \t\t} as unknown as Workflow;\n+\t\tconst setWorkflowExecutionData = vi.spyOn(workflowState, 'setWorkflowExecutionData');\n \n \t\tawait executionDebugging.applyExecutionData('1');\n \n-\t\texpect(workflowStore.setWorkflowExecutionData).toHaveBeenCalledWith(mockExecution);\n+\t\texpect(setWorkflowExecutionData).toHaveBeenCalledWith(mockExecution);\n \t\texpect(toast.showToast).toHaveBeenCalledTimes(1);\n \t});\n });",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseExecutionDebugging.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useExecutionDebugging.ts",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "patch": "@@ -3,6 +3,7 @@ import { useRouter } from 'vue-router';\n import { useI18n } from '@n8n/i18n';\n import { useMessage } from '@/composables/useMessage';\n import { useToast } from '@/composables/useToast';\n+import { injectWorkflowState } from '@/composables/useWorkflowState';\n import {\n \tDEBUG_PAYWALL_MODAL_KEY,\n \tEnterpriseEditionFeature,\n@@ -27,6 +28,7 @@ export const useExecutionDebugging = () => {\n \tconst message = useMessage();\n \tconst toast = useToast();\n \tconst workflowsStore = useWorkflowsStore();\n+\tconst workflowState = injectWorkflowState();\n \tconst settingsStore = useSettingsStore();\n \tconst uiStore = useUIStore();\n \n@@ -98,8 +100,8 @@ export const useExecutionDebugging = () => {\n \t\t}\n \n \t\t// Set execution data\n-\t\tworkflowsStore.resetAllNodesIssues();\n-\t\tworkflowsStore.setWorkflowExecutionData(execution);\n+\t\tworkflowState.resetAllNodesIssues();\n+\t\tworkflowState.setWorkflowExecutionData(execution);\n \n \t\t// Pin data of all nodes which do not have a parent node\n \t\tconst pinnableNodes = workflowNodes.filter(",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseExecutionDebugging.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useNodeDirtiness.test.ts",
                "status": "modified",
                "additions": 5,
                "deletions": 2,
                "changes": 7,
                "patch": "@@ -13,6 +13,7 @@ import { createTestingPinia } from '@pinia/testing';\n import { NodeConnectionTypes, type IConnections, type IRunData } from 'n8n-workflow';\n import { defineComponent } from 'vue';\n import { createRouter, createWebHistory, type RouteLocationNormalizedLoaded } from 'vue-router';\n+import { useWorkflowState } from './useWorkflowState';\n \n describe(useNodeDirtiness, () => {\n \tlet nodeTypeStore: ReturnType<typeof useNodeTypesStore>;\n@@ -126,7 +127,8 @@ describe(useNodeDirtiness, () => {\n \n \t\t\tconst runAt = new Date(+WORKFLOW_UPDATED_AT + 1000);\n \n-\t\t\tworkflowsStore.setWorkflowExecutionData({\n+\t\t\tconst workflowState = useWorkflowState();\n+\t\t\tworkflowState.setWorkflowExecutionData({\n \t\t\t\tid: workflowsStore.workflow.id,\n \t\t\t\tfinished: true,\n \t\t\t\tmode: 'manual',\n@@ -434,7 +436,8 @@ describe(useNodeDirtiness, () => {\n \t\t\t});\n \t\t}\n \n-\t\tworkflowsStore.setWorkflowExecutionData({\n+\t\tconst workflowState = useWorkflowState();\n+\t\tworkflowState.setWorkflowExecutionData({\n \t\t\tid: workflow.id,\n \t\t\tfinished: true,\n \t\t\tmode: 'manual',",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseNodeDirtiness.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/usePushConnection/handlers/executionFinished.test.ts",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "patch": "@@ -9,6 +9,7 @@ import type { ITaskData } from 'n8n-workflow';\n import { EVALUATION_TRIGGER_NODE_TYPE } from 'n8n-workflow';\n import type { INodeUi } from '@/Interface';\n import type { Router } from 'vue-router';\n+import type { WorkflowState } from '@/composables/useWorkflowState';\n import { mockedStore } from '@/__tests__/utils';\n import { useWorkflowsStore } from '@/stores/workflows.store';\n import { createTestingPinia } from '@pinia/testing';\n@@ -201,6 +202,7 @@ describe('executionFinished', () => {\n \t\t\t},\n \t\t\t{\n \t\t\t\trouter: mock<Router>(),\n+\t\t\t\tworkflowState: mock<WorkflowState>(),\n \t\t\t},\n \t\t);\n ",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FusePushConnection%2Fhandlers%2FexecutionFinished.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/usePushConnection/handlers/executionFinished.ts",
                "status": "modified",
                "additions": 21,
                "deletions": 11,
                "changes": 32,
                "patch": "@@ -32,6 +32,7 @@ import { parse } from 'flatted';\n import type { ExpressionError, IDataObject, IRunExecutionData, IWorkflowBase } from 'n8n-workflow';\n import { EVALUATION_TRIGGER_NODE_TYPE, TelemetryHelpers } from 'n8n-workflow';\n import type { useRouter } from 'vue-router';\n+import { type WorkflowState } from '@/composables/useWorkflowState';\n \n export type SimplifiedExecution = Pick<\n \tIExecutionResponse,\n@@ -43,7 +44,7 @@ export type SimplifiedExecution = Pick<\n  */\n export async function executionFinished(\n \t{ data }: ExecutionFinished,\n-\toptions: { router: ReturnType<typeof useRouter> },\n+\toptions: { router: ReturnType<typeof useRouter>; workflowState: WorkflowState },\n ) {\n \tconst workflowsStore = useWorkflowsStore();\n \tconst uiStore = useUIStore();\n@@ -105,7 +106,7 @@ export async function executionFinished(\n \tlet successToastAlreadyShown = false;\n \n \tif (data.status === 'success') {\n-\t\thandleExecutionFinishedWithOther(successToastAlreadyShown);\n+\t\thandleExecutionFinishedWithOther(options.workflowState, successToastAlreadyShown);\n \t\tsuccessToastAlreadyShown = true;\n \t}\n \n@@ -124,10 +125,10 @@ export async function executionFinished(\n \t} else if (execution.status === 'error' || execution.status === 'canceled') {\n \t\thandleExecutionFinishedWithErrorOrCanceled(execution, runExecutionData);\n \t} else {\n-\t\thandleExecutionFinishedWithOther(successToastAlreadyShown);\n+\t\thandleExecutionFinishedWithOther(options.workflowState, successToastAlreadyShown);\n \t}\n \n-\tsetRunExecutionData(execution, runExecutionData);\n+\tsetRunExecutionData(execution, runExecutionData, options.workflowState);\n \n \tcontinueEvaluationLoop(execution, options.router);\n }\n@@ -345,13 +346,16 @@ export function handleExecutionFinishedWithErrorOrCanceled(\n  * immediately, even though we still need to fetch and deserialize the\n  * full execution data, to minimize perceived latency.\n  */\n-function handleExecutionFinishedSuccessfully(workflowName: string, message: string) {\n-\tconst workflowsStore = useWorkflowsStore();\n+function handleExecutionFinishedSuccessfully(\n+\tworkflowName: string,\n+\tmessage: string,\n+\tworkflowState: WorkflowState,\n+) {\n \tconst workflowHelpers = useWorkflowHelpers();\n \tconst toast = useToast();\n \n \tworkflowHelpers.setDocumentTitle(workflowName, 'IDLE');\n-\tworkflowsStore.setActiveExecutionId(undefined);\n+\tworkflowState.setActiveExecutionId(undefined);\n \ttoast.showMessage({\n \t\ttitle: message,\n \t\ttype: 'success',\n@@ -361,7 +365,10 @@ function handleExecutionFinishedSuccessfully(workflowName: string, message: stri\n /**\n  * Handle the case when the workflow execution finished successfully.\n  */\n-export function handleExecutionFinishedWithOther(successToastAlreadyShown: boolean) {\n+export function handleExecutionFinishedWithOther(\n+\tworkflowState: WorkflowState,\n+\tsuccessToastAlreadyShown: boolean,\n+) {\n \tconst workflowsStore = useWorkflowsStore();\n \tconst toast = useToast();\n \tconst i18n = useI18n();\n@@ -397,19 +404,22 @@ export function handleExecutionFinishedWithOther(successToastAlreadyShown: boole\n \t\t\thandleExecutionFinishedSuccessfully(\n \t\t\t\tworkflowName,\n \t\t\t\ti18n.baseText('pushConnection.nodeExecutedSuccessfully'),\n+\t\t\t\tworkflowState,\n \t\t\t);\n \t\t}\n \t} else if (!successToastAlreadyShown) {\n \t\thandleExecutionFinishedSuccessfully(\n \t\t\tworkflowName,\n \t\t\ti18n.baseText('pushConnection.workflowExecutedSuccessfully'),\n+\t\t\tworkflowState,\n \t\t);\n \t}\n }\n \n export function setRunExecutionData(\n \texecution: SimplifiedExecution,\n \trunExecutionData: IRunExecutionData,\n+\tworkflowState: WorkflowState,\n ) {\n \tconst workflowsStore = useWorkflowsStore();\n \tconst nodeHelpers = useNodeHelpers();\n@@ -422,14 +432,14 @@ export function setRunExecutionData(\n \t\treturn;\n \t}\n \n-\tworkflowsStore.setWorkflowExecutionData({\n+\tworkflowState.setWorkflowExecutionData({\n \t\t...workflowExecution,\n \t\tstatus: execution.status,\n \t\tid: execution.id,\n \t\tstoppedAt: execution.stoppedAt,\n \t});\n \tworkflowsStore.setWorkflowExecutionRunData(runExecutionData);\n-\tworkflowsStore.setActiveExecutionId(undefined);\n+\tworkflowState.setActiveExecutionId(undefined);\n \n \t// Set the node execution issues on all the nodes which produced an error so that\n \t// it can be displayed in the node-view\n@@ -446,7 +456,7 @@ export function setRunExecutionData(\n \t\t\trunExecutionData.resultData.runData[lastNodeExecuted][0].data?.main[0]?.length ?? 0;\n \t}\n \n-\tworkflowsStore.setActiveExecutionId(undefined);\n+\tworkflowState.setActiveExecutionId(undefined);\n \n \tvoid useExternalHooks().run('pushConnection.executionFinished', {\n \t\titemsCount,",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FusePushConnection%2Fhandlers%2FexecutionFinished.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/usePushConnection/handlers/executionRecovered.ts",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "patch": "@@ -10,10 +10,11 @@ import {\n } from './executionFinished';\n import { useWorkflowsStore } from '@/stores/workflows.store';\n import type { useRouter } from 'vue-router';\n+import type { WorkflowState } from '@/composables/useWorkflowState';\n \n export async function executionRecovered(\n \t{ data }: ExecutionRecovered,\n-\toptions: { router: ReturnType<typeof useRouter> },\n+\toptions: { router: ReturnType<typeof useRouter>; workflowState: WorkflowState },\n ) {\n \tconst workflowsStore = useWorkflowsStore();\n \tconst uiStore = useUIStore();\n@@ -39,8 +40,8 @@ export async function executionRecovered(\n \t} else if (execution.status === 'error' || execution.status === 'canceled') {\n \t\thandleExecutionFinishedWithErrorOrCanceled(execution, runExecutionData);\n \t} else {\n-\t\thandleExecutionFinishedWithOther(false);\n+\t\thandleExecutionFinishedWithOther(options.workflowState, false);\n \t}\n \n-\tsetRunExecutionData(execution, runExecutionData);\n+\tsetRunExecutionData(execution, runExecutionData, options.workflowState);\n }",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FusePushConnection%2Fhandlers%2FexecutionRecovered.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/usePushConnection/handlers/executionStarted.ts",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "patch": "@@ -1,18 +1,22 @@\n import type { ExecutionStarted } from '@n8n/api-types/push/execution';\n import { useWorkflowsStore } from '@/stores/workflows.store';\n import { parse } from 'flatted';\n+import type { WorkflowState } from '@/composables/useWorkflowState';\n \n /**\n  * Handles the 'executionStarted' event, which happens when a workflow is executed.\n  */\n-export async function executionStarted({ data }: ExecutionStarted) {\n+export async function executionStarted(\n+\t{ data }: ExecutionStarted,\n+\toptions: { workflowState: WorkflowState },\n+) {\n \tconst workflowsStore = useWorkflowsStore();\n \n \t// No workflow execution is ongoing, so we can ignore this event\n \tif (typeof workflowsStore.activeExecutionId === 'undefined') {\n \t\treturn;\n \t} else if (workflowsStore.activeExecutionId === null) {\n-\t\tworkflowsStore.setActiveExecutionId(data.executionId);\n+\t\toptions.workflowState.setActiveExecutionId(data.executionId);\n \t}\n \n \tif (workflowsStore.workflowExecutionData?.data && data.flattedRunData) {",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FusePushConnection%2Fhandlers%2FexecutionStarted.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/usePushConnection/handlers/testWebhookDeleted.ts",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "patch": "@@ -1,14 +1,18 @@\n import type { TestWebhookDeleted } from '@n8n/api-types/push/webhook';\n import { useWorkflowsStore } from '@/stores/workflows.store';\n+import type { WorkflowState } from '@/composables/useWorkflowState';\n \n /**\n  * Handles the 'testWebhookDeleted' push message, which is sent when a test webhook is deleted.\n  */\n-export async function testWebhookDeleted({ data }: TestWebhookDeleted) {\n+export async function testWebhookDeleted(\n+\t{ data }: TestWebhookDeleted,\n+\toptions: { workflowState: WorkflowState },\n+) {\n \tconst workflowsStore = useWorkflowsStore();\n \n \tif (data.workflowId === workflowsStore.workflowId) {\n \t\tworkflowsStore.executionWaitingForWebhook = false;\n-\t\tworkflowsStore.setActiveExecutionId(undefined);\n+\t\toptions.workflowState.setActiveExecutionId(undefined);\n \t}\n }",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FusePushConnection%2Fhandlers%2FtestWebhookDeleted.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/usePushConnection/handlers/testWebhookReceived.ts",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "patch": "@@ -1,14 +1,18 @@\n import type { TestWebhookReceived } from '@n8n/api-types/push/webhook';\n import { useWorkflowsStore } from '@/stores/workflows.store';\n+import type { WorkflowState } from '@/composables/useWorkflowState';\n \n /**\n  * Handles the 'testWebhookReceived' push message, which is sent when a test webhook is received.\n  */\n-export async function testWebhookReceived({ data }: TestWebhookReceived) {\n+export async function testWebhookReceived(\n+\t{ data }: TestWebhookReceived,\n+\toptions: { workflowState: WorkflowState },\n+) {\n \tconst workflowsStore = useWorkflowsStore();\n \n \tif (data.workflowId === workflowsStore.workflowId) {\n \t\tworkflowsStore.executionWaitingForWebhook = false;\n-\t\tworkflowsStore.setActiveExecutionId(data.executionId ?? null);\n+\t\toptions.workflowState.setActiveExecutionId(data.executionId ?? null);\n \t}\n }",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FusePushConnection%2Fhandlers%2FtestWebhookReceived.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/usePushConnection/handlers/workflowFailedToActivate.ts",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "patch": "@@ -1,17 +1,21 @@\n import type { WorkflowFailedToActivate } from '@n8n/api-types/push/workflow';\n import { useToast } from '@/composables/useToast';\n+import type { WorkflowState } from '@/composables/useWorkflowState';\n import { useI18n } from '@n8n/i18n';\n import { useWorkflowsStore } from '@/stores/workflows.store';\n \n-export async function workflowFailedToActivate({ data }: WorkflowFailedToActivate) {\n+export async function workflowFailedToActivate(\n+\t{ data }: WorkflowFailedToActivate,\n+\toptions: { workflowState: WorkflowState },\n+) {\n \tconst workflowsStore = useWorkflowsStore();\n \n \tif (workflowsStore.workflowId !== data.workflowId) {\n \t\treturn;\n \t}\n \n \tworkflowsStore.setWorkflowInactive(data.workflowId);\n-\tworkflowsStore.setActive(false);\n+\toptions.workflowState.setActive(false);\n \n \tconst toast = useToast();\n \tconst i18n = useI18n();",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FusePushConnection%2Fhandlers%2FworkflowFailedToActivate.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/usePushConnection/usePushConnection.test.ts",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "patch": "@@ -7,6 +7,7 @@ import type { TestWebhookReceived } from '@n8n/api-types/push/webhook';\n import type { BuilderCreditsPushMessage } from '@n8n/api-types/push/builder-credits';\n import { useRouter } from 'vue-router';\n import type { OnPushMessageHandler } from '@/stores/pushConnection.store';\n+import { createPinia, setActivePinia } from 'pinia';\n \n const removeEventListener = vi.fn();\n // eslint-disable-next-line @typescript-eslint/no-unused-vars\n@@ -45,6 +46,7 @@ vi.mock('vue-router', async () => {\n \t\tuseRouter: vi.fn().mockReturnValue({\n \t\t\tpush: vi.fn(),\n \t\t}),\n+\t\tuseRoute: vi.fn(),\n \t};\n });\n \n@@ -54,6 +56,8 @@ describe('usePushConnection composable', () => {\n \tbeforeEach(() => {\n \t\tvi.clearAllMocks();\n \n+\t\tsetActivePinia(createPinia());\n+\n \t\tconst router = useRouter();\n \t\tpushConnection = usePushConnection({ router });\n \t});\n@@ -87,7 +91,7 @@ describe('usePushConnection composable', () => {\n \n \t\t// Verify that the correct handler was called.\n \t\texpect(testWebhookReceived).toHaveBeenCalledTimes(1);\n-\t\texpect(testWebhookReceived).toHaveBeenCalledWith(testEvent);\n+\t\texpect(testWebhookReceived).toHaveBeenCalledWith(testEvent, expect.any(Object));\n \t});\n \n \tit('should call removeEventListener when terminate is called', () => {",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FusePushConnection%2FusePushConnection.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/usePushConnection/usePushConnection.ts",
                "status": "modified",
                "additions": 16,
                "deletions": 5,
                "changes": 21,
                "patch": "@@ -21,11 +21,22 @@ import {\n \tworkflowActivated,\n \tworkflowDeactivated,\n } from '@/composables/usePushConnection/handlers';\n+import { useWorkflowState, type WorkflowState } from '@/composables/useWorkflowState';\n import { createEventQueue } from '@n8n/utils/event-queue';\n import type { useRouter } from 'vue-router';\n \n-export function usePushConnection(options: { router: ReturnType<typeof useRouter> }) {\n+export function usePushConnection({\n+\trouter,\n+\tworkflowState,\n+}: {\n+\trouter: ReturnType<typeof useRouter>;\n+\tworkflowState?: WorkflowState;\n+}) {\n \tconst pushStore = usePushConnectionStore();\n+\tconst options = {\n+\t\trouter,\n+\t\tworkflowState: workflowState ?? useWorkflowState(),\n+\t};\n \n \tconst { enqueue } = createEventQueue<PushMessage>(processEvent);\n \n@@ -49,9 +60,9 @@ export function usePushConnection(options: { router: ReturnType<typeof useRouter\n \tasync function processEvent(event: PushMessage) {\n \t\tswitch (event.type) {\n \t\t\tcase 'testWebhookDeleted':\n-\t\t\t\treturn await testWebhookDeleted(event);\n+\t\t\t\treturn await testWebhookDeleted(event, options);\n \t\t\tcase 'testWebhookReceived':\n-\t\t\t\treturn await testWebhookReceived(event);\n+\t\t\t\treturn await testWebhookReceived(event, options);\n \t\t\tcase 'reloadNodeType':\n \t\t\t\treturn await reloadNodeType(event);\n \t\t\tcase 'removeNodeType':\n@@ -65,13 +76,13 @@ export function usePushConnection(options: { router: ReturnType<typeof useRouter\n \t\t\tcase 'nodeExecuteAfterData':\n \t\t\t\treturn await nodeExecuteAfterData(event);\n \t\t\tcase 'executionStarted':\n-\t\t\t\treturn await executionStarted(event);\n+\t\t\t\treturn await executionStarted(event, options);\n \t\t\tcase 'sendWorkerStatusMessage':\n \t\t\t\treturn await sendWorkerStatusMessage(event);\n \t\t\tcase 'sendConsoleMessage':\n \t\t\t\treturn await sendConsoleMessage(event);\n \t\t\tcase 'workflowFailedToActivate':\n-\t\t\t\treturn await workflowFailedToActivate(event);\n+\t\t\t\treturn await workflowFailedToActivate(event, options);\n \t\t\tcase 'executionFinished':\n \t\t\t\treturn await executionFinished(event, options);\n \t\t\tcase 'executionRecovered':",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FusePushConnection%2FusePushConnection.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useResolvedExpression.test.ts",
                "status": "modified",
                "additions": 16,
                "deletions": 2,
                "changes": 18,
                "patch": "@@ -5,6 +5,15 @@ import * as workflowHelpers from './useWorkflowHelpers';\n import { renderComponent } from '../__tests__/render';\n import { setActivePinia } from 'pinia';\n import { createTestingPinia } from '@pinia/testing';\n+import { injectWorkflowState, useWorkflowState, type WorkflowState } from './useWorkflowState';\n+\n+vi.mock('@/composables/useWorkflowState', async () => {\n+\tconst actual = await vi.importActual('@/composables/useWorkflowState');\n+\treturn {\n+\t\t...actual,\n+\t\tinjectWorkflowState: vi.fn(),\n+\t};\n+});\n \n async function renderTestComponent(...options: Parameters<typeof useResolvedExpression>) {\n \tlet resolvedExpression!: ReturnType<typeof useResolvedExpression>;\n@@ -31,10 +40,15 @@ const mockResolveExpression = () => {\n \treturn mock;\n };\n \n+let workflowState: WorkflowState;\n+\n describe('useResolvedExpression', () => {\n \tbeforeEach(() => {\n \t\tsetActivePinia(createTestingPinia({ stubActions: false }));\n \t\tvi.useFakeTimers();\n+\n+\t\tworkflowState = useWorkflowState();\n+\t\tvi.mocked(injectWorkflowState).mockReturnValue(workflowState);\n \t});\n \n \tafterEach(() => {\n@@ -105,7 +119,7 @@ describe('useResolvedExpression', () => {\n \t\tconst resolveExpressionSpy = mockResolveExpression();\n \t\tresolveExpressionSpy.mockImplementation(() => workflowsStore.workflow.name);\n \n-\t\tworkflowsStore.setWorkflowName({ newName: 'Old Name', setStateDirty: false });\n+\t\tworkflowState.setWorkflowName({ newName: 'Old Name', setStateDirty: false });\n \n \t\tconst { resolvedExpressionString } = await renderTestComponent({\n \t\t\texpression: '={{ $workflow.name }}',\n@@ -116,7 +130,7 @@ describe('useResolvedExpression', () => {\n \t\texpect(toValue(resolvedExpressionString)).toBe('Old Name');\n \n \t\t// Update name and expect re-resolution\n-\t\tworkflowsStore.setWorkflowName({ newName: 'New Name', setStateDirty: false });\n+\t\tworkflowState.setWorkflowName({ newName: 'New Name', setStateDirty: false });\n \t\tawait nextTick();\n \t\tvi.advanceTimersByTime(200);\n \t\texpect(toValue(resolvedExpressionString)).toBe('New Name');",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseResolvedExpression.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useRunWorkflow.test.ts",
                "status": "modified",
                "additions": 48,
                "deletions": 15,
                "changes": 63,
                "patch": "@@ -14,6 +14,11 @@ import type {\n } from 'n8n-workflow';\n \n import { useRunWorkflow } from '@/composables/useRunWorkflow';\n+import {\n+\tinjectWorkflowState,\n+\tuseWorkflowState,\n+\ttype WorkflowState,\n+} from '@/composables/useWorkflowState';\n import type { IExecutionResponse, IStartRunData } from '@/Interface';\n import type { WorkflowData } from '@n8n/rest-api-client/api/workflows';\n import { useWorkflowsStore } from '@/stores/workflows.store';\n@@ -37,7 +42,6 @@ vi.mock('@/stores/workflows.store', () => {\n \t\tsubWorkflowExecutionError: null,\n \t\tgetWorkflowRunData: null,\n \t\tworkflowExecutionData: null,\n-\t\tsetWorkflowExecutionData: vi.fn(),\n \t\tactiveExecutionId: undefined,\n \t\tpreviousExecutionId: undefined,\n \t\tnodesIssuesExist: false,\n@@ -56,9 +60,13 @@ vi.mock('@/stores/workflows.store', () => {\n \t\tincomingConnectionsByNodeName: vi.fn(),\n \t\toutgoingConnectionsByNodeName: vi.fn(),\n \t\tmarkExecutionAsStopped: vi.fn(),\n-\t\tsetActiveExecutionId: vi.fn((id: string | null | undefined) => {\n-\t\t\tstoreState.activeExecutionId = id;\n-\t\t}),\n+\t\tprivate: {\n+\t\t\tsetWorkflowSettings: vi.fn(),\n+\t\t\tsetActiveExecutionId: vi.fn((id: string | null | undefined) => {\n+\t\t\t\tstoreState.activeExecutionId = id;\n+\t\t\t}),\n+\t\t\tsetWorkflowName: vi.fn(),\n+\t\t},\n \t};\n \n \treturn {\n@@ -132,6 +140,16 @@ vi.mock('vue-router', async (importOriginal) => {\n \t};\n });\n \n+vi.mock('@/composables/useWorkflowState', async () => {\n+\tconst actual = await vi.importActual('@/composables/useWorkflowState');\n+\treturn {\n+\t\t...actual,\n+\t\tinjectWorkflowState: vi.fn(),\n+\t};\n+});\n+\n+let workflowState: WorkflowState;\n+\n describe('useRunWorkflow({ router })', () => {\n \tlet pushConnectionStore: ReturnType<typeof usePushConnectionStore>;\n \tlet uiStore: ReturnType<typeof useUIStore>;\n@@ -150,12 +168,18 @@ describe('useRunWorkflow({ router })', () => {\n \t\tworkflowsStore = useWorkflowsStore();\n \t\tagentRequestStore = useAgentRequestStore();\n \n+\t\tworkflowState = vi.mocked(useWorkflowState());\n+\t\t// vi.mocked(workflowState.setActiveExecutionId).mockImplementation((id: string | null | undefined) => {\n+\t\t// \tworkflowsStore.activeExecutionId = id;\n+\t\t// }\n+\t\tvi.mocked(injectWorkflowState).mockReturnValue(workflowState);\n+\n \t\trouter = useRouter();\n \t\tworkflowHelpers = useWorkflowHelpers();\n \t});\n \n \tafterEach(() => {\n-\t\tvi.mocked(workflowsStore).setActiveExecutionId(undefined);\n+\t\tworkflowState.setActiveExecutionId(undefined);\n \t\tvi.clearAllMocks();\n \t});\n \n@@ -171,6 +195,7 @@ describe('useRunWorkflow({ router })', () => {\n \t\t});\n \n \t\tit('should successfully run a workflow', async () => {\n+\t\t\tconst setActiveExecutionId = vi.spyOn(workflowState, 'setActiveExecutionId');\n \t\t\tconst { runWorkflowApi } = useRunWorkflow({ router });\n \n \t\t\tvi.mocked(pushConnectionStore).isConnected = true;\n@@ -181,8 +206,8 @@ describe('useRunWorkflow({ router })', () => {\n \t\t\tconst response = await runWorkflowApi({} as IStartRunData);\n \n \t\t\texpect(response).toEqual(mockResponse);\n-\t\t\texpect(workflowsStore.setActiveExecutionId).toHaveBeenNthCalledWith(1, null);\n-\t\t\texpect(workflowsStore.setActiveExecutionId).toHaveBeenNthCalledWith(2, '123');\n+\t\t\texpect(setActiveExecutionId).toHaveBeenNthCalledWith(1, null);\n+\t\t\texpect(setActiveExecutionId).toHaveBeenNthCalledWith(2, '123');\n \t\t\texpect(workflowsStore.executionWaitingForWebhook).toBe(false);\n \t\t});\n \n@@ -202,13 +227,14 @@ describe('useRunWorkflow({ router })', () => {\n \t\t});\n \n \t\tit('should handle workflow run failure', async () => {\n+\t\t\tconst setActiveExecutionId = vi.spyOn(workflowState, 'setActiveExecutionId');\n \t\t\tconst { runWorkflowApi } = useRunWorkflow({ router });\n \n \t\t\tvi.mocked(pushConnectionStore).isConnected = true;\n \t\t\tvi.mocked(workflowsStore).runWorkflow.mockRejectedValue(new Error('Failed to run workflow'));\n \n \t\t\tawait expect(runWorkflowApi({} as IStartRunData)).rejects.toThrow('Failed to run workflow');\n-\t\t\texpect(workflowsStore.setActiveExecutionId).toHaveBeenCalledWith(undefined);\n+\t\t\texpect(setActiveExecutionId).toHaveBeenCalledWith(undefined);\n \t\t});\n \n \t\tit('should set waitingForWebhook if response indicates waiting', async () => {\n@@ -399,7 +425,7 @@ describe('useRunWorkflow({ router })', () => {\n \n \t\tit('should return undefined if UI action \"workflowRunning\" is active', async () => {\n \t\t\tconst { runWorkflow } = useRunWorkflow({ router });\n-\t\t\tvi.mocked(workflowsStore).setActiveExecutionId('123');\n+\t\t\tworkflowState.setActiveExecutionId('123');\n \t\t\tconst result = await runWorkflow({});\n \t\t\texpect(result).toBeUndefined();\n \t\t});\n@@ -746,6 +772,9 @@ describe('useRunWorkflow({ router })', () => {\n \t\t\tvi.mocked(workflowHelpers).getWorkflowDataToSave.mockResolvedValue(workflowData);\n \t\t\tvi.mocked(workflowsStore).getWorkflowRunData = mockRunData;\n \t\t\tvi.mocked(agentRequestStore).getAgentRequest.mockReturnValue(agentRequest);\n+\n+\t\t\tconst setWorkflowExecutionData = vi.spyOn(workflowState, 'setWorkflowExecutionData');\n+\n \t\t\t// ACT\n \t\t\tconst result = await runWorkflow({ destinationNode: 'Test node' });\n \n@@ -771,8 +800,8 @@ describe('useRunWorkflow({ router })', () => {\n \t\t\t\tworkflowData,\n \t\t\t});\n \t\t\texpect(result).toEqual(mockExecutionResponse);\n-\t\t\texpect(workflowsStore.setWorkflowExecutionData).toHaveBeenCalledTimes(1);\n-\t\t\texpect(workflowsStore.setWorkflowExecutionData).toHaveBeenCalledWith(dataCaptor);\n+\t\t\texpect(setWorkflowExecutionData).toHaveBeenCalledTimes(1);\n+\t\t\texpect(setWorkflowExecutionData).toHaveBeenCalledWith(dataCaptor);\n \t\t\texpect(dataCaptor.value).toMatchObject({ data: { resultData: { runData: mockRunData } } });\n \t\t});\n \n@@ -794,13 +823,15 @@ describe('useRunWorkflow({ router })', () => {\n \t\t\t);\n \t\t\tvi.mocked(workflowsStore).getWorkflowRunData = mockRunData;\n \n+\t\t\tconst setWorkflowExecutionData = vi.spyOn(workflowState, 'setWorkflowExecutionData');\n+\n \t\t\t// ACT\n \t\t\tconst result = await runWorkflow({ destinationNode: 'some node name' });\n \n \t\t\t// ASSERT\n \t\t\texpect(result).toEqual(mockExecutionResponse);\n-\t\t\texpect(workflowsStore.setWorkflowExecutionData).toHaveBeenCalledTimes(1);\n-\t\t\texpect(workflowsStore.setWorkflowExecutionData).toHaveBeenCalledWith(dataCaptor);\n+\t\t\texpect(setWorkflowExecutionData).toHaveBeenCalledTimes(1);\n+\t\t\texpect(setWorkflowExecutionData).toHaveBeenCalledWith(dataCaptor);\n \t\t\texpect(dataCaptor.value).toMatchObject({ data: { resultData: { runData: mockRunData } } });\n \t\t});\n \n@@ -842,13 +873,15 @@ describe('useRunWorkflow({ router })', () => {\n \t\t\t\tnodes: [],\n \t\t\t} as unknown as WorkflowData);\n \n+\t\t\tconst setWorkflowExecutionData = vi.spyOn(workflowState, 'setWorkflowExecutionData');\n+\n \t\t\t// Simulate failed execution start\n \t\t\tvi.mocked(workflowsStore).runWorkflow.mockRejectedValueOnce(new Error());\n \n \t\t\tawait runWorkflow({});\n \n \t\t\texpect(workflowsStore.runWorkflow).toHaveBeenCalledTimes(1);\n-\t\t\texpect(workflowsStore.setWorkflowExecutionData).lastCalledWith(null);\n+\t\t\texpect(setWorkflowExecutionData).lastCalledWith(null);\n \t\t});\n \t});\n \n@@ -1001,7 +1034,7 @@ describe('useRunWorkflow({ router })', () => {\n \t\t\tconst getExecutionSpy = vi.spyOn(workflowsStore, 'getExecution');\n \n \t\t\tworkflowsStore.activeWorkflows = ['test-wf-id'];\n-\t\t\tworkflowsStore.setActiveExecutionId('test-exec-id');\n+\t\t\tworkflowState.setActiveExecutionId('test-exec-id');\n \t\t\tworkflowsStore.executionWaitingForWebhook = false;\n \n \t\t\tgetExecutionSpy.mockResolvedValue(executionData);",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseRunWorkflow.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useRunWorkflow.ts",
                "status": "modified",
                "additions": 9,
                "deletions": 7,
                "changes": 16,
                "patch": "@@ -47,6 +47,7 @@ import { useCanvasOperations } from './useCanvasOperations';\n import { useAgentRequestStore } from '@n8n/stores/useAgentRequestStore';\n import { useWorkflowSaving } from './useWorkflowSaving';\n import { computed } from 'vue';\n+import { injectWorkflowState } from './useWorkflowState';\n \n export function useRunWorkflow(useRunWorkflowOpts: { router: ReturnType<typeof useRouter> }) {\n \tconst nodeHelpers = useNodeHelpers();\n@@ -62,6 +63,7 @@ export function useRunWorkflow(useRunWorkflowOpts: { router: ReturnType<typeof u\n \tconst rootStore = useRootStore();\n \tconst pushConnectionStore = usePushConnectionStore();\n \tconst workflowsStore = useWorkflowsStore();\n+\tconst workflowState = injectWorkflowState();\n \tconst executionsStore = useExecutionsStore();\n \tconst { dirtinessByName } = useNodeDirtiness();\n \tconst { startChat } = useCanvasOperations();\n@@ -93,24 +95,24 @@ export function useRunWorkflow(useRunWorkflowOpts: { router: ReturnType<typeof u\n \t\tworkflowsStore.subWorkflowExecutionError = null;\n \n \t\t// Set the execution as started, but still waiting for the execution to be retrieved\n-\t\tworkflowsStore.setActiveExecutionId(null);\n+\t\tworkflowState.setActiveExecutionId(null);\n \n \t\tlet response: IExecutionPushResponse;\n \t\ttry {\n \t\t\tresponse = await workflowsStore.runWorkflow(runData);\n \t\t} catch (error) {\n-\t\t\tworkflowsStore.setActiveExecutionId(undefined);\n+\t\t\tworkflowState.setActiveExecutionId(undefined);\n \t\t\tthrow error;\n \t\t}\n \n \t\tconst workflowExecutionIdIsNew = workflowsStore.previousExecutionId !== response.executionId;\n \t\tconst workflowExecutionIdIsPending = workflowsStore.activeExecutionId === null;\n \t\tif (response.executionId && workflowExecutionIdIsNew && workflowExecutionIdIsPending) {\n-\t\t\tworkflowsStore.setActiveExecutionId(response.executionId);\n+\t\t\tworkflowState.setActiveExecutionId(response.executionId);\n \t\t}\n \n \t\tif (response.waitingForWebhook === true && workflowsStore.nodesIssuesExist) {\n-\t\t\tworkflowsStore.setActiveExecutionId(undefined);\n+\t\t\tworkflowState.setActiveExecutionId(undefined);\n \t\t\tthrow new Error(i18n.baseText('workflowRun.showError.resolveOutstandingIssues'));\n \t\t}\n \n@@ -369,7 +371,7 @@ export function useRunWorkflow(useRunWorkflowOpts: { router: ReturnType<typeof u\n \t\t\t\t\t...workflowData,\n \t\t\t\t} as IWorkflowDb,\n \t\t\t};\n-\t\t\tworkflowsStore.setWorkflowExecutionData(executionData);\n+\t\t\tworkflowState.setWorkflowExecutionData(executionData);\n \t\t\tnodeHelpers.updateNodesExecutionIssues();\n \n \t\t\tworkflowHelpers.setDocumentTitle(workflowObject.value.name as string, 'EXECUTING');\n@@ -406,7 +408,7 @@ export function useRunWorkflow(useRunWorkflowOpts: { router: ReturnType<typeof u\n \n \t\t\treturn runWorkflowApiResponse;\n \t\t} catch (error) {\n-\t\t\tworkflowsStore.setWorkflowExecutionData(null);\n+\t\t\tworkflowState.setWorkflowExecutionData(null);\n \t\t\tworkflowHelpers.setDocumentTitle(workflowObject.value.name as string, 'ERROR');\n \t\t\ttoast.showError(error, i18n.baseText('workflowRun.showError.title'));\n \t\t\treturn undefined;\n@@ -495,7 +497,7 @@ export function useRunWorkflow(useRunWorkflowOpts: { router: ReturnType<typeof u\n \t\t\t\t\tstartedAt: execution.startedAt,\n \t\t\t\t\tstoppedAt: execution.stoppedAt,\n \t\t\t\t} as IExecutionResponse;\n-\t\t\t\tworkflowsStore.setWorkflowExecutionData(executedData);\n+\t\t\t\tworkflowState.setWorkflowExecutionData(executedData);\n \t\t\t\ttoast.showMessage({\n \t\t\t\t\ttitle: i18n.baseText('nodeView.showMessage.stopExecutionCatch.title'),\n \t\t\t\t\tmessage: i18n.baseText('nodeView.showMessage.stopExecutionCatch.message'),",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseRunWorkflow.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useWorkflowHelpers.test.ts",
                "status": "modified",
                "additions": 24,
                "deletions": 6,
                "changes": 30,
                "patch": "@@ -20,16 +20,34 @@ import type { AssignmentCollectionValue, IConnections } from 'n8n-workflow';\n import * as apiWebhooks from '@n8n/rest-api-client/api/webhooks';\n import { mockedStore } from '@/__tests__/utils';\n import { SLACK_TRIGGER_NODE_TYPE } from '../constants';\n+import {\n+\tinjectWorkflowState,\n+\tuseWorkflowState,\n+\ttype WorkflowState,\n+} from '@/composables/useWorkflowState';\n+\n+vi.mock('@/composables/useWorkflowState', async () => {\n+\tconst actual = await vi.importActual('@/composables/useWorkflowState');\n+\treturn {\n+\t\t...actual,\n+\t\tinjectWorkflowState: vi.fn(),\n+\t};\n+});\n \n describe('useWorkflowHelpers', () => {\n \tlet workflowsStore: ReturnType<typeof mockedStore<typeof useWorkflowsStore>>;\n+\tlet workflowState: WorkflowState;\n \tlet workflowsEEStore: ReturnType<typeof useWorkflowsEEStore>;\n \tlet tagsStore: ReturnType<typeof useTagsStore>;\n \tlet uiStore: ReturnType<typeof useUIStore>;\n \n \tbeforeAll(() => {\n \t\tsetActivePinia(createTestingPinia());\n \t\tworkflowsStore = mockedStore(useWorkflowsStore);\n+\n+\t\tworkflowState = useWorkflowState();\n+\t\tvi.mocked(injectWorkflowState).mockReturnValue(workflowState);\n+\n \t\tworkflowsEEStore = useWorkflowsEEStore();\n \t\ttagsStore = useTagsStore();\n \t\tuiStore = useUIStore();\n@@ -212,17 +230,17 @@ describe('useWorkflowHelpers', () => {\n \t\t\t\ttags: [],\n \t\t\t});\n \t\t\tconst addWorkflowSpy = vi.spyOn(workflowsStore, 'addWorkflow');\n-\t\t\tconst setActiveSpy = vi.spyOn(workflowsStore, 'setActive');\n-\t\t\tconst setWorkflowIdSpy = vi.spyOn(workflowsStore, 'setWorkflowId');\n-\t\t\tconst setWorkflowNameSpy = vi.spyOn(workflowsStore, 'setWorkflowName');\n-\t\t\tconst setWorkflowSettingsSpy = vi.spyOn(workflowsStore, 'setWorkflowSettings');\n+\t\t\tconst setActiveSpy = vi.spyOn(workflowState, 'setActive');\n+\t\t\tconst setWorkflowIdSpy = vi.spyOn(workflowState, 'setWorkflowId');\n+\t\t\tconst setWorkflowNameSpy = vi.spyOn(workflowState, 'setWorkflowName');\n+\t\t\tconst setWorkflowSettingsSpy = vi.spyOn(workflowState, 'setWorkflowSettings');\n \t\t\tconst setWorkflowPinDataSpy = vi.spyOn(workflowsStore, 'setWorkflowPinData');\n \t\t\tconst setWorkflowVersionIdSpy = vi.spyOn(workflowsStore, 'setWorkflowVersionId');\n \t\t\tconst setWorkflowMetadataSpy = vi.spyOn(workflowsStore, 'setWorkflowMetadata');\n \t\t\tconst setWorkflowScopesSpy = vi.spyOn(workflowsStore, 'setWorkflowScopes');\n \t\t\tconst setUsedCredentialsSpy = vi.spyOn(workflowsStore, 'setUsedCredentials');\n \t\t\tconst setWorkflowSharedWithSpy = vi.spyOn(workflowsEEStore, 'setWorkflowSharedWith');\n-\t\t\tconst setWorkflowTagIdsSpy = vi.spyOn(workflowsStore, 'setWorkflowTagIds');\n+\t\t\tconst setWorkflowTagIdsSpy = vi.spyOn(workflowState, 'setWorkflowTagIds');\n \t\t\tconst upsertTagsSpy = vi.spyOn(tagsStore, 'upsertTags');\n \n \t\t\tinitState(workflowData);\n@@ -283,7 +301,7 @@ describe('useWorkflowHelpers', () => {\n \t\t\t\tmeta: {},\n \t\t\t\tscopes: [],\n \t\t\t});\n-\t\t\tconst setWorkflowTagIdsSpy = vi.spyOn(workflowsStore, 'setWorkflowTagIds');\n+\t\t\tconst setWorkflowTagIdsSpy = vi.spyOn(workflowState, 'setWorkflowTagIds');\n \t\t\tconst upsertTagsSpy = vi.spyOn(tagsStore, 'upsertTags');\n \n \t\t\tinitState(workflowData);",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseWorkflowHelpers.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useWorkflowHelpers.ts",
                "status": "modified",
                "additions": 8,
                "deletions": 6,
                "changes": 14,
                "patch": "@@ -64,6 +64,7 @@ import { useTagsStore } from '@/stores/tags.store';\n import { useWorkflowsEEStore } from '@/stores/workflows.ee.store';\n import { findWebhook } from '@n8n/rest-api-client/api/webhooks';\n import type { ExpressionLocalResolveContext } from '@/types/expressions';\n+import { injectWorkflowState } from '@/composables/useWorkflowState';\n \n export type ResolveParameterOptions = {\n \ttargetItem?: TargetItem;\n@@ -533,6 +534,7 @@ export function useWorkflowHelpers() {\n \tconst nodeTypesStore = useNodeTypesStore();\n \tconst rootStore = useRootStore();\n \tconst workflowsStore = useWorkflowsStore();\n+\tconst workflowState = injectWorkflowState();\n \tconst workflowsEEStore = useWorkflowsEEStore();\n \tconst uiStore = useUIStore();\n \tconst nodeHelpers = useNodeHelpers();\n@@ -876,7 +878,7 @@ export function useWorkflowHelpers() {\n \t\tworkflowsStore.setWorkflowVersionId(workflow.versionId);\n \n \t\tif (isCurrentWorkflow) {\n-\t\t\tworkflowsStore.setActive(!!workflow.active);\n+\t\t\tworkflowState.setActive(!!workflow.active);\n \t\t\tuiStore.stateIsDirty = false;\n \t\t}\n \n@@ -966,14 +968,14 @@ export function useWorkflowHelpers() {\n \n \tfunction initState(workflowData: IWorkflowDb) {\n \t\tworkflowsStore.addWorkflow(workflowData);\n-\t\tworkflowsStore.setActive(workflowData.active || false);\n+\t\tworkflowState.setActive(workflowData.active || false);\n \t\tworkflowsStore.setIsArchived(workflowData.isArchived);\n-\t\tworkflowsStore.setWorkflowId(workflowData.id);\n-\t\tworkflowsStore.setWorkflowName({\n+\t\tworkflowState.setWorkflowId(workflowData.id);\n+\t\tworkflowState.setWorkflowName({\n \t\t\tnewName: workflowData.name,\n \t\t\tsetStateDirty: uiStore.stateIsDirty,\n \t\t});\n-\t\tworkflowsStore.setWorkflowSettings(workflowData.settings ?? {});\n+\t\tworkflowState.setWorkflowSettings(workflowData.settings ?? {});\n \t\tworkflowsStore.setWorkflowPinData(workflowData.pinData ?? {});\n \t\tworkflowsStore.setWorkflowVersionId(workflowData.versionId);\n \t\tworkflowsStore.setWorkflowMetadata(workflowData.meta);\n@@ -992,7 +994,7 @@ export function useWorkflowHelpers() {\n \n \t\tconst tags = (workflowData.tags ?? []) as ITag[];\n \t\tconst tagIds = tags.map((tag) => tag.id);\n-\t\tworkflowsStore.setWorkflowTagIds(tagIds || []);\n+\t\tworkflowState.setWorkflowTagIds(tagIds || []);\n \t\ttagsStore.upsertTags(tags);\n \t}\n ",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseWorkflowHelpers.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useWorkflowSaving.ts",
                "status": "modified",
                "additions": 9,
                "deletions": 7,
                "changes": 16,
                "patch": "@@ -27,13 +27,15 @@ import { useNodeHelpers } from './useNodeHelpers';\n import { tryToParseNumber } from '@/utils/typesUtils';\n import { useTemplatesStore } from '@/stores/templates.store';\n import { useFocusPanelStore } from '@/stores/focusPanel.store';\n+import { useWorkflowState } from './useWorkflowState';\n \n export function useWorkflowSaving({ router }: { router: ReturnType<typeof useRouter> }) {\n \tconst uiStore = useUIStore();\n \tconst npsSurveyStore = useNpsSurveyStore();\n \tconst message = useMessage();\n \tconst i18n = useI18n();\n \tconst workflowsStore = useWorkflowsStore();\n+\tconst workflowState = useWorkflowState();\n \tconst focusPanelStore = useFocusPanelStore();\n \tconst nodeTypesStore = useNodeTypesStore();\n \tconst toast = useToast();\n@@ -228,13 +230,13 @@ export function useWorkflowSaving({ router }: { router: ReturnType<typeof useRou\n \t\t\tworkflowsStore.setWorkflowVersionId(workflowData.versionId);\n \n \t\t\tif (name) {\n-\t\t\t\tworkflowsStore.setWorkflowName({ newName: workflowData.name, setStateDirty: false });\n+\t\t\t\tworkflowState.setWorkflowName({ newName: workflowData.name, setStateDirty: false });\n \t\t\t}\n \n \t\t\tif (tags) {\n \t\t\t\tconst createdTags = (workflowData.tags || []) as ITag[];\n \t\t\t\tconst tagIds = createdTags.map((tag: ITag): string => tag.id);\n-\t\t\t\tworkflowsStore.setWorkflowTagIds(tagIds);\n+\t\t\t\tworkflowState.setWorkflowTagIds(tagIds);\n \t\t\t}\n \n \t\t\tuiStore.stateIsDirty = false;\n@@ -385,11 +387,11 @@ export function useWorkflowSaving({ router }: { router: ReturnType<typeof useRou\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tworkflowsStore.setActive(workflowData.active || false);\n-\t\t\tworkflowsStore.setWorkflowId(workflowData.id);\n+\t\t\tworkflowState.setActive(workflowData.active || false);\n+\t\t\tworkflowState.setWorkflowId(workflowData.id);\n \t\t\tworkflowsStore.setWorkflowVersionId(workflowData.versionId);\n-\t\t\tworkflowsStore.setWorkflowName({ newName: workflowData.name, setStateDirty: false });\n-\t\t\tworkflowsStore.setWorkflowSettings((workflowData.settings as IWorkflowSettings) || {});\n+\t\t\tworkflowState.setWorkflowName({ newName: workflowData.name, setStateDirty: false });\n+\t\t\tworkflowState.setWorkflowSettings((workflowData.settings as IWorkflowSettings) || {});\n \t\t\tuiStore.stateIsDirty = false;\n \t\t\tObject.keys(changedNodes).forEach((nodeName) => {\n \t\t\t\tconst changes = {\n@@ -402,7 +404,7 @@ export function useWorkflowSaving({ router }: { router: ReturnType<typeof useRou\n \n \t\t\tconst createdTags = (workflowData.tags || []) as ITag[];\n \t\t\tconst tagIds = createdTags.map((tag: ITag) => tag.id);\n-\t\t\tworkflowsStore.setWorkflowTagIds(tagIds);\n+\t\t\tworkflowState.setWorkflowTagIds(tagIds);\n \n \t\t\tconst templateId = router.currentRoute.value.query.templateId;\n \t\t\tif (templateId) {",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseWorkflowSaving.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useWorkflowState.test.ts",
                "status": "added",
                "additions": 29,
                "deletions": 0,
                "changes": 29,
                "patch": "@@ -0,0 +1,29 @@\n+import { useWorkflowsStore } from '@/stores/workflows.store';\n+import { useWorkflowState, type WorkflowState } from './useWorkflowState';\n+import { createPinia, setActivePinia } from 'pinia';\n+\n+describe('useWorkflowState', () => {\n+\tlet workflowsStore: ReturnType<typeof useWorkflowsStore>;\n+\tlet workflowState: WorkflowState;\n+\tbeforeEach(() => {\n+\t\tsetActivePinia(createPinia());\n+\n+\t\tworkflowsStore = useWorkflowsStore();\n+\t\tworkflowState = useWorkflowState();\n+\t});\n+\n+\tdescribe('setWorkflowName()', () => {\n+\t\tit('should set the workflow name correctly', () => {\n+\t\t\tworkflowState.setWorkflowName({\n+\t\t\t\tnewName: 'New Workflow Name',\n+\t\t\t\tsetStateDirty: false,\n+\t\t\t});\n+\t\t\texpect(workflowsStore.workflow.name).toBe('New Workflow Name');\n+\t\t});\n+\n+\t\tit('should propagate name to workflowObject for pre-exec expressions', () => {\n+\t\t\tworkflowState.setWorkflowName({ newName: 'WF Title', setStateDirty: false });\n+\t\t\texpect(workflowsStore.workflowObject.name).toBe('WF Title');\n+\t\t});\n+\t});\n+});",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseWorkflowState.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/composables/useWorkflowState.ts",
                "status": "added",
                "additions": 124,
                "deletions": 0,
                "changes": 124,
                "patch": "@@ -0,0 +1,124 @@\n+import { PLACEHOLDER_EMPTY_WORKFLOW_ID, WorkflowStateKey } from '@/constants';\n+import type { IExecutionResponse } from '@/Interface';\n+import { useUIStore } from '@/stores/ui.store';\n+import { useWorkflowsStore } from '@/stores/workflows.store';\n+import { getPairedItemsMapping } from '@/utils/pairedItemUtils';\n+import type { IWorkflowSettings } from 'n8n-workflow';\n+import { inject } from 'vue';\n+\n+export function useWorkflowState() {\n+\tconst ws = useWorkflowsStore();\n+\tconst uiStore = useUIStore();\n+\n+\tfunction removeAllConnections(data: { setStateDirty: boolean }): void {\n+\t\tif (data?.setStateDirty) {\n+\t\t\tuiStore.stateIsDirty = true;\n+\t\t}\n+\n+\t\tws.workflow.connections = {};\n+\t\tws.workflowObject.setConnections({});\n+\t}\n+\n+\tfunction removeAllNodes(data: { setStateDirty: boolean; removePinData: boolean }): void {\n+\t\tif (data.setStateDirty) {\n+\t\t\tuiStore.stateIsDirty = true;\n+\t\t}\n+\n+\t\tif (data.removePinData) {\n+\t\t\tws.workflow.pinData = {};\n+\t\t}\n+\n+\t\tws.workflow.nodes.splice(0, ws.workflow.nodes.length);\n+\t\tws.workflowObject.setNodes(ws.workflow.nodes);\n+\t\tws.nodeMetadata = {};\n+\t}\n+\n+\tfunction setWorkflowExecutionData(workflowResultData: IExecutionResponse | null) {\n+\t\tif (workflowResultData?.data?.waitTill) {\n+\t\t\tdelete workflowResultData.data.resultData.runData[\n+\t\t\t\tworkflowResultData.data.resultData.lastNodeExecuted as string\n+\t\t\t];\n+\t\t}\n+\t\tws.workflowExecutionData = workflowResultData;\n+\t\tws.workflowExecutionPairedItemMappings = getPairedItemsMapping(workflowResultData);\n+\t\tws.workflowExecutionResultDataLastUpdate = Date.now();\n+\t\tws.workflowExecutionStartedData = undefined;\n+\t}\n+\n+\tfunction resetAllNodesIssues(): boolean {\n+\t\tws.workflow.nodes.forEach((node) => {\n+\t\t\tnode.issues = undefined;\n+\t\t});\n+\t\treturn true;\n+\t}\n+\n+\tfunction setActive(active: boolean) {\n+\t\tws.workflow.active = active;\n+\t}\n+\n+\tfunction setWorkflowId(id?: string) {\n+\t\tws.workflow.id = !id || id === 'new' ? PLACEHOLDER_EMPTY_WORKFLOW_ID : id;\n+\t\tws.workflowObject.id = ws.workflow.id;\n+\t}\n+\n+\tfunction setWorkflowName(data: { newName: string; setStateDirty: boolean }) {\n+\t\tws.private.setWorkflowName(data);\n+\t}\n+\n+\tfunction setWorkflowSettings(workflowSettings: IWorkflowSettings) {\n+\t\tws.private.setWorkflowSettings(workflowSettings);\n+\t}\n+\n+\tfunction setWorkflowTagIds(tags: string[]) {\n+\t\tws.workflow.tags = tags;\n+\t}\n+\n+\tfunction setActiveExecutionId(id: string | null | undefined) {\n+\t\tws.private.setActiveExecutionId(id);\n+\t}\n+\n+\tfunction resetState() {\n+\t\tremoveAllConnections({ setStateDirty: false });\n+\t\tremoveAllNodes({ setStateDirty: false, removePinData: true });\n+\n+\t\tsetWorkflowExecutionData(null);\n+\t\tresetAllNodesIssues();\n+\n+\t\tsetActive(ws.defaults.active);\n+\t\tsetWorkflowId(PLACEHOLDER_EMPTY_WORKFLOW_ID);\n+\t\tsetWorkflowName({ newName: '', setStateDirty: false });\n+\t\tsetWorkflowSettings({ ...ws.defaults.settings });\n+\t\tsetWorkflowTagIds([]);\n+\n+\t\tsetActiveExecutionId(undefined);\n+\t\tws.executingNode.length = 0;\n+\t\tws.executionWaitingForWebhook = false;\n+\t}\n+\n+\treturn {\n+\t\tresetState,\n+\t\tremoveAllConnections,\n+\t\tremoveAllNodes,\n+\t\tsetWorkflowExecutionData,\n+\t\tresetAllNodesIssues,\n+\t\tsetActive,\n+\t\tsetWorkflowId,\n+\t\tsetWorkflowName,\n+\t\tsetWorkflowSettings,\n+\t\tsetWorkflowTagIds,\n+\t\tsetActiveExecutionId,\n+\t};\n+}\n+\n+export type WorkflowState = ReturnType<typeof useWorkflowState>;\n+\n+export function injectWorkflowState() {\n+\treturn inject(\n+\t\tWorkflowStateKey,\n+\t\t() => {\n+\t\t\tconsole.error('Attempted to inject workflowState outside of NodeView tree');\n+\t\t\treturn useWorkflowState();\n+\t\t},\n+\t\ttrue,\n+\t);\n+}",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fcomposables%2FuseWorkflowState.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/constants.ts",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "patch": "@@ -15,6 +15,7 @@ import type { ExpressionLocalResolveContext } from './types/expressions';\n import { DATA_STORE_MODULE_NAME } from './features/dataStore/constants';\n import type { TelemetryContext } from './types/telemetry';\n import type { IconName } from '@n8n/design-system/src/components/N8nIcon/icons';\n+import type { WorkflowState } from './composables/useWorkflowState';\n \n export const MAX_WORKFLOW_SIZE = 1024 * 1024 * 16; // Workflow size limit in bytes\n export const MAX_EXPECTED_REQUEST_SIZE = 2048; // Expected maximum workflow request metadata (i.e. headers) size in bytes\n@@ -1029,6 +1030,7 @@ export const ExpressionLocalResolveContextSymbol: InjectionKey<\n \tComputedRef<ExpressionLocalResolveContext | undefined>\n > = Symbol('ExpressionLocalResolveContext');\n export const TelemetryContextSymbol: InjectionKey<TelemetryContext> = Symbol('TelemetryContext');\n+export const WorkflowStateKey: InjectionKey<WorkflowState> = Symbol('WorkflowState');\n \n export const APP_MODALS_ELEMENT_ID = 'app-modals';\n export const CODEMIRROR_TOOLTIP_CONTAINER_ELEMENT_ID = 'cm-tooltip-container';",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Fconstants.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/features/logs/components/LogsPanel.test.ts",
                "status": "modified",
                "additions": 22,
                "deletions": 18,
                "changes": 40,
                "patch": "@@ -17,7 +17,7 @@ import {\n \tnodeTypes,\n } from '../__test__/data';\n import { useNodeTypesStore } from '@/stores/nodeTypes.store';\n-import { IN_PROGRESS_EXECUTION_ID } from '@/constants';\n+import { IN_PROGRESS_EXECUTION_ID, WorkflowStateKey } from '@/constants';\n import { useCanvasOperations } from '@/composables/useCanvasOperations';\n import { useNDVStore } from '@/stores/ndv.store';\n import { deepCopy } from 'n8n-workflow';\n@@ -31,6 +31,7 @@ import type { ChatMessage } from '@n8n/chat/types';\n import * as useChatMessaging from '@/features/logs/composables/useChatMessaging';\n import { chatEventBus } from '@n8n/chat/event-buses';\n import { useToast } from '@/composables/useToast';\n+import { useWorkflowState, type WorkflowState } from '@/composables/useWorkflowState';\n \n vi.mock('@/composables/useToast', () => {\n \tconst showMessage = vi.fn();\n@@ -61,6 +62,7 @@ describe('LogsPanel', () => {\n \tlet logsStore: ReturnType<typeof mockedStore<typeof useLogsStore>>;\n \tlet ndvStore: ReturnType<typeof mockedStore<typeof useNDVStore>>;\n \tlet uiStore: ReturnType<typeof mockedStore<typeof useUIStore>>;\n+\tlet workflowState: WorkflowState;\n \n \tlet aiChatExecutionResponse: typeof aiChatExecutionResponseTemplate;\n \n@@ -70,6 +72,7 @@ describe('LogsPanel', () => {\n \t\t\t\tprovide: {\n \t\t\t\t\t[ChatSymbol as symbol]: {},\n \t\t\t\t\t[ChatOptionsSymbol as symbol]: {},\n+\t\t\t\t\t[WorkflowStateKey as symbol]: workflowState,\n \t\t\t\t},\n \t\t\t\tplugins: [\n \t\t\t\t\tcreateRouter({\n@@ -94,7 +97,8 @@ describe('LogsPanel', () => {\n \t\tsetActivePinia(pinia);\n \n \t\tworkflowsStore = mockedStore(useWorkflowsStore);\n-\t\tworkflowsStore.setWorkflowExecutionData(null);\n+\t\tworkflowState = useWorkflowState();\n+\t\tworkflowState.setWorkflowExecutionData(null);\n \n \t\tlogsStore = mockedStore(useLogsStore);\n \t\tlogsStore.toggleOpen(false);\n@@ -154,7 +158,7 @@ describe('LogsPanel', () => {\n \tit('should render only output panel of selected node by default', async () => {\n \t\tlogsStore.toggleOpen(true);\n \t\tworkflowsStore.setWorkflow(aiManualWorkflow);\n-\t\tworkflowsStore.setWorkflowExecutionData(aiManualExecutionResponse);\n+\t\tworkflowState.setWorkflowExecutionData(aiManualExecutionResponse);\n \n \t\tconst rendered = render();\n \n@@ -168,7 +172,7 @@ describe('LogsPanel', () => {\n \tit('should render both input and output panel of selected node by default if it is sub node', async () => {\n \t\tlogsStore.toggleOpen(true);\n \t\tworkflowsStore.setWorkflow(aiChatWorkflow);\n-\t\tworkflowsStore.setWorkflowExecutionData(aiChatExecutionResponse);\n+\t\tworkflowState.setWorkflowExecutionData(aiChatExecutionResponse);\n \n \t\tconst rendered = render();\n \n@@ -211,7 +215,7 @@ describe('LogsPanel', () => {\n \n \tit('should open log details panel when a log entry is clicked in the logs overview panel', async () => {\n \t\tworkflowsStore.setWorkflow(aiChatWorkflow);\n-\t\tworkflowsStore.setWorkflowExecutionData(aiChatExecutionResponse);\n+\t\tworkflowState.setWorkflowExecutionData(aiChatExecutionResponse);\n \n \t\tconst rendered = render();\n \n@@ -228,7 +232,7 @@ describe('LogsPanel', () => {\n \n \tit(\"should show the button to toggle panel in the header of log details panel when it's opened\", async () => {\n \t\tworkflowsStore.setWorkflow(aiChatWorkflow);\n-\t\tworkflowsStore.setWorkflowExecutionData(aiChatExecutionResponse);\n+\t\tworkflowState.setWorkflowExecutionData(aiChatExecutionResponse);\n \n \t\tconst rendered = render();\n \n@@ -295,7 +299,7 @@ describe('LogsPanel', () => {\n \tit('should reflect changes to execution data in workflow store if execution is in progress', async () => {\n \t\tlogsStore.toggleOpen(true);\n \t\tworkflowsStore.setWorkflow(aiChatWorkflow);\n-\t\tworkflowsStore.setWorkflowExecutionData({\n+\t\tworkflowState.setWorkflowExecutionData({\n \t\t\t...aiChatExecutionResponse,\n \t\t\tid: IN_PROGRESS_EXECUTION_ID,\n \t\t\tstatus: 'running',\n@@ -352,7 +356,7 @@ describe('LogsPanel', () => {\n \t\texpect(await lastTreeItem.findByText('Success')).toBeInTheDocument();\n \t\texpect(lastTreeItem.getByText('in 33ms')).toBeInTheDocument();\n \n-\t\tworkflowsStore.setWorkflowExecutionData({\n+\t\tworkflowState.setWorkflowExecutionData({\n \t\t\t...workflowsStore.workflowExecutionData!,\n \t\t\tid: '1234',\n \t\t\tstatus: 'success',\n@@ -372,7 +376,7 @@ describe('LogsPanel', () => {\n \n \t\tworkflowsStore.setWorkflow(deepCopy(aiChatWorkflow));\n \t\tlogsStore.toggleOpen(true);\n-\t\tworkflowsStore.setWorkflowExecutionData({\n+\t\tworkflowState.setWorkflowExecutionData({\n \t\t\t...aiChatExecutionResponse,\n \t\t\tid: '2345',\n \t\t\tstatus: 'success',\n@@ -396,7 +400,7 @@ describe('LogsPanel', () => {\n \tit('should open NDV if the button is clicked', async () => {\n \t\tlogsStore.toggleOpen(true);\n \t\tworkflowsStore.setWorkflow(aiChatWorkflow);\n-\t\tworkflowsStore.setWorkflowExecutionData(aiChatExecutionResponse);\n+\t\tworkflowState.setWorkflowExecutionData(aiChatExecutionResponse);\n \n \t\tconst rendered = render();\n \t\tconst aiAgentRow = (await rendered.findAllByRole('treeitem'))[0];\n@@ -415,7 +419,7 @@ describe('LogsPanel', () => {\n \tit('should toggle subtree when chevron icon button is pressed', async () => {\n \t\tlogsStore.toggleOpen(true);\n \t\tworkflowsStore.setWorkflow(aiChatWorkflow);\n-\t\tworkflowsStore.setWorkflowExecutionData(aiChatExecutionResponse);\n+\t\tworkflowState.setWorkflowExecutionData(aiChatExecutionResponse);\n \n \t\tconst rendered = render();\n \t\tconst overview = within(rendered.getByTestId('logs-overview'));\n@@ -442,7 +446,7 @@ describe('LogsPanel', () => {\n \tit('should toggle input and output panel when the button is clicked', async () => {\n \t\tlogsStore.toggleOpen(true);\n \t\tworkflowsStore.setWorkflow(aiChatWorkflow);\n-\t\tworkflowsStore.setWorkflowExecutionData(aiChatExecutionResponse);\n+\t\tworkflowState.setWorkflowExecutionData(aiChatExecutionResponse);\n \n \t\tconst rendered = render();\n \n@@ -470,7 +474,7 @@ describe('LogsPanel', () => {\n \n \t\t// Create deep copy so that renaming doesn't affect other test cases\n \t\tworkflowsStore.setWorkflow(deepCopy(aiChatWorkflow));\n-\t\tworkflowsStore.setWorkflowExecutionData(aiChatExecutionResponse);\n+\t\tworkflowState.setWorkflowExecutionData(aiChatExecutionResponse);\n \n \t\tconst rendered = render();\n \n@@ -495,7 +499,7 @@ describe('LogsPanel', () => {\n \t\tbeforeEach(() => {\n \t\t\tlogsStore.toggleOpen(true);\n \t\t\tworkflowsStore.setWorkflow(aiChatWorkflow);\n-\t\t\tworkflowsStore.setWorkflowExecutionData(aiChatExecutionResponse);\n+\t\t\tworkflowState.setWorkflowExecutionData(aiChatExecutionResponse);\n \t\t});\n \n \t\tit('should allow to select previous and next row via keyboard shortcut', async () => {\n@@ -552,7 +556,7 @@ describe('LogsPanel', () => {\n \t\t\tconst canvasOperations = useCanvasOperations();\n \n \t\t\tworkflowsStore.setWorkflow(deepCopy(aiChatWorkflow));\n-\t\t\tworkflowsStore.setWorkflowExecutionData(aiChatExecutionResponse);\n+\t\t\tworkflowState.setWorkflowExecutionData(aiChatExecutionResponse);\n \n \t\t\tlogsStore.toggleLogSelectionSync(true);\n \n@@ -611,7 +615,7 @@ describe('LogsPanel', () => {\n \n \t\t\t\t// Verify message and response\n \t\t\t\texpect(await findByText('Hello AI!')).toBeInTheDocument();\n-\t\t\t\tworkflowsStore.setWorkflowExecutionData({\n+\t\t\t\tworkflowState.setWorkflowExecutionData({\n \t\t\t\t\t...aiChatExecutionResponse,\n \t\t\t\t\tstatus: 'success',\n \t\t\t\t});\n@@ -658,8 +662,8 @@ describe('LogsPanel', () => {\n \n \t\t\t\tawait waitFor(() => expect(queryByTestId('chat-message-typing')).toBeInTheDocument());\n \n-\t\t\t\tworkflowsStore.setActiveExecutionId(undefined);\n-\t\t\t\tworkflowsStore.setWorkflowExecutionData({ ...aiChatExecutionResponse, status: 'success' });\n+\t\t\t\tworkflowState.setActiveExecutionId(undefined);\n+\t\t\t\tworkflowState.setWorkflowExecutionData({ ...aiChatExecutionResponse, status: 'success' });\n \n \t\t\t\tawait waitFor(() => expect(queryByTestId('chat-message-typing')).not.toBeInTheDocument());\n \t\t\t});",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Ffeatures%2Flogs%2Fcomponents%2FLogsPanel.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/features/logs/composables/useChatState.ts",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "patch": "@@ -18,6 +18,7 @@ import { restoreChatHistory } from '@/features/logs/logs.utils';\n import type { INodeParameters } from 'n8n-workflow';\n import { isChatNode } from '@/utils/aiUtils';\n import { constructChatWebsocketUrl } from '@n8n/chat/utils';\n+import { injectWorkflowState } from '@/composables/useWorkflowState';\n \n type IntegratedChat = Omit<Chat, 'sendMessage'> & {\n \tsendMessage: (text: string, files: File[]) => Promise<void>;\n@@ -37,6 +38,7 @@ interface ChatState {\n export function useChatState(isReadOnly: boolean): ChatState {\n \tconst locale = useI18n();\n \tconst workflowsStore = useWorkflowsStore();\n+\tconst workflowState = injectWorkflowState();\n \tconst rootStore = useRootStore();\n \tconst logsStore = useLogsStore();\n \tconst router = useRouter();\n@@ -214,7 +216,7 @@ export function useChatState(isReadOnly: boolean): ChatState {\n \t}\n \n \tfunction refreshSession() {\n-\t\tworkflowsStore.setWorkflowExecutionData(null);\n+\t\tworkflowState.setWorkflowExecutionData(null);\n \t\tnodeHelpers.updateNodesExecutionIssues();\n \t\tlogsStore.resetChatSessionId();\n \t\tlogsStore.resetMessages();",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Ffeatures%2Flogs%2Fcomposables%2FuseChatState.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/frontend/editor-ui/src/features/logs/composables/useLogsExecutionData.test.ts",
                "status": "modified",
                "additions": 20,
                "deletions": 2,
                "changes": 22,
                "patch": "@@ -15,10 +15,25 @@ import {\n import type { IRunExecutionData } from 'n8n-workflow';\n import { stringify } from 'flatted';\n import { useToast } from '@/composables/useToast';\n+import {\n+\tinjectWorkflowState,\n+\tuseWorkflowState,\n+\ttype WorkflowState,\n+} from '@/composables/useWorkflowState';\n import { computed } from 'vue';\n \n vi.mock('@/composables/useToast');\n \n+vi.mock('@/composables/useWorkflowState', async () => {\n+\tconst actual = await vi.importActual('@/composables/useWorkflowState');\n+\treturn {\n+\t\t...actual,\n+\t\tinjectWorkflowState: vi.fn(),\n+\t};\n+});\n+\n+let workflowState: WorkflowState;\n+\n describe(useLogsExecutionData, () => {\n \tlet workflowsStore: ReturnType<typeof mockedStore<typeof useWorkflowsStore>>;\n \tlet nodeTypeStore: ReturnType<typeof mockedStore<typeof useNodeTypesStore>>;\n@@ -28,13 +43,16 @@ describe(useLogsExecutionData, () => {\n \n \t\tworkflowsStore = mockedStore(useWorkflowsStore);\n \n+\t\tworkflowState = useWorkflowState();\n+\t\tvi.mocked(injectWorkflowState).mockReturnValue(workflowState);\n+\n \t\tnodeTypeStore = mockedStore(useNodeTypesStore);\n \t\tnodeTypeStore.setNodeTypes(nodeTypes);\n \t});\n \n \tdescribe('isEnabled', () => {\n \t\tbeforeEach(() => {\n-\t\t\tworkflowsStore.setWorkflowExecutionData(\n+\t\t\tworkflowState.setWorkflowExecutionData(\n \t\t\t\tcreateTestWorkflowExecutionResponse({\n \t\t\t\t\tdata: { resultData: { runData: { n0: [createTestTaskData()] } } },\n \t\t\t\t\tworkflowData: createTestWorkflow({ nodes: [createTestNode({ name: 'n0' })] }),\n@@ -61,7 +79,7 @@ describe(useLogsExecutionData, () => {\n \t\tbeforeEach(() => {\n \t\t\tvi.useFakeTimers({ shouldAdvanceTime: true });\n \n-\t\t\tworkflowsStore.setWorkflowExecutionData(\n+\t\t\tworkflowState.setWorkflowExecutionData(\n \t\t\t\tcreateTestWorkflowExecutionResponse({\n \t\t\t\t\tid: 'e0',\n \t\t\t\t\tworkflowData: createTestWorkflow({",
                "blob_url": "https://github.com/n8n-io/n8n/blob/0701e354367ae15635ea36e871834c299c1d3e3e/packages%2Ffrontend%2Feditor-ui%2Fsrc%2Ffeatures%2Flogs%2Fcomposables%2FuseLogsExecutionData.test.ts",
                "previous_filename": null
              }
            ],
            "total_additions": 470,
            "total_deletions": 112,
            "total_changes": 582,
            "ci_checks": [
              {
                "name": "E2E - Checks",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:35:26Z",
                "completed_at": "2025-10-02T10:35:29Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51784444790",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51784444790"
              },
              {
                "name": "E2E / upload-to-currents",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:34:42Z",
                "completed_at": "2025-10-02T10:35:09Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51784398333",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51784398333"
              },
              {
                "name": "chromatic",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:28:04Z",
                "completed_at": "2025-10-02T10:28:04Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387985/job/51783962717",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387985/job/51783962717"
              },
              {
                "name": "Playwright / Test (Shard 3/7)",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:28:10Z",
                "completed_at": "2025-10-02T10:35:00Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952307",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952307"
              },
              {
                "name": "Playwright / Test (Shard 4/7)",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:28:09Z",
                "completed_at": "2025-10-02T10:34:52Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952298",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952298"
              },
              {
                "name": "E2E / testing (3)",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:28:09Z",
                "completed_at": "2025-10-02T10:33:49Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952296",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952296"
              },
              {
                "name": "Playwright / Test (Shard 5/7)",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:28:08Z",
                "completed_at": "2025-10-02T10:35:23Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952295",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952295"
              },
              {
                "name": "Playwright / Test (Shard 7/7)",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:28:09Z",
                "completed_at": "2025-10-02T10:34:53Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952291",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952291"
              },
              {
                "name": "Playwright / Test (Shard 6/7)",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:28:10Z",
                "completed_at": "2025-10-02T10:34:13Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952288",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952288"
              },
              {
                "name": "E2E / testing (4)",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:28:09Z",
                "completed_at": "2025-10-02T10:34:40Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952286",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952286"
              },
              {
                "name": "Playwright / Test (Shard 1/7)",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:28:08Z",
                "completed_at": "2025-10-02T10:35:03Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952283",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952283"
              },
              {
                "name": "Playwright / Test (Shard 2/7)",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:28:09Z",
                "completed_at": "2025-10-02T10:34:39Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952279",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952279"
              },
              {
                "name": "E2E / testing (5)",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:28:08Z",
                "completed_at": "2025-10-02T10:33:33Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952270",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952270"
              },
              {
                "name": "E2E / testing (1)",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:28:08Z",
                "completed_at": "2025-10-02T10:34:32Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952261",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952261"
              },
              {
                "name": "E2E / testing (2)",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:28:08Z",
                "completed_at": "2025-10-02T10:34:02Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952254",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783952254"
              },
              {
                "name": "Check Eligibility for Test Run / evaluate_conditions",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:27:49Z",
                "completed_at": "2025-10-02T10:27:55Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783941216",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387995/job/51783941216"
              },
              {
                "name": "MySQL 8.4",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:27:45Z",
                "completed_at": "2025-10-02T10:27:44Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387981/job/51783941146",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387981/job/51783941146"
              },
              {
                "name": "Postgres",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:27:45Z",
                "completed_at": "2025-10-02T10:27:44Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387981/job/51783941125",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387981/job/51783941125"
              },
              {
                "name": "Notify Slack on failure",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:27:45Z",
                "completed_at": "2025-10-02T10:27:44Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387981/job/51783941101",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387981/job/51783941101"
              },
              {
                "name": "SQLite Pooled",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:27:45Z",
                "completed_at": "2025-10-02T10:27:44Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387981/job/51783941092",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387981/job/51783941092"
              },
              {
                "name": "MariaDB",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:27:45Z",
                "completed_at": "2025-10-02T10:27:44Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387981/job/51783941090",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387981/job/51783941090"
              },
              {
                "name": "claude-code-action",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:27:45Z",
                "completed_at": "2025-10-02T10:27:44Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387982/job/51783941089",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387982/job/51783941089"
              },
              {
                "name": "changeset",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:27:58Z",
                "completed_at": "2025-10-02T10:28:04Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387985/job/51783941067",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387985/job/51783941067"
              },
              {
                "name": "Install & Build",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:27:44Z",
                "completed_at": "2025-10-02T10:27:44Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387981/job/51783941002",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387981/job/51783941002"
              },
              {
                "name": "notify",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:27:49Z",
                "completed_at": "2025-10-02T10:27:52Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190387974/job/51783940921",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190387974/job/51783940921"
              },
              {
                "name": "check-pr-title",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:12:38Z",
                "completed_at": "2025-10-02T10:12:43Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190042525/job/51782914098",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190042525/job/51782914098"
              },
              {
                "name": "Bundle Size Check",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:15:33Z",
                "completed_at": "2025-10-02T09:16:52Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18188611314/job/51779869927",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18188611314/job/51779869927"
              },
              {
                "name": "Lint / Lint",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:15:49Z",
                "completed_at": "2025-10-02T09:19:00Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18188611314/job/51779869909",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18188611314/job/51779869909"
              },
              {
                "name": "Unit tests / Unit tests",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:29:02Z",
                "completed_at": "2025-10-02T09:47:14Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18188611314/job/51779869826",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18188611314/job/51779869826"
              },
              {
                "name": "Install & Build",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:09:34Z",
                "completed_at": "2025-10-02T09:15:31Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18188611314/job/51779869731",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18188611314/job/51779869731"
              }
            ],
            "ci_status": "success",
            "timeline_metrics": {
              "time_to_first_review_hours": 6.063055555555556,
              "time_to_first_approval_hours": 50.853611111111114,
              "time_to_merge_hours": null,
              "first_commit_at": "2025-09-29T08:33:35Z",
              "last_commit_at": "2025-10-02T09:09:08Z",
              "time_from_first_to_last_commit_hours": 72.5925,
              "total_review_time_hours": null,
              "total_wait_time_hours": null,
              "number_of_review_cycles": 2
            },
            "comments": [
              {
                "id": 3351491803,
                "author": "codecov[bot]",
                "body": "## [Codecov](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) Report\n:x: Patch coverage is `70.85202%` with `65 lines` in your changes missing coverage. Please review.\n| [Files with missing lines](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) | Patch % | Lines |\n|---|---|---|\n| [...es/usePushConnection/handlers/executionFinished.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvZnJvbnRlbmQvZWRpdG9yLXVpL3NyYy9jb21wb3NhYmxlcy91c2VQdXNoQ29ubmVjdGlvbi9oYW5kbGVycy9leGVjdXRpb25GaW5pc2hlZC50cw==) | 10.00% | [18 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...tend/editor-ui/src/composables/useWorkflowState.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvZnJvbnRlbmQvZWRpdG9yLXVpL3NyYy9jb21wb3NhYmxlcy91c2VXb3JrZmxvd1N0YXRlLnRz) | 87.00% | [12 Missing and 1 partial :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...les/usePushConnection/handlers/executionStarted.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvZnJvbnRlbmQvZWRpdG9yLXVpL3NyYy9jb21wb3NhYmxlcy91c2VQdXNoQ29ubmVjdGlvbi9oYW5kbGVycy9leGVjdXRpb25TdGFydGVkLnRz) | 0.00% | [5 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...s/usePushConnection/handlers/testWebhookDeleted.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvZnJvbnRlbmQvZWRpdG9yLXVpL3NyYy9jb21wb3NhYmxlcy91c2VQdXNoQ29ubmVjdGlvbi9oYW5kbGVycy90ZXN0V2ViaG9va0RlbGV0ZWQudHM=) | 0.00% | [5 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [.../usePushConnection/handlers/testWebhookReceived.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvZnJvbnRlbmQvZWRpdG9yLXVpL3NyYy9jb21wb3NhYmxlcy91c2VQdXNoQ29ubmVjdGlvbi9oYW5kbGVycy90ZXN0V2ViaG9va1JlY2VpdmVkLnRz) | 0.00% | [5 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...ushConnection/handlers/workflowFailedToActivate.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvZnJvbnRlbmQvZWRpdG9yLXVpL3NyYy9jb21wb3NhYmxlcy91c2VQdXNoQ29ubmVjdGlvbi9oYW5kbGVycy93b3JrZmxvd0ZhaWxlZFRvQWN0aXZhdGUudHM=) | 0.00% | [5 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...s/usePushConnection/handlers/executionRecovered.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvZnJvbnRlbmQvZWRpdG9yLXVpL3NyYy9jb21wb3NhYmxlcy91c2VQdXNoQ29ubmVjdGlvbi9oYW5kbGVycy9leGVjdXRpb25SZWNvdmVyZWQudHM=) | 0.00% | [3 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...composables/usePushConnection/usePushConnection.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvZnJvbnRlbmQvZWRpdG9yLXVpL3NyYy9jb21wb3NhYmxlcy91c2VQdXNoQ29ubmVjdGlvbi91c2VQdXNoQ29ubmVjdGlvbi50cw==) | 78.57% | [3 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...nd/editor-ui/src/composables/useWorkflowHelpers.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvZnJvbnRlbmQvZWRpdG9yLXVpL3NyYy9jb21wb3NhYmxlcy91c2VXb3JrZmxvd0hlbHBlcnMudHM=) | 62.50% | [3 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...end/editor-ui/src/composables/useWorkflowSaving.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvZnJvbnRlbmQvZWRpdG9yLXVpL3NyYy9jb21wb3NhYmxlcy91c2VXb3JrZmxvd1NhdmluZy50cw==) | 66.66% | [3 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| ... and [2 more](https://app.codecov.io/gh/n8n-io/n8n/pull/20183?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) | |\n\n:loudspeaker: Thoughts on this report? [Let us know!](https://github.com/codecov/feedback/issues/255)",
                "created_at": "2025-09-30T11:19:13Z",
                "updated_at": "2025-10-02T09:47:20Z",
                "comment_type": "issue_comment",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              },
              {
                "id": 3351612369,
                "author": "bundlemon[bot]",
                "body": "<!-- bundlemon -->\n## BundleMon\n\n  \n<details open>\n<summary>Files added (2)</summary>\n\nStatus | Path | Size | Limits\n:------------: | ------------ | :------------: | :------------:\n:white_check_mark: | WASM Dependencies<br/><sub>tree-sitter-bash.wasm<br/></sub> | +181.26KB | -\n:white_check_mark: | WASM Dependencies<br/><sub>tree-sitter.wasm<br/></sub> | +74.47KB | -\n</details>\n\n  \n  \n  \n  \n  \n  \n\n\nTotal files change +255.73KB \n\n\n  \n<details open>\n<summary>Groups added (2)</summary>\n\nStatus | Path | Size | Limits\n:------------: | ------------ | :------------: | :------------:\n:white_check_mark: | **/*.js<br/> | +5.79MB | -\n:white_check_mark: | **/*.css<br/> | +195.75KB | -\n</details>\n\n  \n  \n  \n  \n  \n  \n\n\nFinal result: :white_check_mark:\n\n[View report in BundleMon website \u27a1\ufe0f](https://app.bundlemon.dev/projects/684c498c954d58d7d57c55c5/reports/68de42f97e39ab49a77b5fce)\n\n---\n<p align=\"center\"><a href=\"https://app.bundlemon.dev/projects/684c498c954d58d7d57c55c5/reports?branch=workflowHandle&resolution=all\" target=\"_blank\" rel=\"noreferrer noopener\">Current branch size history</a></p>",
                "created_at": "2025-09-30T11:44:58Z",
                "updated_at": "2025-10-02T09:16:43Z",
                "comment_type": "issue_comment",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              },
              {
                "id": 3360417011,
                "author": "currents-bot[bot]",
                "body": "\n<!-- currents_comment_id: pw_I0yzoc -->\n<!-- currents_run_outcome: passed -->\n\n<p align=\"center\">\n<a href=\"https://app.currents.dev/run/498a481f7cd18a6c\">\u2705</a>\n</p>\n\n<p align=\"center\">\nE2E Tests: <span title=\"n8n\">n8n</span> tests <strong>passed</strong> after 4m 2.3s\n</p>\n\n<p align=\"center\">\n  <a href=\"https://app.currents.dev/run/498a481f7cd18a6c/specs?filter=PASSED\" title=\"Passed\">\ud83d\udfe2</a> 560  \u00b7  <a href=\"https://app.currents.dev/run/498a481f7cd18a6c/specs?filter=FAILED&filter=FAILING&filter=CANCELLED&filter=TIMED_OUT\" title=\"Failed\">\ud83d\udd34</a> 0  \u00b7  <a href=\"https://app.currents.dev/run/498a481f7cd18a6c\" title=\"Ignored\">\u26aa\ufe0f</a> 5\n</p>\n\n<p align=\"center\">\n<a href=\"https://app.currents.dev/run/498a481f7cd18a6c\" target=\"_blank\">View Run Details</a>\n</p>\n\n\n<details><summary>Run Details</summary>\n<p>\n\n- Project: n8n\n- Groups: 3\n- Framework: Playwright\n\n- Run Status: Passed\n- Commit: 0701e354367ae15635ea36e871834c299c1d3e3e\n- Spec files: 101\n- Overall tests: 565\n- Duration: 4m 2.3s\n- Parallelization: 9\n\n</p>\n</details>\n\n\n\n\n\n\n<details><summary>Groups</summary>\n<p>\n\n| GroupId | Results | Spec Files Progress |\n| ------------- | ------------- | ------------- |\n| ui | <a href=\"https://app.currents.dev/run/498a481f7cd18a6c/specs?filter=PASSED\" title=\"Passed\">\ud83d\udfe2</a> 415  \u00b7  <a href=\"https://app.currents.dev/run/498a481f7cd18a6c/specs?filter=FAILED&filter=FAILING&filter=CANCELLED&filter=TIMED_OUT\" title=\"Failed\">\ud83d\udd34</a> 0  \u00b7  <a href=\"https://app.currents.dev/run/498a481f7cd18a6c\" title=\"Ignored\">\u26aa\ufe0f</a> 5 | 77 / 77\n| ui:isolated | <a href=\"https://app.currents.dev/run/498a481f7cd18a6c/specs?filter=PASSED\" title=\"Passed\">\ud83d\udfe2</a> 25  \u00b7  <a href=\"https://app.currents.dev/run/498a481f7cd18a6c/specs?filter=FAILED&filter=FAILING&filter=CANCELLED&filter=TIMED_OUT\" title=\"Failed\">\ud83d\udd34</a> 0  \u00b7  <a href=\"https://app.currents.dev/run/498a481f7cd18a6c\" title=\"Ignored\">\u26aa\ufe0f</a> 0 | 4 / 4\n| No name | <a href=\"https://app.currents.dev/run/498a481f7cd18a6c/specs?filter=PASSED\" title=\"Passed\">\ud83d\udfe2</a> 120  \u00b7  <a href=\"https://app.currents.dev/run/498a481f7cd18a6c/specs?filter=FAILED&filter=FAILING&filter=CANCELLED&filter=TIMED_OUT\" title=\"Failed\">\ud83d\udd34</a> 0  \u00b7  <a href=\"https://app.currents.dev/run/498a481f7cd18a6c\" title=\"Ignored\">\u26aa\ufe0f</a> 0 | 20 / 20\n\n</p>\n</details>\n\n\n\n  ---\n  \n  <div>\n  This message was posted automatically by \n  <a href=\"https://currents.dev\" target=\"_blank\">currents.dev<a/> | <a href=\"https://app.currents.dev/organizations/683ca7740952a37f8abd2859/projects/I0yzoc\">Integration Settings</a>\n  </div>\n  \n",
                "created_at": "2025-10-02T10:34:50Z",
                "updated_at": "2025-10-02T10:35:18Z",
                "comment_type": "issue_comment",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              },
              {
                "id": 2391524225,
                "author": "cubic-dev-ai[bot]",
                "body": "<!-- metadata:{\"confidence\":9,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"sed -n '1,200p' packages/frontend/editor-ui/src/composables/useWorkflowHandle.ts\"}}]}]} -->\nRule violated: **Prefer Typeguards over Type casting**\n\nThis line relies on `as string` to narrow `lastNodeExecuted`, which conflicts with the \"Prefer Typeguards over Type casting\" rule. Please use a runtime check (e.g. verify the key is a string before deleting) so the type narrows without an assertion.\n\n<details>\n<summary>Prompt for AI agents</summary>\n\n~~~\nAddress the following comment on packages/frontend/editor-ui/src/composables/useWorkflowHandle.ts at line 39:\n\n<comment>This line relies on `as string` to narrow `lastNodeExecuted`, which conflicts with the &quot;Prefer Typeguards over Type casting&quot; rule. Please use a runtime check (e.g. verify the key is a string before deleting) so the type narrows without an assertion.</comment>\n\n<file context>\n@@ -0,0 +1,124 @@\n+\tfunction setWorkflowExecutionData(workflowResultData: IExecutionResponse | null) {\n+\t\tif (workflowResultData?.data?.waitTill) {\n+\t\t\tdelete workflowResultData.data.resultData.runData[\n+\t\t\t\tworkflowResultData.data.resultData.lastNodeExecuted as string\n+\t\t\t];\n+\t\t}\n</file context>\n~~~\n\n</details>\n\n<a href=\"https://www.cubic.dev/action/fix/violation/0f23f67b-781b-4275-bd16-aec4bfbff545\" target=\"_blank\" rel=\"noopener noreferrer\" data-no-image-dialog=\"true\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://cubic.dev/buttons/fix-with-cubic-dark.svg\">\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://cubic.dev/buttons/fix-with-cubic-light.svg\">\n    <img alt=\"Fix with Cubic\" src=\"https://cubic.dev/buttons/fix-with-cubic-dark.svg\">\n  </picture>\n</a>",
                "created_at": "2025-09-30T13:40:15Z",
                "updated_at": "2025-09-30T13:40:27Z",
                "comment_type": "review_comment",
                "in_reply_to_id": null,
                "path": "packages/frontend/editor-ui/src/composables/useWorkflowState.ts",
                "line": 39
              },
              {
                "id": 2391524234,
                "author": "cubic-dev-ai[bot]",
                "body": "<!-- metadata:{\"confidence\":8,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"cd /mnt/workspace && sed -n '200,260p' packages/frontend/editor-ui/src/composables/useWorkflowSaving.ts\"}}]},{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"cd /mnt/workspace && sed -n '360,420p' packages/frontend/editor-ui/src/composables/useWorkflowSaving.ts\"}}]},{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"cd /mnt/workspace && git diff -U0 HEAD packages/frontend/editor-ui/src/composables/useWorkflowSaving.ts\"}}]}]} -->\nRule violated: **Prefer Typeguards over Type casting**\n\n`(workflowData.settings as IWorkflowSettings)` narrows the server payload without verification, breaking the Prefer Typeguards over Type casting rule. Please introduce a guard or restructure the code so the type is validated before passing it along.\n\n<details>\n<summary>Prompt for AI agents</summary>\n\n~~~\nAddress the following comment on packages/frontend/editor-ui/src/composables/useWorkflowSaving.ts at line 394:\n\n<comment>`(workflowData.settings as IWorkflowSettings)` narrows the server payload without verification, breaking the Prefer Typeguards over Type casting rule. Please introduce a guard or restructure the code so the type is validated before passing it along.</comment>\n\n<file context>\n@@ -385,11 +387,11 @@ export function useWorkflowSaving({ router }: { router: ReturnType&lt;typeof useRou\n-\t\t\tworkflowsStore.setWorkflowName({ newName: workflowData.name, setStateDirty: false });\n-\t\t\tworkflowsStore.setWorkflowSettings((workflowData.settings as IWorkflowSettings) || {});\n+\t\t\tworkflowHandle.setWorkflowName({ newName: workflowData.name, setStateDirty: false });\n+\t\t\tworkflowHandle.setWorkflowSettings((workflowData.settings as IWorkflowSettings) || {});\n \t\t\tuiStore.stateIsDirty = false;\n \t\t\tObject.keys(changedNodes).forEach((nodeName) =&gt; {\n</file context>\n~~~\n\n</details>\n\n<a href=\"https://www.cubic.dev/action/fix/violation/d325c031-c8d0-46eb-99ea-c80c376afa44\" target=\"_blank\" rel=\"noopener noreferrer\" data-no-image-dialog=\"true\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://cubic.dev/buttons/fix-with-cubic-dark.svg\">\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://cubic.dev/buttons/fix-with-cubic-light.svg\">\n    <img alt=\"Fix with Cubic\" src=\"https://cubic.dev/buttons/fix-with-cubic-dark.svg\">\n  </picture>\n</a>",
                "created_at": "2025-09-30T13:40:15Z",
                "updated_at": "2025-09-30T13:40:25Z",
                "comment_type": "review_comment",
                "in_reply_to_id": null,
                "path": "packages/frontend/editor-ui/src/composables/useWorkflowSaving.ts",
                "line": 394
              },
              {
                "id": 2391524240,
                "author": "cubic-dev-ai[bot]",
                "body": "<!-- metadata:{\"confidence\":9,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"sed -n '1,200p' packages/frontend/editor-ui/src/composables/useWorkflowHandle.ts\"}}]},{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"rg -n -F \\\"useWorkflowHandle\\\" packages/frontend/editor-ui/src/stores/builder.store.test.ts\"}}]},{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"rg -n \\\"useWorkflowHandle'\\\" packages/frontend/editor-ui/src/stores/builder.store.test.ts\"}}]},{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"rg -n \\\"vi\\\\.mock\\\" packages/frontend/editor-ui/src/stores/builder.store.test.ts | head\"}}]},{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"rg -n -F \\\"@/composables/useWorkflowHandle\\\"\"}}]},{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"sed -n '120,140p' packages/frontend/editor-ui/src/stores/builder.store.test.ts\"}}]}]} -->\n`injectWorkflowHandle` is still the real composable export, so it has no `mockReturnValue`; this line will throw during test setup. Please mock the module before trying to stub it.\n\n<details>\n<summary>Prompt for AI agents</summary>\n\n~~~\nAddress the following comment on packages/frontend/editor-ui/src/stores/builder.store.test.ts at line 129:\n\n<comment>`injectWorkflowHandle` is still the real composable export, so it has no `mockReturnValue`; this line will throw during test setup. Please mock the module before trying to stub it.</comment>\n\n<file context>\n@@ -118,9 +125,14 @@ describe(&#39;AI Builder store&#39;, () =&gt; {\n-\t\t\tworkflowsStore.workflow.name = newName;\n-\t\t});\n+\t\tworkflowHandle = useWorkflowHandle();\n+\t\tvi.mocked(injectWorkflowHandle).mockReturnValue(workflowHandle);\n+\n+\t\tsetWorkflowNameSpy = vi\n</file context>\n~~~\n\n</details>\n\n\u2705 Addressed in [`d47bf3b`](https://github.com/n8n-io/n8n/commit/d47bf3b4ee90bebde88ef8c3e10b62565be8a1b7)",
                "created_at": "2025-09-30T13:40:15Z",
                "updated_at": "2025-10-01T09:01:06Z",
                "comment_type": "review_comment",
                "in_reply_to_id": null,
                "path": "packages/frontend/editor-ui/src/stores/builder.store.test.ts",
                "line": 129
              },
              {
                "id": 3284894599,
                "author": "cubic-dev-ai[bot]",
                "body": "**3 issues found** across 33 files\n\n<details>\n<summary>Prompt for AI agents (all 3 issues)</summary>\n\n~~~\n\nUnderstand the root cause of the following 3 issues and fix them.\n\n\n<file name=\"packages/frontend/editor-ui/src/composables/useWorkflowHandle.ts\">\n\n<violation number=\"1\" location=\"packages/frontend/editor-ui/src/composables/useWorkflowHandle.ts:39\">\nRule violated: **Prefer Typeguards over Type casting**\n\nThis line relies on `as string` to narrow `lastNodeExecuted`, which conflicts with the &quot;Prefer Typeguards over Type casting&quot; rule. Please use a runtime check (e.g. verify the key is a string before deleting) so the type narrows without an assertion.</violation>\n</file>\n\n<file name=\"packages/frontend/editor-ui/src/composables/useWorkflowSaving.ts\">\n\n<violation number=\"1\" location=\"packages/frontend/editor-ui/src/composables/useWorkflowSaving.ts:394\">\nRule violated: **Prefer Typeguards over Type casting**\n\n`(workflowData.settings as IWorkflowSettings)` narrows the server payload without verification, breaking the Prefer Typeguards over Type casting rule. Please introduce a guard or restructure the code so the type is validated before passing it along.</violation>\n</file>\n\n<file name=\"packages/frontend/editor-ui/src/stores/builder.store.test.ts\">\n\n<violation number=\"1\" location=\"packages/frontend/editor-ui/src/stores/builder.store.test.ts:129\">\n`injectWorkflowHandle` is still the real composable export, so it has no `mockReturnValue`; this line will throw during test setup. Please mock the module before trying to stub it.</violation>\n</file>\n\n~~~\n\n</details>\n\n<sub>React with \ud83d\udc4d or \ud83d\udc4e to teach cubic. Mention `@cubic-dev-ai` to give feedback, ask questions, or re-run the review.</sub>",
                "created_at": "2025-09-30T13:40:15Z",
                "updated_at": null,
                "comment_type": "review",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              }
            ],
            "total_comments": 7,
            "labels": [
              {
                "name": "n8n team",
                "color": "ffffff",
                "description": "Authored by the n8n team"
              }
            ],
            "linked_issues": [
              {
                "number": 39,
                "title": "Node connection arrow can be deleted in read-only execution view",
                "state": "closed",
                "url": "https://github.com/n8n-io/n8n/issues/39",
                "created_at": "2019-10-08T17:42:44Z",
                "closed_at": "2020-05-24T12:07:24Z",
                "labels": []
              }
            ],
            "review_summary": {
              "total_reviews": 2,
              "approved_count": 1,
              "changes_requested_count": 0,
              "commented_count": 1,
              "reviewers": [
                "alexgrozav",
                "cubic-dev-ai[bot]"
              ],
              "review_comments": [
                {
                  "id": 3284894599,
                  "author": "cubic-dev-ai[bot]",
                  "body": "**3 issues found** across 33 files\n\n<details>\n<summary>Prompt for AI agents (all 3 issues)</summary>\n\n~~~\n\nUnderstand the root cause of the following 3 issues and fix them.\n\n\n<file name=\"packages/frontend/editor-ui/src/composables/useWorkflowHandle.ts\">\n\n<violation number=\"1\" location=\"packages/frontend/editor-ui/src/composables/useWorkflowHandle.ts:39\">\nRule violated: **Prefer Typeguards over Type casting**\n\nThis line relies on `as string` to narrow `lastNodeExecuted`, which conflicts with the &quot;Prefer Typeguards over Type casting&quot; rule. Please use a runtime check (e.g. verify the key is a string before deleting) so the type narrows without an assertion.</violation>\n</file>\n\n<file name=\"packages/frontend/editor-ui/src/composables/useWorkflowSaving.ts\">\n\n<violation number=\"1\" location=\"packages/frontend/editor-ui/src/composables/useWorkflowSaving.ts:394\">\nRule violated: **Prefer Typeguards over Type casting**\n\n`(workflowData.settings as IWorkflowSettings)` narrows the server payload without verification, breaking the Prefer Typeguards over Type casting rule. Please introduce a guard or restructure the code so the type is validated before passing it along.</violation>\n</file>\n\n<file name=\"packages/frontend/editor-ui/src/stores/builder.store.test.ts\">\n\n<violation number=\"1\" location=\"packages/frontend/editor-ui/src/stores/builder.store.test.ts:129\">\n`injectWorkflowHandle` is still the real composable export, so it has no `mockReturnValue`; this line will throw during test setup. Please mock the module before trying to stub it.</violation>\n</file>\n\n~~~\n\n</details>\n\n<sub>React with \ud83d\udc4d or \ud83d\udc4e to teach cubic. Mention `@cubic-dev-ai` to give feedback, ask questions, or re-run the review.</sub>",
                  "created_at": "2025-09-30T13:40:15Z",
                  "updated_at": null,
                  "comment_type": "review",
                  "in_reply_to_id": null,
                  "path": null,
                  "line": null
                }
              ]
            },
            "commit_count": 22,
            "commits_authors": [
              "CharlieKolb"
            ],
            "mergeable": null,
            "mergeable_state": null,
            "draft": false,
            "requested_reviewers": [],
            "assignees": []
          },
          "ai_summary": "\u26a1 MEDIUM RISK",
          "analyzed_at": "2025-10-02T16:07:52.761344"
        },
        {
          "pr_number": 20269,
          "title": "feat(editor): Allow expressions to autocomplete project variables",
          "author": "guillaumejacquart",
          "state": "open",
          "created_at": "2025-10-01T15:55:24Z",
          "updated_at": "2025-10-02T10:14:26Z",
          "url": "https://github.com/n8n-io/n8n/pull/20269",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 0.39144034222222224,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 0.39144034222222224,
            "pr_age_days": 0.7795276068518519,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 50,
            "critical_path_touched": false,
            "lines_added": 1772,
            "lines_removed": 120,
            "files_changed": 40,
            "test_coverage_delta": 22.5,
            "historical_regression_risk": 40.0
          },
          "dynamics_metrics": {
            "author_experience_score": 65.0,
            "reviewer_load": 1,
            "approval_ratio": 1.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 0.0
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 32,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 0.0,
            "blast_radius_score": 100.0,
            "dynamics_score": 10.0,
            "business_impact_score": 40.0
          },
          "detailed_info": {
            "description": "## Summary\r\n\r\n<!--\r\nDescribe what the PR does and how to test.\r\nPhotos and videos are recommended.\r\n-->\r\n\r\n## Related Linear tickets, Github issues, and Community forum posts\r\n\r\n<!--\r\nInclude links to **Linear ticket** or Github issue or Community forum post.\r\nImportant in order to close *automatically* and provide context to reviewers.\r\nhttps://linear.app/n8n/issue/\r\n-->\r\n<!-- Use \"closes #<issue-number>\", \"fixes #<issue-number>\", or \"resolves #<issue-number>\" to automatically close issues when the PR is merged. -->\r\n\r\n\r\n## Review / Merge checklist\r\n\r\n- [ ] PR title and summary are descriptive. ([conventions](../blob/master/.github/pull_request_title_conventions.md)) <!--\r\n   **Remember, the title automatically goes into the changelog.\r\n   Use `(no-changelog)` otherwise.**\r\n-->\r\n- [ ] [Docs updated](https://github.com/n8n-io/n8n-docs) or follow-up ticket created.\r\n- [ ] Tests included. <!--\r\n   A bug is not considered fixed, unless a test is added to prevent it from happening again.\r\n   A feature is not complete without tests.\r\n-->\r\n- [ ] PR Labeled with `release/backport` (if the PR is an urgent fix that needs to be backported)\r\n",
            "body_text": "## Summary\r\n\r\n<!--\r\nDescribe what the PR does and how to test.\r\nPhotos and videos are recommended.\r\n-->\r\n\r\n## Related Linear tickets, Github issues, and Community forum posts\r\n\r\n<!--\r\nInclude links to **Linear ticket** or Github issue or Community forum post.\r\nImportant in order to close *automatically* and provide context to reviewers.\r\nhttps://linear.app/n8n/issue/\r\n-->\r\n<!-- Use \"closes #<issue-number>\", \"fixes #<issue-number>\", or \"resolves #<issue-number>\" to automatically close issues when the PR is merged. -->\r\n\r\n\r\n## Review / Merge checklist\r\n\r\n- [ ] PR title and summary are descriptive. ([conventions](../blob/master/.github/pull_request_title_conventions.md)) <!--\r\n   **Remember, the title automatically goes into the changelog.\r\n   Use `(no-changelog)` otherwise.**\r\n-->\r\n- [ ] [Docs updated](https://github.com/n8n-io/n8n-docs) or follow-up ticket created.\r\n- [ ] Tests included. <!--\r\n   A bug is not considered fixed, unless a test is added to prevent it from happening again.\r\n   A feature is not complete without tests.\r\n-->\r\n- [ ] PR Labeled with `release/backport` (if the PR is an urgent fix that needs to be backported)\r\n",
            "files": [
              {
                "filename": "packages/@n8n/api-types/src/dto/index.ts",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "patch": "@@ -48,6 +48,7 @@ export { PushWorkFolderRequestDto } from './source-control/push-work-folder-requ\n \n export { CreateCredentialDto } from './credentials/create-credential.dto';\n export { VariableListRequestDto } from './variables/variables-list-request.dto';\n+export { CreateVariableRequestDto } from './variables/create-variable-request.dto';\n export { CredentialsGetOneRequestQuery } from './credentials/credentials-get-one-request.dto';\n export { CredentialsGetManyRequestQuery } from './credentials/credentials-get-many-request.dto';\n export { GenerateCredentialNameRequestQuery } from './credentials/generate-credential-name.dto';",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fapi-types%2Fsrc%2Fdto%2Findex.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/api-types/src/dto/variables/__tests__/base.dto.test.ts",
                "status": "added",
                "additions": 247,
                "deletions": 0,
                "changes": 247,
                "patch": "@@ -0,0 +1,247 @@\n+import { BaseVariableRequestDto } from '../base.dto';\n+\n+describe('BaseVariableRequestDto', () => {\n+\tdescribe('Valid requests', () => {\n+\t\ttest.each([\n+\t\t\t{\n+\t\t\t\tname: 'valid key, type, and value',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VARIABLE',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'test value',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'MY_VARIABLE',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'test value',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'valid key with underscores',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_TEST_VARIABLE',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'MY_TEST_VARIABLE',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'valid key with numbers',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'VAR123',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'VAR123',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'valid key with mixed case',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MyVariable123',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'MyVariable123',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'minimum key length (1 character)',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'A',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'A',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'maximum key length (50 characters)',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'A'.repeat(50),\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'A'.repeat(50),\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'empty value',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: '',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: '',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'maximum value length (1000 characters)',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'x'.repeat(1000),\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'x'.repeat(1000),\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'type defaults to string when omitted',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t])('should validate $name', ({ request, parsedResult }) => {\n+\t\t\tconst result = BaseVariableRequestDto.safeParse(request);\n+\t\t\texpect(result.success).toBe(true);\n+\t\t\tif (parsedResult) {\n+\t\t\t\texpect(result.data).toMatchObject(parsedResult);\n+\t\t\t}\n+\t\t});\n+\t});\n+\n+\tdescribe('Invalid requests', () => {\n+\t\ttest.each([\n+\t\t\t{\n+\t\t\t\tname: 'empty key',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: '',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['key'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'key too long (51 characters)',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'A'.repeat(51),\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['key'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'key with invalid characters (hyphen)',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY-VARIABLE',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['key'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'key with invalid characters (space)',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY VARIABLE',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['key'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'key with invalid characters (special characters)',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY@VARIABLE!',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['key'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'value too long (1001 characters)',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'x'.repeat(1001),\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['value'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'invalid type',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'number',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['type'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'missing key',\n+\t\t\t\trequest: {\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['key'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'missing value',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['value'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'key is not a string',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 123,\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['key'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'value is not a string',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 123,\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['value'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'all fields invalid',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: '',\n+\t\t\t\t\ttype: 'invalid',\n+\t\t\t\t\tvalue: 'x'.repeat(1001),\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['key', 'type', 'value'],\n+\t\t\t},\n+\t\t])('should fail validation for $name', ({ request, expectedErrorPaths }) => {\n+\t\t\tconst result = BaseVariableRequestDto.safeParse(request);\n+\t\t\tconst issuesPaths = new Set(result.error?.issues.map((issue) => issue.path[0]));\n+\n+\t\t\texpect(result.success).toBe(false);\n+\t\t\texpect(new Set(issuesPaths)).toEqual(new Set(expectedErrorPaths));\n+\t\t});\n+\t});\n+});",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fapi-types%2Fsrc%2Fdto%2Fvariables%2F__tests__%2Fbase.dto.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/api-types/src/dto/variables/__tests__/create-variable-request.dto.test.ts",
                "status": "added",
                "additions": 164,
                "deletions": 0,
                "changes": 164,
                "patch": "@@ -0,0 +1,164 @@\n+import { CreateVariableRequestDto } from '../create-variable-request.dto';\n+\n+describe('CreateVariableRequestDto', () => {\n+\tdescribe('Valid requests', () => {\n+\t\ttest.each([\n+\t\t\t{\n+\t\t\t\tname: 'valid request with all fields',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VARIABLE',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'test value',\n+\t\t\t\t\tprojectId: '2gQLpmP5V4wOY627',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'MY_VARIABLE',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'test value',\n+\t\t\t\t\tprojectId: '2gQLpmP5V4wOY627',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'valid request without projectId',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VARIABLE',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'test value',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'MY_VARIABLE',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'test value',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'valid request with UUID projectId',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t\tprojectId: '550e8400-e29b-41d4-a716-446655440000',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t\tprojectId: '550e8400-e29b-41d4-a716-446655440000',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'valid request with type defaulting to string',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t\tprojectId: 'project123',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t\tprojectId: 'project123',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'valid request with all base validations',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'A'.repeat(50),\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'x'.repeat(1000),\n+\t\t\t\t\tprojectId: 'proj',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tkey: 'A'.repeat(50),\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'x'.repeat(1000),\n+\t\t\t\t\tprojectId: 'proj',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t])('should validate $name', ({ request, parsedResult }) => {\n+\t\t\tconst result = CreateVariableRequestDto.safeParse(request);\n+\t\t\texpect(result.success).toBe(true);\n+\t\t\tif (parsedResult) {\n+\t\t\t\texpect(result.data).toMatchObject(parsedResult);\n+\t\t\t}\n+\t\t});\n+\t});\n+\n+\tdescribe('Invalid requests', () => {\n+\t\ttest.each([\n+\t\t\t{\n+\t\t\t\tname: 'projectId too long (37 characters)',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t\tprojectId: 'a'.repeat(37),\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['projectId'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'projectId is not a string',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t\tprojectId: 123,\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['projectId'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'invalid key',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'INVALID-KEY',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t\tprojectId: 'project123',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['key'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'invalid value length',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'x'.repeat(1001),\n+\t\t\t\t\tprojectId: 'project123',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['value'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'invalid type',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: 'MY_VAR',\n+\t\t\t\t\ttype: 'number',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t\tprojectId: 'project123',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['type'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'empty key',\n+\t\t\t\trequest: {\n+\t\t\t\t\tkey: '',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value',\n+\t\t\t\t\tprojectId: 'project123',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['key'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'missing required fields (key and value)',\n+\t\t\t\trequest: {\n+\t\t\t\t\tprojectId: 'project123',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['key', 'value'],\n+\t\t\t},\n+\t\t])('should fail validation for $name', ({ request, expectedErrorPaths }) => {\n+\t\t\tconst result = CreateVariableRequestDto.safeParse(request);\n+\t\t\tconst issuesPaths = new Set(result.error?.issues.map((issue) => issue.path[0]));\n+\n+\t\t\texpect(result.success).toBe(false);\n+\t\t\texpect(new Set(issuesPaths)).toEqual(new Set(expectedErrorPaths));\n+\t\t});\n+\t});\n+});",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fapi-types%2Fsrc%2Fdto%2Fvariables%2F__tests__%2Fcreate-variable-request.dto.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/api-types/src/dto/variables/__tests__/variables-list-request.dto.test.ts",
                "status": "added",
                "additions": 96,
                "deletions": 0,
                "changes": 96,
                "patch": "@@ -0,0 +1,96 @@\n+import { VariableListRequestDto } from '../variables-list-request.dto';\n+\n+describe('VariableListRequestDto', () => {\n+\tdescribe('Valid requests', () => {\n+\t\ttest.each([\n+\t\t\t{\n+\t\t\t\tname: 'empty object (no filters)',\n+\t\t\t\trequest: {},\n+\t\t\t\tparsedResult: {},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'valid state filter',\n+\t\t\t\trequest: {\n+\t\t\t\t\tstate: 'empty',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tstate: 'empty',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'valid projectId',\n+\t\t\t\trequest: {\n+\t\t\t\t\tprojectId: '2gQLpmP5V4wOY627',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tprojectId: '2gQLpmP5V4wOY627',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'valid state and projectId',\n+\t\t\t\trequest: {\n+\t\t\t\t\tstate: 'empty',\n+\t\t\t\t\tprojectId: '2gQLpmP5V4wOY627',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tstate: 'empty',\n+\t\t\t\t\tprojectId: '2gQLpmP5V4wOY627',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'valid projectId with UUID format',\n+\t\t\t\trequest: {\n+\t\t\t\t\tprojectId: '550e8400-e29b-41d4-a716-446655440000',\n+\t\t\t\t},\n+\t\t\t\tparsedResult: {\n+\t\t\t\t\tprojectId: '550e8400-e29b-41d4-a716-446655440000',\n+\t\t\t\t},\n+\t\t\t},\n+\t\t])('should validate $name', ({ request, parsedResult }) => {\n+\t\t\tconst result = VariableListRequestDto.safeParse(request);\n+\t\t\texpect(result.success).toBe(true);\n+\t\t\tif (parsedResult) {\n+\t\t\t\texpect(result.data).toMatchObject(parsedResult);\n+\t\t\t}\n+\t\t});\n+\t});\n+\n+\tdescribe('Invalid requests', () => {\n+\t\ttest.each([\n+\t\t\t{\n+\t\t\t\tname: 'invalid state value',\n+\t\t\t\trequest: {\n+\t\t\t\t\tstate: 'invalid',\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['state'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'state is not a string',\n+\t\t\t\trequest: {\n+\t\t\t\t\tstate: 123,\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['state'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'projectId too long (37 characters)',\n+\t\t\t\trequest: {\n+\t\t\t\t\tprojectId: 'a'.repeat(37),\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['projectId'],\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'projectId is not a string',\n+\t\t\t\trequest: {\n+\t\t\t\t\tprojectId: 123,\n+\t\t\t\t},\n+\t\t\t\texpectedErrorPaths: ['projectId'],\n+\t\t\t},\n+\t\t])('should fail validation for $name', ({ request, expectedErrorPaths }) => {\n+\t\t\tconst result = VariableListRequestDto.safeParse(request);\n+\t\t\tconst issuesPaths = new Set(result.error?.issues.map((issue) => issue.path[0]));\n+\n+\t\t\texpect(result.success).toBe(false);\n+\t\t\texpect(new Set(issuesPaths)).toEqual(new Set(expectedErrorPaths));\n+\t\t});\n+\t});\n+});",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fapi-types%2Fsrc%2Fdto%2Fvariables%2F__tests__%2Fvariables-list-request.dto.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/api-types/src/dto/variables/base.dto.ts",
                "status": "added",
                "additions": 20,
                "deletions": 0,
                "changes": 20,
                "patch": "@@ -0,0 +1,20 @@\n+import { z } from 'zod';\n+import { Z } from 'zod-class';\n+\n+export const KEY_NAME_REGEX = /^[A-Za-z0-9_]+$/;\n+export const KEY_MAX_LENGTH = 50;\n+export const VALUE_MAX_LENGTH = 1000;\n+export const TYPE_ENUM = ['string'] as const;\n+export const TYPE_DEFAULT: (typeof TYPE_ENUM)[number] = 'string';\n+\n+export class BaseVariableRequestDto extends Z.class({\n+\tkey: z\n+\t\t.string()\n+\t\t.min(1, 'key must be at least 1 character long')\n+\t\t.max(KEY_MAX_LENGTH, 'key cannot be longer than 50 characters')\n+\t\t.regex(KEY_NAME_REGEX, 'key can only contain characters A-Za-z0-9_'),\n+\ttype: z.enum(TYPE_ENUM).default(TYPE_DEFAULT),\n+\tvalue: z\n+\t\t.string()\n+\t\t.max(VALUE_MAX_LENGTH, `value cannot be longer than ${VALUE_MAX_LENGTH} characters`),\n+}) {}",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fapi-types%2Fsrc%2Fdto%2Fvariables%2Fbase.dto.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/api-types/src/dto/variables/create-variable-request.dto.ts",
                "status": "added",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "patch": "@@ -0,0 +1,7 @@\n+import { z } from 'zod';\n+\n+import { BaseVariableRequestDto } from './base.dto';\n+\n+export class CreateVariableRequestDto extends BaseVariableRequestDto.extend({\n+\tprojectId: z.string().max(36).optional(),\n+}) {}",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fapi-types%2Fsrc%2Fdto%2Fvariables%2Fcreate-variable-request.dto.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/api-types/src/dto/variables/variables-list-request.dto.ts",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "patch": "@@ -3,4 +3,5 @@ import { Z } from 'zod-class';\n \n export class VariableListRequestDto extends Z.class({\n \tstate: z.literal('empty').optional(),\n+\tprojectId: z.string().max(36).optional(),\n }) {}",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fapi-types%2Fsrc%2Fdto%2Fvariables%2Fvariables-list-request.dto.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/db/src/entities/variables.ts",
                "status": "modified",
                "additions": 9,
                "deletions": 1,
                "changes": 10,
                "patch": "@@ -1,6 +1,7 @@\n-import { Column, Entity } from '@n8n/typeorm';\n+import { Column, Entity, ManyToOne } from '@n8n/typeorm';\n \n import { WithStringId } from './abstract-entity';\n+import { Project } from './project';\n \n @Entity()\n export class Variables extends WithStringId {\n@@ -12,4 +13,11 @@ export class Variables extends WithStringId {\n \n \t@Column('text')\n \tvalue: string;\n+\n+\t// If null, it's a global variable\n+\t@ManyToOne('Project', {\n+\t\tonDelete: 'CASCADE',\n+\t\tnullable: true,\n+\t})\n+\tproject: Project | null;\n }",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fdb%2Fsrc%2Fentities%2Fvariables.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/db/src/migrations/dsl/index.ts",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "patch": "@@ -47,6 +47,7 @@ export const createSchemaBuilder = (tablePrefix: string, queryRunner: QueryRunne\n \t\tcolumnName: string,\n \t\treference: [string, string],\n \t\tcustomConstraintName?: string,\n+\t\tonDelete?: 'RESTRICT' | 'CASCADE' | 'NO ACTION' | 'SET NULL',\n \t) =>\n \t\tnew AddForeignKey(\n \t\t\ttableName,\n@@ -55,6 +56,7 @@ export const createSchemaBuilder = (tablePrefix: string, queryRunner: QueryRunne\n \t\t\ttablePrefix,\n \t\t\tqueryRunner,\n \t\t\tcustomConstraintName,\n+\t\t\tonDelete,\n \t\t),\n \n \tdropForeignKey: (",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fdb%2Fsrc%2Fmigrations%2Fdsl%2Findex.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/db/src/migrations/dsl/table.ts",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "patch": "@@ -145,6 +145,7 @@ abstract class ForeignKeyOperation extends TableOperation {\n \t\tprefix: string,\n \t\tqueryRunner: QueryRunner,\n \t\tcustomConstraintName?: string,\n+\t\tonDelete?: string,\n \t) {\n \t\tsuper(tableName, prefix, queryRunner);\n \n@@ -153,6 +154,7 @@ abstract class ForeignKeyOperation extends TableOperation {\n \t\t\tcolumnNames: [columnName],\n \t\t\treferencedTableName: `${prefix}${referencedTableName}`,\n \t\t\treferencedColumnNames: [referencedColumnName],\n+\t\t\tonDelete,\n \t\t});\n \t}\n }",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fdb%2Fsrc%2Fmigrations%2Fdsl%2Ftable.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/db/src/migrations/mysqldb/1758794506893-AddProjectIdToVariableTable.ts",
                "status": "added",
                "additions": 92,
                "deletions": 0,
                "changes": 92,
                "patch": "@@ -0,0 +1,92 @@\n+import type { MigrationContext, ReversibleMigration } from '../migration-types';\n+\n+const VARIABLES_TABLE_NAME = 'variables';\n+const UNIQUE_PROJECT_KEY_INDEX_NAME = 'variables_project_key_unique';\n+const UNIQUE_GLOBAL_KEY_INDEX_NAME = 'variables_global_key_unique';\n+const PROJECT_ID_FOREIGN_KEY_NAME = 'variables_projectId_foreign';\n+\n+/**\n+ * Adds a projectId column to the variables table to support project-scoped variables.\n+ * In MySQL, also adds a generated column (globalKey) to enforce uniqueness\n+ * for global variables (where projectId is null).\n+ */\n+export class AddProjectIdToVariableTable1758794506893 implements ReversibleMigration {\n+\tasync up({\n+\t\tschemaBuilder: { addColumns, column, dropIndex, addForeignKey },\n+\t\tqueryRunner,\n+\t\tescape,\n+\t}: MigrationContext) {\n+\t\tconst variablesTableName = escape.tableName(VARIABLES_TABLE_NAME);\n+\n+\t\t// Drop the old unique index on key\n+\t\tawait dropIndex(VARIABLES_TABLE_NAME, ['key'], { customIndexName: 'key' });\n+\n+\t\t// Add projectId and globalKey columns\n+\t\tawait addColumns(VARIABLES_TABLE_NAME, [column('projectId').varchar(36)]);\n+\n+\t\t// Add generated column for global uniqueness\n+\t\t// Null values are considered unique in MySQL, so we create a generated column\n+\t\t// that contains the key when projectId is null, and null otherwise.\n+\t\tawait queryRunner.query(`\n+\t\t\tALTER TABLE ${variablesTableName}\n+\t\t\tADD COLUMN globalKey VARCHAR(255) GENERATED ALWAYS AS (\n+\t\t\t\tCASE WHEN projectId IS NULL THEN \\`key\\` ELSE NULL END\n+\t\t\t) STORED;\n+\t\t`);\n+\n+\t\t// Add foreign key to project\n+\t\t// Create it after the generated column to avoid limits of mysql\n+\t\t// https://dev.mysql.com/doc/refman/8.4/en/create-table-foreign-keys.html\n+\t\t// \"A foreign key constraint on a stored generated column cannot use CASCADE\"\n+\t\tawait addForeignKey(\n+\t\t\tVARIABLES_TABLE_NAME,\n+\t\t\t'projectId',\n+\t\t\t['project', 'id'],\n+\t\t\tPROJECT_ID_FOREIGN_KEY_NAME,\n+\t\t);\n+\n+\t\t// Unique index for project-specific variables\n+\t\tawait queryRunner.query(`\n+\t\t\tCREATE UNIQUE INDEX ${UNIQUE_PROJECT_KEY_INDEX_NAME}\n+\t\t\tON ${variablesTableName} (projectId, \\`key\\`);\n+\t\t`);\n+\n+\t\t// Unique index for global variables\n+\t\tawait queryRunner.query(`\n+\t\t\tCREATE UNIQUE INDEX ${UNIQUE_GLOBAL_KEY_INDEX_NAME}\n+\t\t\tON ${variablesTableName} (globalKey);\n+\t\t`);\n+\t}\n+\n+\t// Down migration do not use typeorm helpers\n+\t// to prevent error with generated columns\n+\t// because typeorm tries to fetch the column details from typeorm metadata\n+\tasync down({ queryRunner, escape }: MigrationContext) {\n+\t\tconst variablesTableName = escape.tableName(VARIABLES_TABLE_NAME);\n+\n+\t\t// Delete the rows with a non-null projectId (data loss)\n+\t\tawait queryRunner.query(`DELETE FROM ${variablesTableName} WHERE projectId IS NOT NULL;`);\n+\n+\t\t// Drop the generated column index\n+\t\tawait queryRunner.query(`DROP INDEX ${UNIQUE_GLOBAL_KEY_INDEX_NAME} ON ${variablesTableName};`);\n+\n+\t\t// Drop the generated column\n+\t\tawait queryRunner.query(`ALTER TABLE ${variablesTableName} DROP COLUMN globalKey;`);\n+\n+\t\t// Drop the project id column, foreign key and its associated index\n+\t\tawait queryRunner.query(\n+\t\t\t`ALTER TABLE ${variablesTableName} DROP FOREIGN KEY ${PROJECT_ID_FOREIGN_KEY_NAME};`,\n+\t\t);\n+\n+\t\tawait queryRunner.query(\n+\t\t\t`DROP INDEX ${UNIQUE_PROJECT_KEY_INDEX_NAME} ON ${variablesTableName};`,\n+\t\t);\n+\n+\t\tawait queryRunner.query(`ALTER TABLE ${variablesTableName} DROP COLUMN projectId;`);\n+\n+\t\t// Reset the original unique index on key\n+\t\tawait queryRunner.query(\n+\t\t\t`ALTER TABLE ${variablesTableName} ADD CONSTRAINT \\`key\\` UNIQUE (\\`key\\`);`,\n+\t\t);\n+\t}\n+}",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fdb%2Fsrc%2Fmigrations%2Fmysqldb%2F1758794506893-AddProjectIdToVariableTable.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/db/src/migrations/mysqldb/index.ts",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "patch": "@@ -46,6 +46,7 @@ import { MigrateTestDefinitionKeyToString1731582748663 } from './1731582748663-M\n import { CreateTestMetricTable1732271325258 } from './1732271325258-CreateTestMetricTable';\n import { AddStatsColumnsToTestRun1736172058779 } from './1736172058779-AddStatsColumnsToTestRun';\n import { FixTestDefinitionPrimaryKey1739873751194 } from './1739873751194-FixTestDefinitionPrimaryKey';\n+import { AddProjectIdToVariableTable1758794506893 } from './1758794506893-AddProjectIdToVariableTable';\n import { CreateLdapEntities1674509946020 } from '../common/1674509946020-CreateLdapEntities';\n import { PurgeInvalidWorkflowConnections1675940580449 } from '../common/1675940580449-PurgeInvalidWorkflowConnections';\n import { RemoveResetPasswordColumns1690000000030 } from '../common/1690000000030-RemoveResetPasswordColumns';\n@@ -201,4 +202,5 @@ export const mysqlMigrations: Migration[] = [\n \tReplaceDataStoreTablesWithDataTables1754475614602,\n \tLinkRoleToProjectRelationTable1753953244168,\n \tAddTimestampsToRoleAndRoleIndexes1756906557570,\n+\tAddProjectIdToVariableTable1758794506893,\n ];",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fdb%2Fsrc%2Fmigrations%2Fmysqldb%2Findex.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/db/src/migrations/postgresdb/1758794506893-AddProjectIdToVariableTable.ts",
                "status": "added",
                "additions": 72,
                "deletions": 0,
                "changes": 72,
                "patch": "@@ -0,0 +1,72 @@\n+import type { MigrationContext, ReversibleMigration } from '../migration-types';\n+\n+const VARIABLES_TABLE_NAME = 'variables';\n+const UNIQUE_PROJECT_KEY_INDEX_NAME = 'variables_project_key_unique';\n+const UNIQUE_GLOBAL_KEY_INDEX_NAME = 'variables_global_key_unique';\n+\n+/**\n+ * Adds a projectId column to the variables table to support project-scoped variables.\n+ * Also updates the unique constraints to allow the same key to be used in different projects,\n+ * while still enforcing uniqueness for global variables (where projectId is null).\n+ */\n+export class AddProjectIdToVariableTable1758794506893 implements ReversibleMigration {\n+\tasync up({\n+\t\tschemaBuilder: { addColumns, column, addForeignKey },\n+\t\tqueryRunner,\n+\t\ttablePrefix,\n+\t\tescape,\n+\t}: MigrationContext) {\n+\t\tconst variablesTableName = escape.tableName(VARIABLES_TABLE_NAME);\n+\n+\t\t// Drop the unique index on key to allow multiple projects to have variables with the same key\n+\t\tawait queryRunner.query(\n+\t\t\t`ALTER TABLE ${variablesTableName} DROP CONSTRAINT ${tablePrefix}variables_key_key;`,\n+\t\t);\n+\n+\t\tawait addColumns(VARIABLES_TABLE_NAME, [column('projectId').varchar(36)]);\n+\t\tawait addForeignKey(VARIABLES_TABLE_NAME, 'projectId', ['project', 'id'], undefined, 'CASCADE');\n+\n+\t\t// Create index for unique project key (projectId not null)\n+\t\tawait queryRunner.query(`\n+      CREATE UNIQUE INDEX \"${UNIQUE_PROJECT_KEY_INDEX_NAME}\"\n+      ON ${variablesTableName} (\"projectId\", \"key\");\n+    `);\n+\n+\t\t// Create index for global variables (projectId is null)\n+\t\tawait queryRunner.query(`\n+      CREATE UNIQUE INDEX \"${UNIQUE_GLOBAL_KEY_INDEX_NAME}\"\n+      ON ${variablesTableName} (key)\n+      WHERE \"projectId\" IS NULL;\n+    `);\n+\t}\n+\n+\tasync down({\n+\t\tschemaBuilder: { dropColumns, dropIndex, dropForeignKey },\n+\t\tqueryRunner,\n+\t\ttablePrefix,\n+\t\tescape,\n+\t}: MigrationContext) {\n+\t\tconst variablesTableName = escape.tableName(VARIABLES_TABLE_NAME);\n+\n+\t\t// Drop the two indexes created in the up migration\n+\t\tawait dropIndex(VARIABLES_TABLE_NAME, ['projectId', 'key'], {\n+\t\t\tcustomIndexName: UNIQUE_PROJECT_KEY_INDEX_NAME,\n+\t\t});\n+\t\tawait dropIndex(VARIABLES_TABLE_NAME, ['key'], {\n+\t\t\tcustomIndexName: UNIQUE_GLOBAL_KEY_INDEX_NAME,\n+\t\t});\n+\n+\t\t// Delete the rows with a non-null projectId\n+\t\tawait queryRunner.query(`DELETE FROM ${variablesTableName} WHERE \"projectId\" IS NOT NULL;`);\n+\n+\t\t// Remove foreign key constraints and drop the projectId column\n+\t\tawait dropForeignKey(VARIABLES_TABLE_NAME, 'projectId', ['project', 'id']);\n+\t\tawait dropColumns(VARIABLES_TABLE_NAME, ['projectId']);\n+\n+\t\t// Recreate the original unique index on key\n+\t\tawait queryRunner.query(`\n+\t\t\tALTER TABLE ${variablesTableName}\n+\t\t\tADD CONSTRAINT ${tablePrefix}variables_key_key UNIQUE (\"key\");\n+\t\t`);\n+\t}\n+}",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fdb%2Fsrc%2Fmigrations%2Fpostgresdb%2F1758794506893-AddProjectIdToVariableTable.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/db/src/migrations/postgresdb/index.ts",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "patch": "@@ -45,6 +45,7 @@ import { AddActivatedAtUserSetting1717498465931 } from './1717498465931-AddActiv\n import { FixExecutionMetadataSequence1721377157740 } from './1721377157740-FixExecutionMetadataSequence';\n import { MigrateTestDefinitionKeyToString1731582748663 } from './1731582748663-MigrateTestDefinitionKeyToString';\n import { UpdateParentFolderIdColumn1740445074052 } from './1740445074052-UpdateParentFolderIdColumn';\n+import { AddProjectIdToVariableTable1758794506893 } from './1758794506893-AddProjectIdToVariableTable';\n import { CreateLdapEntities1674509946020 } from '../common/1674509946020-CreateLdapEntities';\n import { PurgeInvalidWorkflowConnections1675940580449 } from '../common/1675940580449-PurgeInvalidWorkflowConnections';\n import { RemoveResetPasswordColumns1690000000030 } from '../common/1690000000030-RemoveResetPasswordColumns';\n@@ -199,4 +200,5 @@ export const postgresMigrations: Migration[] = [\n \tReplaceDataStoreTablesWithDataTables1754475614602,\n \tLinkRoleToProjectRelationTable1753953244168,\n \tAddTimestampsToRoleAndRoleIndexes1756906557570,\n+\tAddProjectIdToVariableTable1758794506893,\n ];",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fdb%2Fsrc%2Fmigrations%2Fpostgresdb%2Findex.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/db/src/migrations/sqlite/1758794506893-AddProjectIdToVariableTable.ts",
                "status": "added",
                "additions": 96,
                "deletions": 0,
                "changes": 96,
                "patch": "@@ -0,0 +1,96 @@\n+import type { MigrationContext, ReversibleMigration } from '../migration-types';\n+const VARIABLES_TABLE_NAME = 'variables';\n+const VARIABLES_TEMP_TABLE_NAME = 'variables_temp';\n+const UNIQUE_PROJECT_KEY_INDEX_NAME = 'variables_project_key_unique';\n+const UNIQUE_GLOBAL_KEY_INDEX_NAME = 'variables_global_key_unique';\n+/**\n+ * Adds a projectId column to the variables table to support project-scoped variables.\n+ * Also updates the unique constraints to allow the same key to be used in different projects,\n+ * while still enforcing uniqueness for global variables (where projectId is null).\n+ */\n+export class AddProjectIdToVariableTable1758794506893 implements ReversibleMigration {\n+\tasync up({\n+\t\tschemaBuilder: { createTable, column, createIndex, dropTable },\n+\t\tqueryRunner,\n+\t\tescape,\n+\t\tcopyTable,\n+\t}: MigrationContext) {\n+\t\tconst variablesTableName = escape.tableName(VARIABLES_TABLE_NAME);\n+\t\tconst tempVariablesTableName = escape.tableName(VARIABLES_TEMP_TABLE_NAME);\n+\n+\t\tawait createTable(VARIABLES_TEMP_TABLE_NAME)\n+\t\t\t.withColumns(\n+\t\t\t\tcolumn('id').varchar(36).primary.notNull,\n+\t\t\t\tcolumn('key').text.notNull,\n+\t\t\t\tcolumn('type').text.notNull.default(\"'string'\"),\n+\t\t\t\tcolumn('value').text,\n+\t\t\t\tcolumn('projectId').varchar(36),\n+\t\t\t)\n+\t\t\t.withForeignKey('projectId', { tableName: 'project', columnName: 'id', onDelete: 'CASCADE' });\n+\n+\t\t// Create unique index for project variables (projectId not null)\n+\t\tawait createIndex(\n+\t\t\tVARIABLES_TEMP_TABLE_NAME,\n+\t\t\t['projectId', 'key'],\n+\t\t\ttrue,\n+\t\t\tUNIQUE_PROJECT_KEY_INDEX_NAME,\n+\t\t);\n+\n+\t\t// Create unique index for global variables (projectId is null)\n+\t\tawait queryRunner.query(\n+\t\t\t`CREATE UNIQUE INDEX \"${UNIQUE_GLOBAL_KEY_INDEX_NAME}\"\n+\t\t\t ON ${tempVariablesTableName} (\"key\")\n+\t\t\t WHERE projectId IS NULL`,\n+\t\t);\n+\n+\t\t// Copy data from old table to new table\n+\t\tawait copyTable(\n+\t\t\tVARIABLES_TABLE_NAME,\n+\t\t\tVARIABLES_TEMP_TABLE_NAME,\n+\t\t\t['id', 'key', 'type', 'value'],\n+\t\t\t['id', 'key', 'type', 'value'],\n+\t\t);\n+\n+\t\t// Drop old table\n+\t\tawait dropTable(VARIABLES_TABLE_NAME);\n+\n+\t\tawait queryRunner.query(\n+\t\t\t`ALTER TABLE ${tempVariablesTableName} RENAME TO ${variablesTableName};`,\n+\t\t);\n+\t}\n+\n+\tasync down({\n+\t\tschemaBuilder: { createTable, column, createIndex, dropTable },\n+\t\tqueryRunner,\n+\t\tescape,\n+\t}: MigrationContext) {\n+\t\tconst variablesTableName = escape.tableName(VARIABLES_TABLE_NAME);\n+\t\tconst tempVariablesTableName = escape.tableName(VARIABLES_TEMP_TABLE_NAME);\n+\n+\t\t// Create temp table with the old schema (no projectId)\n+\t\tawait createTable(VARIABLES_TEMP_TABLE_NAME).withColumns(\n+\t\t\tcolumn('id').varchar(36).primary.notNull,\n+\t\t\tcolumn('key').text.notNull,\n+\t\t\tcolumn('type').text.notNull.default(\"'string'\"),\n+\t\t\tcolumn('value').text,\n+\t\t);\n+\n+\t\t// Copy data from current table into temp table (dropping projectId)\n+\t\t// We only copy rows where projectId is null to avoid unique constraint violations\n+\n+\t\tawait queryRunner.query(\n+\t\t\t`INSERT INTO ${tempVariablesTableName} (id, \"key\", type, value) SELECT id, \"key\", type, value FROM ${variablesTableName} WHERE projectId IS NULL;`,\n+\t\t);\n+\n+\t\t// Drop current table\n+\t\tawait dropTable(VARIABLES_TABLE_NAME);\n+\n+\t\t// Rename temp table back to original name\n+\t\tawait queryRunner.query(\n+\t\t\t`ALTER TABLE ${tempVariablesTableName} RENAME TO ${variablesTableName};`,\n+\t\t);\n+\n+\t\t// Recreate original unique index on key\n+\t\tawait createIndex(VARIABLES_TABLE_NAME, ['key'], true);\n+\t}\n+}",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fdb%2Fsrc%2Fmigrations%2Fsqlite%2F1758794506893-AddProjectIdToVariableTable.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/db/src/migrations/sqlite/index.ts",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "patch": "@@ -95,6 +95,7 @@ import { ReplaceDataStoreTablesWithDataTables1754475614602 } from '../common/175\n import { AddTimestampsToRoleAndRoleIndexes1756906557570 } from '../common/1756906557570-AddTimestampsToRoleAndRoleIndexes';\n import type { Migration } from '../migration-types';\n import { LinkRoleToProjectRelationTable1753953244168 } from './../common/1753953244168-LinkRoleToProjectRelationTable';\n+import { AddProjectIdToVariableTable1758794506893 } from './1758794506893-AddProjectIdToVariableTable';\n \n const sqliteMigrations: Migration[] = [\n \tInitialMigration1588102412422,\n@@ -193,6 +194,7 @@ const sqliteMigrations: Migration[] = [\n \tReplaceDataStoreTablesWithDataTables1754475614602,\n \tLinkRoleToProjectRelationTable1753953244168,\n \tAddTimestampsToRoleAndRoleIndexes1756906557570,\n+\tAddProjectIdToVariableTable1758794506893,\n ];\n \n export { sqliteMigrations };",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fdb%2Fsrc%2Fmigrations%2Fsqlite%2Findex.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/permissions/src/__tests__/__snapshots__/scope-information.test.ts.snap",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "patch": "@@ -90,6 +90,12 @@ exports[`Scope Information ensure scopes are defined correctly 1`] = `\n   \"variable:delete\",\n   \"variable:list\",\n   \"variable:*\",\n+  \"projectVariable:create\",\n+  \"projectVariable:read\",\n+  \"projectVariable:update\",\n+  \"projectVariable:delete\",\n+  \"projectVariable:list\",\n+  \"projectVariable:*\",\n   \"workersView:manage\",\n   \"workersView:*\",\n   \"workflow:share\",",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fpermissions%2Fsrc%2F__tests__%2F__snapshots__%2Fscope-information.test.ts.snap",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/permissions/src/constants.ee.ts",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "patch": "@@ -21,6 +21,7 @@ export const RESOURCES = {\n \ttag: [...DEFAULT_OPERATIONS] as const,\n \tuser: ['resetPassword', 'changeRole', 'enforceMfa', ...DEFAULT_OPERATIONS] as const,\n \tvariable: [...DEFAULT_OPERATIONS] as const,\n+\tprojectVariable: [...DEFAULT_OPERATIONS] as const,\n \tworkersView: ['manage'] as const,\n \tworkflow: ['share', 'execute', 'move', 'activate', 'deactivate', ...DEFAULT_OPERATIONS] as const,\n \tfolder: [...DEFAULT_OPERATIONS, 'move'] as const,",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fpermissions%2Fsrc%2Fconstants.ee.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/permissions/src/roles/scopes/global-scopes.ee.ts",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "patch": "@@ -62,6 +62,11 @@ export const GLOBAL_OWNER_SCOPES: Scope[] = [\n \t'variable:update',\n \t'variable:delete',\n \t'variable:list',\n+\t'projectVariable:create',\n+\t'projectVariable:read',\n+\t'projectVariable:update',\n+\t'projectVariable:delete',\n+\t'projectVariable:list',\n \t'workflow:create',\n \t'workflow:read',\n \t'workflow:update',",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fpermissions%2Fsrc%2Froles%2Fscopes%2Fglobal-scopes.ee.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/permissions/src/roles/scopes/project-scopes.ee.ts",
                "status": "modified",
                "additions": 12,
                "deletions": 0,
                "changes": 12,
                "patch": "@@ -39,6 +39,11 @@ export const REGULAR_PROJECT_ADMIN_SCOPES: Scope[] = [\n \t'dataStore:listProject',\n \t'dataStore:readRow',\n \t'dataStore:writeRow',\n+\t'projectVariable:list',\n+\t'projectVariable:read',\n+\t'projectVariable:create',\n+\t'projectVariable:update',\n+\t'projectVariable:delete',\n ];\n \n export const PERSONAL_PROJECT_OWNER_SCOPES: Scope[] = [\n@@ -100,6 +105,11 @@ export const PROJECT_EDITOR_SCOPES: Scope[] = [\n \t'dataStore:listProject',\n \t'dataStore:readRow',\n \t'dataStore:writeRow',\n+\t'projectVariable:list',\n+\t'projectVariable:read',\n+\t'projectVariable:create',\n+\t'projectVariable:update',\n+\t'projectVariable:delete',\n ];\n \n export const PROJECT_VIEWER_SCOPES: Scope[] = [\n@@ -114,4 +124,6 @@ export const PROJECT_VIEWER_SCOPES: Scope[] = [\n \t'dataStore:listProject',\n \t'dataStore:read',\n \t'dataStore:readRow',\n+\t'projectVariable:list',\n+\t'projectVariable:read',\n ];",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fpermissions%2Fsrc%2Froles%2Fscopes%2Fproject-scopes.ee.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/permissions/src/utilities/__tests__/get-resource-permissions.test.ts",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "patch": "@@ -28,6 +28,7 @@ describe('permissions', () => {\n \t\t\ttag: {},\n \t\t\tuser: {},\n \t\t\tvariable: {},\n+\t\t\tprojectVariable: {},\n \t\t\tworkersView: {},\n \t\t\tworkflow: {},\n \t\t\tworkflowTags: {},\n@@ -57,6 +58,8 @@ describe('permissions', () => {\n \t\t\t'user:list',\n \t\t\t'variable:list',\n \t\t\t'variable:read',\n+\t\t\t'projectVariable:list',\n+\t\t\t'projectVariable:read',\n \t\t\t'workflow:create',\n \t\t\t'workflow:delete',\n \t\t\t'workflow:execute',\n@@ -115,6 +118,10 @@ describe('permissions', () => {\n \t\t\t\tlist: true,\n \t\t\t\tread: true,\n \t\t\t},\n+\t\t\tprojectVariable: {\n+\t\t\t\tlist: true,\n+\t\t\t\tread: true,\n+\t\t\t},\n \t\t\tworkersView: {},\n \t\t\tworkflow: {\n \t\t\t\tcreate: true,",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2F%40n8n%2Fpermissions%2Fsrc%2Futilities%2F__tests__%2Fget-resource-permissions.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/environments.ee/source-control/source-control-status.service.ee.ts",
                "status": "modified",
                "additions": 1,
                "deletions": 7,
                "changes": 8,
                "patch": "@@ -1,12 +1,6 @@\n import type { SourceControlledFile } from '@n8n/api-types';\n import { Logger } from '@n8n/backend-common';\n-import {\n-\ttype Variables,\n-\ttype TagEntity,\n-\tFolderRepository,\n-\tTagRepository,\n-\ttype User,\n-} from '@n8n/db';\n+import { type TagEntity, FolderRepository, TagRepository, type User, Variables } from '@n8n/db';\n import { Service } from '@n8n/di';\n import { hasGlobalScope } from '@n8n/permissions';\n import { UserError } from 'n8n-workflow';",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2Fcli%2Fsrc%2Fenvironments.ee%2Fsource-control%2Fsource-control-status.service.ee.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/environments.ee/variables/__tests__/variables.integration.test.ts",
                "status": "added",
                "additions": 94,
                "deletions": 0,
                "changes": 94,
                "patch": "@@ -0,0 +1,94 @@\n+import { createTeamProject, testDb } from '@n8n/backend-test-utils';\n+import { VariablesRepository } from '@n8n/db';\n+import { Container } from '@n8n/di';\n+\n+let variablesRepository: VariablesRepository;\n+\n+beforeAll(async () => {\n+\tawait testDb.init();\n+\tvariablesRepository = Container.get(VariablesRepository);\n+});\n+\n+beforeEach(async () => {\n+\tawait variablesRepository.delete({});\n+});\n+\n+afterAll(async () => {\n+\tawait testDb.terminate();\n+});\n+\n+describe('Variable entity', () => {\n+\ttest('can create multiple variables with the same key in different scopes', async () => {\n+\t\t// ARRANGE\n+\t\tconst project = await createTeamProject();\n+\n+\t\t// Create a global variable\n+\t\tconst variable1 = variablesRepository.create({\n+\t\t\tkey: 'test',\n+\t\t\tvalue: 'value1',\n+\t\t\ttype: 'string',\n+\t\t});\n+\n+\t\t// Create a project variable with the same key\n+\t\tconst variable2 = variablesRepository.create({\n+\t\t\tkey: 'test',\n+\t\t\tvalue: 'value2',\n+\t\t\ttype: 'string',\n+\t\t\tproject: {\n+\t\t\t\tid: project.id,\n+\t\t\t},\n+\t\t});\n+\n+\t\tawait variablesRepository.save(variable1);\n+\t\tawait variablesRepository.save(variable2);\n+\t});\n+\n+\ttest('cannot create multiple variables with the same key in the same project', async () => {\n+\t\t// ARRANGE\n+\t\tconst project = await createTeamProject();\n+\n+\t\t// Create a project variable\n+\t\tconst variable1 = variablesRepository.create({\n+\t\t\tkey: 'test',\n+\t\t\tvalue: 'value1',\n+\t\t\ttype: 'string',\n+\t\t\tproject: {\n+\t\t\t\tid: project.id,\n+\t\t\t},\n+\t\t});\n+\n+\t\t// Create another project variable with the same key\n+\t\tconst variable2 = variablesRepository.create({\n+\t\t\tkey: 'test',\n+\t\t\tvalue: 'value2',\n+\t\t\ttype: 'string',\n+\t\t\tproject: {\n+\t\t\t\tid: project.id,\n+\t\t\t},\n+\t\t});\n+\n+\t\t// ACT\n+\t\tawait variablesRepository.save(variable1);\n+\t\tawait expect(variablesRepository.save(variable2)).rejects.toThrow();\n+\t});\n+\n+\ttest('cannot create multiple global variables with the same key', async () => {\n+\t\t// Create a global variable\n+\t\tconst variable1 = variablesRepository.create({\n+\t\t\tkey: 'test',\n+\t\t\tvalue: 'value1',\n+\t\t\ttype: 'string',\n+\t\t});\n+\n+\t\t// Create another global variable with the same key\n+\t\tconst variable2 = variablesRepository.create({\n+\t\t\tkey: 'test',\n+\t\t\tvalue: 'value2',\n+\t\t\ttype: 'string',\n+\t\t});\n+\n+\t\t// ACT\n+\t\tawait variablesRepository.save(variable1);\n+\t\tawait expect(variablesRepository.save(variable2)).rejects.toThrow();\n+\t});\n+});",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2Fcli%2Fsrc%2Fenvironments.ee%2Fvariables%2F__tests__%2Fvariables.integration.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/environments.ee/variables/__tests__/variables.service.integration.test.ts",
                "status": "added",
                "additions": 412,
                "deletions": 0,
                "changes": 412,
                "patch": "@@ -0,0 +1,412 @@\n+import { createTeamProject, linkUserToProject, testDb } from '@n8n/backend-test-utils';\n+import { VariablesRepository } from '@n8n/db';\n+import { Container } from '@n8n/di';\n+import type { AssignableProjectRole } from '@n8n/permissions';\n+import { createAdmin, createMember } from '@test-integration/db/users';\n+import { createProjectVariable, createVariable } from '@test-integration/db/variables';\n+import { mock } from 'jest-mock-extended';\n+\n+import { VariablesService } from '../variables.service.ee';\n+\n+import type { EventService } from '@/events/event.service';\n+import { CacheService } from '@/services/cache/cache.service';\n+import { ProjectService } from '@/services/project.service.ee';\n+\n+describe('VariablesService', () => {\n+\tlet variablesService: VariablesService;\n+\tlet variablesRepository: VariablesRepository;\n+\tlet cacheService: CacheService;\n+\tlet projectService: ProjectService;\n+\tlet licenseState: { isVariablesLicensed: jest.Mock; getMaxVariables: jest.Mock };\n+\n+\tbeforeAll(async () => {\n+\t\tawait testDb.init();\n+\t});\n+\n+\tafterAll(async () => {\n+\t\tawait testDb.terminate();\n+\t});\n+\n+\tbeforeEach(() => {\n+\t\tvariablesRepository = Container.get(VariablesRepository);\n+\t\tcacheService = Container.get(CacheService);\n+\t\tprojectService = Container.get(ProjectService);\n+\t\tlicenseState = {\n+\t\t\tisVariablesLicensed: jest.fn().mockReturnValue(true),\n+\t\t\tgetMaxVariables: jest.fn().mockReturnValue(5),\n+\t\t};\n+\n+\t\tvariablesService = new VariablesService(\n+\t\t\tcacheService,\n+\t\t\tvariablesRepository,\n+\t\t\tmock<EventService>(),\n+\t\t\tlicenseState as any,\n+\t\t\tprojectService,\n+\t\t);\n+\t});\n+\n+\tafterEach(async () => {\n+\t\tjest.clearAllMocks();\n+\t\tawait testDb.truncate(['Variables']);\n+\t});\n+\n+\tdescribe('create', () => {\n+\t\ttest('user without variable:create scope should not be able to create a variable', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createMember();\n+\n+\t\t\t// ACT & ASSERT\n+\t\t\tawait expect(\n+\t\t\t\tvariablesService.create(user, {\n+\t\t\t\t\tkey: 'VAR1',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value1',\n+\t\t\t\t}),\n+\t\t\t).rejects.toThrow('You are not allowed to create a variable');\n+\t\t});\n+\n+\t\ttest('user with variable:create scope should be able to create a variable', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createAdmin();\n+\n+\t\t\t// ACT\n+\t\t\tconst variable = await variablesService.create(user, {\n+\t\t\t\tkey: 'VAR1',\n+\t\t\t\ttype: 'string',\n+\t\t\t\tvalue: 'value1',\n+\t\t\t});\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(variable).toMatchObject({ key: 'VAR1', type: 'string', value: 'value1' });\n+\t\t});\n+\n+\t\ttest('user with project scope should be able to create a variable in that project', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createMember();\n+\t\t\tconst project = await createTeamProject(undefined, user);\n+\n+\t\t\tconst variable = await variablesService.create(user, {\n+\t\t\t\tkey: 'VAR1',\n+\t\t\t\ttype: 'string',\n+\t\t\t\tvalue: 'value1',\n+\t\t\t\tprojectId: project.id,\n+\t\t\t});\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(variable).toMatchObject({\n+\t\t\t\tkey: 'VAR1',\n+\t\t\t\ttype: 'string',\n+\t\t\t\tvalue: 'value1',\n+\t\t\t\tprojectId: project.id,\n+\t\t\t});\n+\t\t});\n+\n+\t\ttest('user with global project variable scope should be able to create a variable in any project', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createAdmin();\n+\t\t\tconst project = await createTeamProject();\n+\n+\t\t\tconst variable = await variablesService.create(user, {\n+\t\t\t\tkey: 'VAR1',\n+\t\t\t\ttype: 'string',\n+\t\t\t\tvalue: 'value1',\n+\t\t\t\tprojectId: project.id,\n+\t\t\t});\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(variable).toMatchObject({\n+\t\t\t\tkey: 'VAR1',\n+\t\t\t\ttype: 'string',\n+\t\t\t\tvalue: 'value1',\n+\t\t\t\tprojectId: project.id,\n+\t\t\t});\n+\t\t});\n+\n+\t\ttest('user should not be able to create global variable that already exists', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createAdmin();\n+\n+\t\t\tawait variablesService.create(user, {\n+\t\t\t\tkey: 'VAR1',\n+\t\t\t\ttype: 'string',\n+\t\t\t\tvalue: 'value1',\n+\t\t\t});\n+\n+\t\t\t// ACT & ASSERT\n+\t\t\tawait expect(\n+\t\t\t\tvariablesService.create(user, {\n+\t\t\t\t\tkey: 'VAR1',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value1',\n+\t\t\t\t}),\n+\t\t\t).rejects.toThrow('A global variable with key \"VAR1\" already exists');\n+\t\t});\n+\n+\t\ttest('user should not be able to create project variable that already exists in the same project', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createAdmin();\n+\t\t\tconst project = await createTeamProject();\n+\n+\t\t\tawait variablesService.create(user, {\n+\t\t\t\tkey: 'VAR1',\n+\t\t\t\ttype: 'string',\n+\t\t\t\tvalue: 'value1',\n+\t\t\t\tprojectId: project.id,\n+\t\t\t});\n+\n+\t\t\t// ACT & ASSERT\n+\t\t\tawait expect(\n+\t\t\t\tvariablesService.create(user, {\n+\t\t\t\t\tkey: 'VAR1',\n+\t\t\t\t\ttype: 'string',\n+\t\t\t\t\tvalue: 'value1',\n+\t\t\t\t\tprojectId: project.id,\n+\t\t\t\t}),\n+\t\t\t).rejects.toThrow('A variable with key \"VAR1\" already exists in the specified project');\n+\t\t});\n+\t});\n+\n+\tdescribe('getAllCached', () => {\n+\t\tit('should get all cached variables', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createAdmin();\n+\n+\t\t\tawait variablesService.create(user, {\n+\t\t\t\tkey: 'VAR1',\n+\t\t\t\ttype: 'string',\n+\t\t\t\tvalue: 'value1',\n+\t\t\t});\n+\n+\t\t\tawait variablesService.create(user, {\n+\t\t\t\tkey: 'VAR2',\n+\t\t\t\ttype: 'string',\n+\t\t\t\tvalue: 'value2',\n+\t\t\t});\n+\n+\t\t\t// ACT\n+\t\t\tconst variables = await variablesService.getAllCached();\n+\n+\t\t\t// ASSERT\n+\t\t\tconst firstVar = variables.find((v) => v.key === 'VAR1');\n+\t\t\tconst secondVar = variables.find((v) => v.key === 'VAR2');\n+\t\t\texpect(firstVar).toMatchObject({ key: 'VAR1', type: 'string', value: 'value1' });\n+\t\t\texpect(secondVar).toMatchObject({ key: 'VAR2', type: 'string', value: 'value2' });\n+\t\t});\n+\t});\n+\n+\tdescribe('getAllForUser', () => {\n+\t\tit('user with variable:read scope should be able to get variables', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createMember();\n+\t\t\tconst variable = await createVariable();\n+\n+\t\t\t// ACT\n+\t\t\tconst variations = await variablesService.getAllForUser(user, {});\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(variations).toHaveLength(1);\n+\t\t\texpect(variations[0]).toMatchObject({\n+\t\t\t\tid: variable.id,\n+\t\t\t\tkey: variable.key,\n+\t\t\t\ttype: variable.type,\n+\t\t\t\tvalue: variable.value,\n+\t\t\t});\n+\t\t});\n+\n+\t\tit('user without projectVariable:list scope should not be able to get project variables', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createMember();\n+\t\t\tconst project = await createTeamProject();\n+\n+\t\t\tawait createProjectVariable(undefined, undefined, project);\n+\n+\t\t\t// ACT & ASSERT\n+\t\t\tconst variables = await variablesService.getAllForUser(user, {});\n+\t\t\texpect(variables).toHaveLength(0);\n+\t\t});\n+\n+\t\tit('user with projectVariable:list scope should be able to get project variables', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createAdmin();\n+\t\t\tconst project = await createTeamProject();\n+\n+\t\t\tconst variable = await createProjectVariable(undefined, undefined, project);\n+\n+\t\t\t// ACT\n+\t\t\tconst variables = await variablesService.getAllForUser(user, {});\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(variables).toHaveLength(1);\n+\t\t\texpect(variables[0]).toMatchObject({\n+\t\t\t\tid: variable.id,\n+\t\t\t\tkey: variable.key,\n+\t\t\t\ttype: variable.type,\n+\t\t\t\tvalue: variable.value,\n+\t\t\t\tproject: { id: project.id, name: project.name },\n+\t\t\t});\n+\t\t});\n+\n+\t\tit('state filter should work for global variable', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createAdmin();\n+\n+\t\t\tawait createVariable('VAR1', 'value1');\n+\t\t\tawait createVariable('VAR2', '');\n+\n+\t\t\t// ACT\n+\t\t\tconst variables = await variablesService.getAllForUser(user, { state: 'empty' });\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(variables).toHaveLength(1);\n+\t\t\texpect(variables[0]).toMatchObject({ key: 'VAR2' });\n+\t\t});\n+\n+\t\tit('state and project filter should work for project variable', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createAdmin();\n+\t\t\tconst project1 = await createTeamProject();\n+\t\t\tconst project2 = await createTeamProject();\n+\n+\t\t\tawait createProjectVariable('VAR1', 'value1', project1);\n+\t\t\tawait createProjectVariable('VAR2', '', project1);\n+\t\t\tawait createProjectVariable('VAR3', 'value3', project2);\n+\n+\t\t\t// ACT\n+\t\t\tconst variables = await variablesService.getAllForUser(user, {\n+\t\t\t\tstate: 'empty',\n+\t\t\t\tprojectId: project1.id,\n+\t\t\t});\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(variables).toHaveLength(1);\n+\t\t\texpect(variables[0]).toMatchObject({ key: 'VAR2', project: { id: project1.id } });\n+\t\t});\n+\t});\n+\n+\tdescribe('getForUser', () => {\n+\t\tit('user with variable:read scope should be able to get a variable', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createMember();\n+\t\t\tconst variable = await createVariable();\n+\n+\t\t\t// ACT\n+\t\t\tconst fetchedVariable = await variablesService.getForUser(user, variable.id);\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(fetchedVariable).toBeDefined();\n+\t\t\texpect(fetchedVariable).toMatchObject({\n+\t\t\t\tid: variable.id,\n+\t\t\t\tkey: variable.key,\n+\t\t\t\ttype: variable.type,\n+\t\t\t\tvalue: variable.value,\n+\t\t\t});\n+\t\t});\n+\n+\t\tit('user without projectVariable:read scope should not be able to get a project variable', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createMember();\n+\t\t\tconst project = await createTeamProject();\n+\n+\t\t\tconst variable = await createProjectVariable(undefined, undefined, project);\n+\n+\t\t\t// ACT & ASSERT\n+\t\t\tawait expect(variablesService.getForUser(user, variable.id)).rejects.toThrow(\n+\t\t\t\t'You are not allowed to access this variable',\n+\t\t\t);\n+\t\t});\n+\n+\t\tit('user with projectVariable:read scope should be able to get a project variable', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createAdmin();\n+\t\t\tconst project = await createTeamProject();\n+\n+\t\t\tconst variable = await createProjectVariable(undefined, undefined, project);\n+\n+\t\t\t// ACT\n+\t\t\tconst fetchedVariable = await variablesService.getForUser(user, variable.id);\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(fetchedVariable).toBeDefined();\n+\t\t\texpect(fetchedVariable).toMatchObject({\n+\t\t\t\tid: variable.id,\n+\t\t\t\tkey: variable.key,\n+\t\t\t\ttype: variable.type,\n+\t\t\t\tvalue: variable.value,\n+\t\t\t\tproject: { id: project.id, name: project.name },\n+\t\t\t});\n+\t\t});\n+\t});\n+\n+\tdescribe('deleteForUser', () => {\n+\t\tit('user without global variable:delete scope should not be able to delete a global variable', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createMember();\n+\t\t\tconst variable = await createVariable();\n+\n+\t\t\t// ACT & ASSERT\n+\t\t\tawait expect(variablesService.deleteForUser(user, variable.id)).rejects.toThrow(\n+\t\t\t\t'You are not allowed to delete this variable',\n+\t\t\t);\n+\t\t});\n+\n+\t\tit('user with global variable:delete scope should be able to delete a global variable', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createAdmin();\n+\t\t\tconst variable = await createVariable();\n+\n+\t\t\t// ACT\n+\t\t\tawait variablesService.deleteForUser(user, variable.id);\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(await variablesService.getAllForUser(user, {})).toHaveLength(0);\n+\t\t});\n+\n+\t\tit('user with global projectVariable:delete scope should be able to delete a project variable', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createAdmin();\n+\t\t\tconst project = await createTeamProject();\n+\n+\t\t\tconst variable = await createProjectVariable(undefined, undefined, project);\n+\n+\t\t\t// ACT\n+\t\t\tawait variablesService.deleteForUser(user, variable.id);\n+\n+\t\t\t// ASSERT\n+\t\t\tconst variables = await variablesService.getAllForUser(user, {});\n+\t\t\texpect(variables).toHaveLength(0);\n+\t\t});\n+\n+\t\tit('user without projectVariable:delete scope should not be able to delete a project variable', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst user = await createMember();\n+\t\t\tconst project = await createTeamProject();\n+\t\t\tawait linkUserToProject(user, project, 'project:viewer');\n+\n+\t\t\tconst variable = await createProjectVariable(undefined, undefined, project);\n+\n+\t\t\t// ACT & ASSERT\n+\t\t\tawait expect(variablesService.deleteForUser(user, variable.id)).rejects.toThrow(\n+\t\t\t\t'You are not allowed to delete this variable',\n+\t\t\t);\n+\t\t});\n+\n+\t\tit.each<AssignableProjectRole>(['project:admin', 'project:editor'])(\n+\t\t\t'user with projectVariable:delete scope (role %s) should be able to delete a project variable in that project',\n+\t\t\tasync (role) => {\n+\t\t\t\t// ARRANGE\n+\t\t\t\tconst user = await createMember();\n+\t\t\t\tconst project = await createTeamProject();\n+\t\t\t\tawait linkUserToProject(user, project, role);\n+\n+\t\t\t\tconst variable = await createProjectVariable(undefined, undefined, project);\n+\n+\t\t\t\t// ACT\n+\t\t\t\tawait variablesService.deleteForUser(user, variable.id);\n+\n+\t\t\t\t// ASSERT\n+\t\t\t\tconst variables = await variablesService.getAllForUser(user, {});\n+\t\t\t\texpect(variables).toHaveLength(0);\n+\t\t\t},\n+\t\t);\n+\t});\n+});",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2Fcli%2Fsrc%2Fenvironments.ee%2Fvariables%2F__tests__%2Fvariables.service.integration.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/environments.ee/variables/variables.controller.ee.ts",
                "status": "modified",
                "additions": 28,
                "deletions": 22,
                "changes": 50,
                "patch": "@@ -1,5 +1,7 @@\n-import { VariableListRequestDto } from '@n8n/api-types';\n+import { CreateVariableRequestDto, VariableListRequestDto } from '@n8n/api-types';\n+import { AuthenticatedRequest } from '@n8n/db';\n import {\n+\tBody,\n \tDelete,\n \tGet,\n \tGlobalScope,\n@@ -9,33 +11,37 @@ import {\n \tQuery,\n \tRestController,\n } from '@n8n/decorators';\n+import type { Response } from 'express';\n+\n+import { VariablesService } from './variables.service.ee';\n \n import { BadRequestError } from '@/errors/response-errors/bad-request.error';\n import { NotFoundError } from '@/errors/response-errors/not-found.error';\n import { VariableCountLimitReachedError } from '@/errors/variable-count-limit-reached.error';\n import { VariableValidationError } from '@/errors/variable-validation.error';\n-import { VariablesRequest } from '@/requests';\n-\n-import { VariablesService } from './variables.service.ee';\n \n @RestController('/variables')\n export class VariablesController {\n \tconstructor(private readonly variablesService: VariablesService) {}\n \n \t@Get('/')\n-\t@GlobalScope('variable:list')\n-\tasync getVariables(_req: unknown, _res: unknown, @Query query: VariableListRequestDto) {\n-\t\treturn await this.variablesService.getAllCached(query.state);\n+\tasync getVariables(\n+\t\treq: AuthenticatedRequest,\n+\t\t_res: unknown,\n+\t\t@Query query: VariableListRequestDto,\n+\t) {\n+\t\treturn await this.variablesService.getAllForUser(req.user, query);\n \t}\n \n \t@Post('/')\n \t@Licensed('feat:variables')\n-\t@GlobalScope('variable:create')\n-\tasync createVariable(req: VariablesRequest.Create) {\n-\t\tconst variable = req.body;\n-\t\tdelete variable.id;\n+\tasync createVariable(\n+\t\treq: AuthenticatedRequest,\n+\t\t_res: Response,\n+\t\t@Body payload: CreateVariableRequestDto,\n+\t) {\n \t\ttry {\n-\t\t\treturn await this.variablesService.create(variable);\n+\t\t\treturn await this.variablesService.create(req.user, payload);\n \t\t} catch (error) {\n \t\t\tif (error instanceof VariableCountLimitReachedError) {\n \t\t\t\tthrow new BadRequestError(error.message);\n@@ -48,9 +54,8 @@ export class VariablesController {\n \n \t@Get('/:id')\n \t@GlobalScope('variable:read')\n-\tasync getVariable(req: VariablesRequest.Get) {\n-\t\tconst id = req.params.id;\n-\t\tconst variable = await this.variablesService.getCached(id);\n+\tasync getVariable(req: AuthenticatedRequest<{ id: string }>) {\n+\t\tconst variable = await this.variablesService.getForUser(req.user, req.params.id);\n \t\tif (variable === null) {\n \t\t\tthrow new NotFoundError(`Variable with id ${req.params.id} not found`);\n \t\t}\n@@ -60,12 +65,14 @@ export class VariablesController {\n \t@Patch('/:id')\n \t@Licensed('feat:variables')\n \t@GlobalScope('variable:update')\n-\tasync updateVariable(req: VariablesRequest.Update) {\n+\tasync updateVariable(\n+\t\treq: AuthenticatedRequest<{ id: string }>,\n+\t\t_res: Response,\n+\t\t@Body payload: CreateVariableRequestDto,\n+\t) {\n \t\tconst id = req.params.id;\n-\t\tconst variable = req.body;\n-\t\tdelete variable.id;\n \t\ttry {\n-\t\t\treturn await this.variablesService.update(id, variable);\n+\t\t\treturn await this.variablesService.update(req.user, id, payload);\n \t\t} catch (error) {\n \t\t\tif (error instanceof VariableCountLimitReachedError) {\n \t\t\t\tthrow new BadRequestError(error.message);\n@@ -78,9 +85,8 @@ export class VariablesController {\n \n \t@Delete('/:id')\n \t@GlobalScope('variable:delete')\n-\tasync deleteVariable(req: VariablesRequest.Delete) {\n-\t\tconst id = req.params.id;\n-\t\tawait this.variablesService.delete(id);\n+\tasync deleteVariable(req: AuthenticatedRequest<{ id: string }>) {\n+\t\tawait this.variablesService.deleteForUser(req.user, req.params.id);\n \n \t\treturn true;\n \t}",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2Fcli%2Fsrc%2Fenvironments.ee%2Fvariables%2Fvariables.controller.ee.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/environments.ee/variables/variables.service.ee.ts",
                "status": "modified",
                "additions": 188,
                "deletions": 48,
                "changes": 236,
                "patch": "@@ -1,40 +1,70 @@\n-import type { Variables } from '@n8n/db';\n+import { CreateVariableRequestDto } from '@n8n/api-types';\n+import { LicenseState } from '@n8n/backend-common';\n+import type { User, Variables } from '@n8n/db';\n import { generateNanoId, VariablesRepository } from '@n8n/db';\n import { Service } from '@n8n/di';\n+import { hasGlobalScope, Scope } from '@n8n/permissions';\n \n+import { FeatureNotLicensedError } from '@/errors/feature-not-licensed.error';\n+import { ForbiddenError } from '@/errors/response-errors/forbidden.error';\n import { VariableCountLimitReachedError } from '@/errors/variable-count-limit-reached.error';\n-import { VariableValidationError } from '@/errors/variable-validation.error';\n import { EventService } from '@/events/event.service';\n-import { License } from '@/license';\n import { CacheService } from '@/services/cache/cache.service';\n+import { ProjectService } from '@/services/project.service.ee';\n+\n+const projectVariableScopes: Partial<Record<Scope, Scope>> = {\n+\t'variable:list': 'projectVariable:list',\n+\t'variable:read': 'projectVariable:read',\n+\t'variable:create': 'projectVariable:create',\n+\t'variable:update': 'projectVariable:update',\n+\t'variable:delete': 'projectVariable:delete',\n+};\n \n @Service()\n export class VariablesService {\n \tconstructor(\n \t\tprivate readonly cacheService: CacheService,\n \t\tprivate readonly variablesRepository: VariablesRepository,\n \t\tprivate readonly eventService: EventService,\n-\t\tprivate readonly license: License,\n+\t\tprivate readonly licenseState: LicenseState,\n+\t\tprivate readonly projectService: ProjectService,\n \t) {}\n \n-\tasync getAllCached(state?: 'empty'): Promise<Variables[]> {\n-\t\tlet variables = await this.cacheService.get('variables', {\n-\t\t\trefreshFn: async () => await this.findAll(),\n+\tprivate async findAll() {\n+\t\tconst variables = await this.variablesRepository.find({\n+\t\t\trelations: ['project'],\n \t\t});\n+\t\treturn variables;\n+\t}\n \n-\t\tif (variables === undefined) {\n-\t\t\treturn [];\n+\tprivate async isAuthorizedForVariable(\n+\t\tuser: User,\n+\t\tscope: Scope,\n+\t\tprojectId?: string,\n+\t): Promise<boolean> {\n+\t\tif (!projectId) {\n+\t\t\t// If the variable is global, only check for global scope\n+\t\t\treturn hasGlobalScope(user, scope);\n \t\t}\n \n-\t\tif (state === 'empty') {\n-\t\t\tvariables = variables.filter((v) => v.value === '');\n-\t\t}\n+\t\t// Get the scope required to access a project variable\n+\t\tconst projectVariableScope = projectVariableScopes[scope];\n+\t\tif (!projectVariableScope)\n+\t\t\tthrow new Error(`No project variable scope mapping for scope \"${scope}\"`);\n \n-\t\treturn variables.map((v) => this.variablesRepository.create(v));\n+\t\t// Check if user has access to the specific project with the required variable scope\n+\t\tconst project = await this.projectService.getProjectWithScope(user, projectId, [\n+\t\t\tprojectVariableScope,\n+\t\t]);\n+\n+\t\treturn !!project;\n \t}\n \n-\tasync getCount(): Promise<number> {\n-\t\treturn (await this.getAllCached()).length;\n+\tasync getAllCached(): Promise<Variables[]> {\n+\t\tconst variables = await this.cacheService.get('variables', {\n+\t\t\trefreshFn: async () => await this.findAll(),\n+\t\t});\n+\t\treturn variables ?? [];\n \t}\n \n \tasync getCached(id: string): Promise<Variables | null> {\n@@ -43,12 +73,7 @@ export class VariablesService {\n \t\tif (!foundVariable) {\n \t\t\treturn null;\n \t\t}\n-\t\treturn this.variablesRepository.create(foundVariable as Partial<Variables>);\n-\t}\n-\n-\tasync delete(id: string): Promise<void> {\n-\t\tawait this.variablesRepository.delete(id);\n-\t\tawait this.updateCache();\n+\t\treturn foundVariable;\n \t}\n \n \tasync updateCache(): Promise<void> {\n@@ -57,32 +82,131 @@ export class VariablesService {\n \t\tawait this.cacheService.set('variables', variables);\n \t}\n \n-\tasync findAll(): Promise<Variables[]> {\n-\t\treturn await this.variablesRepository.find();\n+\tasync getAllForUser(\n+\t\tuser: User,\n+\t\tfilter: { state?: 'empty'; projectId?: string | null } = {},\n+\t): Promise<Variables[]> {\n+\t\tconst allCachedVariables = await this.getAllCached();\n+\t\tconst canListGlobalVariables = hasGlobalScope(user, 'variable:list');\n+\t\tconst projectIds = await this.projectService.getProjectIdsWithScope(user, [\n+\t\t\t'projectVariable:list',\n+\t\t]);\n+\n+\t\tconst userHasAccess = (variable: Variables) =>\n+\t\t\t(!variable.project && canListGlobalVariables) ||\n+\t\t\t// Project variable\n+\t\t\t(variable.project &&\n+\t\t\t\t// Project variable access\n+\t\t\t\tprojectIds.includes(variable.project.id));\n+\n+\t\tconst stateAndProjectFilter = (variable: Variables) =>\n+\t\t\t// State filter\n+\t\t\t(filter.state !== 'empty' || variable.value === '') &&\n+\t\t\t// Project filter\n+\t\t\t(typeof filter.projectId === 'undefined' ||\n+\t\t\t\t(variable.project?.id ?? null) === filter.projectId);\n+\n+\t\treturn allCachedVariables.filter(\n+\t\t\t(variable) => userHasAccess(variable) && stateAndProjectFilter(variable),\n+\t\t);\n \t}\n \n-\tvalidateVariable(variable: Omit<Variables, 'id'>): void {\n-\t\tif (variable.key.length > 50) {\n-\t\t\tthrow new VariableValidationError('key cannot be longer than 50 characters');\n+\tasync getForUser(\n+\t\tuser: User,\n+\t\tvariableId: string,\n+\t\tscope: Scope = 'variable:read',\n+\t): Promise<Variables | null> {\n+\t\tconst variable = await this.getCached(variableId);\n+\t\tif (!variable) {\n+\t\t\treturn null;\n \t\t}\n-\t\tif (variable.key.replace(/[A-Za-z0-9_]/g, '').length !== 0) {\n-\t\t\tthrow new VariableValidationError('key can only contain characters A-Za-z0-9_');\n+\n+\t\tconst userHasAccess = await this.isAuthorizedForVariable(user, scope, variable.project?.id);\n+\t\tif (!userHasAccess) {\n+\t\t\tthrow new ForbiddenError('You are not allowed to access this variable');\n \t\t}\n-\t\tif (variable.value?.length > 255) {\n-\t\t\tthrow new VariableValidationError('value cannot be longer than 255 characters');\n+\n+\t\treturn variable;\n+\t}\n+\n+\tasync deleteForUser(user: User, id: string): Promise<void> {\n+\t\tconst existingVariable = await this.getCached(id);\n+\n+\t\tconst userHasRight = await this.isAuthorizedForVariable(\n+\t\t\tuser,\n+\t\t\t'variable:delete',\n+\t\t\texistingVariable?.project?.id,\n+\t\t);\n+\t\tif (!userHasRight) {\n+\t\t\tthrow new ForbiddenError('You are not allowed to delete this variable');\n \t\t}\n+\n+\t\tawait this.delete(id);\n+\t}\n+\n+\tasync delete(id: string): Promise<void> {\n+\t\tawait this.variablesRepository.delete(id);\n+\t\tawait this.updateCache();\n \t}\n \n-\tasync create(variable: Omit<Variables, 'id'>): Promise<Variables> {\n-\t\tif (!this.canCreateNewVariable(await this.getCount())) {\n+\tprivate async canCreateNewVariable() {\n+\t\tif (!this.licenseState.isVariablesLicensed()) {\n+\t\t\tthrow new FeatureNotLicensedError('feat:variables');\n+\t\t}\n+\n+\t\t// This defaults to -1 which is what we want if we've enabled\n+\t\t// variables via the config\n+\t\tconst limit = this.licenseState.getMaxVariables();\n+\t\tif (limit === -1) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tconst variablesCount = (await this.getAllCached()).length;\n+\t\tif (limit <= variablesCount) {\n \t\t\tthrow new VariableCountLimitReachedError('Variables limit reached');\n \t\t}\n-\t\tthis.validateVariable(variable);\n+\t}\n+\n+\tasync validateUniqueVariable(key: string, projectId?: string) {\n+\t\tconst existingVariablesByKey = (await this.getAllCached()).filter((v) => v.key === key);\n+\t\t// If variable is global, check that it does not already exist with the same key\n+\t\tif (!projectId && existingVariablesByKey.find((v) => !v.project)) {\n+\t\t\tthrow new VariableCountLimitReachedError(\n+\t\t\t\t`A global variable with key \"${key}\" already exists`,\n+\t\t\t);\n+\t\t}\n+\n+\t\t// If variable is for a project, check that it does not already exist in the same project with the same key\n+\t\tif (projectId && existingVariablesByKey.find((v) => v.project?.id === projectId)) {\n+\t\t\tthrow new VariableCountLimitReachedError(\n+\t\t\t\t`A variable with key \"${key}\" already exists in the specified project`,\n+\t\t\t);\n+\t\t}\n+\t}\n+\n+\tasync create(user: User, variable: CreateVariableRequestDto): Promise<Variables> {\n+\t\tconst userHasRight = await this.isAuthorizedForVariable(\n+\t\t\tuser,\n+\t\t\t'variable:create',\n+\t\t\tvariable.projectId,\n+\t\t);\n+\t\tif (!userHasRight) {\n+\t\t\tthrow new ForbiddenError(\n+\t\t\t\t`You are not allowed to create a variable${variable.projectId ? ' in this project' : ''}`,\n+\t\t\t);\n+\t\t}\n+\n+\t\t// Check license and limits\n+\t\tawait this.canCreateNewVariable();\n+\n+\t\t// Check that variable key is unique (globally or in the project)\n+\t\tawait this.validateUniqueVariable(variable.key, variable.projectId);\n \n \t\tthis.eventService.emit('variable-created');\n \t\tconst saveResult = await this.variablesRepository.save(\n \t\t\t{\n \t\t\t\t...variable,\n+\t\t\t\tproject: variable.projectId ? { id: variable.projectId } : null,\n \t\t\t\tid: generateNanoId(),\n \t\t\t},\n \t\t\t{ transaction: false },\n@@ -91,23 +215,39 @@ export class VariablesService {\n \t\treturn saveResult;\n \t}\n \n-\tasync update(id: string, variable: Omit<Variables, 'id'>): Promise<Variables> {\n-\t\tthis.validateVariable(variable);\n-\t\tawait this.variablesRepository.update(id, variable);\n-\t\tawait this.updateCache();\n-\t\treturn (await this.getCached(id))!;\n-\t}\n+\tasync update(user: User, id: string, variable: CreateVariableRequestDto): Promise<Variables> {\n+\t\tconst existingVariable = await this.getCached(id);\n \n-\tprivate canCreateNewVariable(variableCount: number): boolean {\n-\t\tif (!this.license.isVariablesEnabled()) {\n-\t\t\treturn false;\n+\t\tconst userHasRightOnExistingVariable = await this.isAuthorizedForVariable(\n+\t\t\tuser,\n+\t\t\t'variable:update',\n+\t\t\texistingVariable?.project?.id,\n+\t\t);\n+\t\tif (!userHasRightOnExistingVariable) {\n+\t\t\tthrow new ForbiddenError('You are not allowed to update this variable');\n \t\t}\n-\t\t// This defaults to -1 which is what we want if we've enabled\n-\t\t// variables via the config\n-\t\tconst limit = this.license.getVariablesLimit();\n-\t\tif (limit === -1) {\n-\t\t\treturn true;\n+\n+\t\t// Check that user has rights to move the variable to the new project (if projectId changed)\n+\t\tif (existingVariable?.project?.id !== variable.projectId) {\n+\t\t\tconst userHasRightOnNewProject = await this.isAuthorizedForVariable(\n+\t\t\t\tuser,\n+\t\t\t\t'variable:update',\n+\t\t\t\tvariable.projectId ?? undefined,\n+\t\t\t);\n+\t\t\tif (!userHasRightOnNewProject) {\n+\t\t\t\tthrow new ForbiddenError(\n+\t\t\t\t\t'You are not allowed to move this variable to the specified project',\n+\t\t\t\t);\n+\t\t\t}\n \t\t}\n-\t\treturn limit > variableCount;\n+\n+\t\t// TODO: implement guards when changing variable projectId or moving from global to project variable or vice versa\n+\n+\t\tawait this.variablesRepository.update(id, {\n+\t\t\t...variable,\n+\t\t\tproject: variable.projectId ? { id: variable.projectId } : null,\n+\t\t});\n+\t\tawait this.updateCache();\n+\t\treturn (await this.getCached(id))!;\n \t}\n }",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2Fcli%2Fsrc%2Fenvironments.ee%2Fvariables%2Fvariables.service.ee.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/public-api/v1/handlers/variables/variables.handler.ts",
                "status": "modified",
                "additions": 21,
                "deletions": 12,
                "changes": 33,
                "patch": "@@ -1,39 +1,48 @@\n+import { CreateVariableRequestDto } from '@n8n/api-types';\n+import type { AuthenticatedRequest } from '@n8n/db';\n import { VariablesRepository } from '@n8n/db';\n import { Container } from '@n8n/di';\n import type { Response } from 'express';\n \n-import { VariablesController } from '@/environments.ee/variables/variables.controller.ee';\n-import type { PaginatedRequest } from '@/public-api/types';\n-import type { VariablesRequest } from '@/requests';\n-\n import {\n \tapiKeyHasScopeWithGlobalScopeFallback,\n \tisLicensed,\n \tvalidCursor,\n } from '../../shared/middlewares/global.middleware';\n import { encodeNextCursor } from '../../shared/services/pagination.service';\n \n-type Create = VariablesRequest.Create;\n+import { VariablesController } from '@/environments.ee/variables/variables.controller.ee';\n+import type { PaginatedRequest } from '@/public-api/types';\n+import type { VariablesRequest } from '@/requests';\n+\n type Delete = VariablesRequest.Delete;\n type GetAll = PaginatedRequest;\n \n export = {\n \tcreateVariable: [\n \t\tisLicensed('feat:variables'),\n \t\tapiKeyHasScopeWithGlobalScopeFallback({ scope: 'variable:create' }),\n-\t\tasync (req: Create, res: Response) => {\n-\t\t\tawait Container.get(VariablesController).createVariable(req);\n+\t\tasync (req: AuthenticatedRequest, res: Response) => {\n+\t\t\tconst payload = CreateVariableRequestDto.safeParse(req.body);\n+\t\t\tif (payload.error) {\n+\t\t\t\treturn res.status(400).json(payload.error.errors[0]);\n+\t\t\t}\n+\t\t\tawait Container.get(VariablesController).createVariable(req, res, payload.data);\n \n-\t\t\tres.status(201).send();\n+\t\t\treturn res.status(201).send();\n \t\t},\n \t],\n \tupdateVariable: [\n \t\tisLicensed('feat:variables'),\n \t\tapiKeyHasScopeWithGlobalScopeFallback({ scope: 'variable:update' }),\n-\t\tasync (req: VariablesRequest.Update, res: Response) => {\n-\t\t\tawait Container.get(VariablesController).updateVariable(req);\n+\t\tasync (req: AuthenticatedRequest<{ id: string }>, res: Response) => {\n+\t\t\tconst payload = CreateVariableRequestDto.safeParse(req.body);\n+\t\t\tif (payload.error) {\n+\t\t\t\treturn res.status(400).json(payload.error.errors[0]);\n+\t\t\t}\n+\t\t\tawait Container.get(VariablesController).updateVariable(req, res, payload.data);\n \n-\t\t\tres.status(204).send();\n+\t\t\treturn res.status(204).send();\n \t\t},\n \t],\n \tdeleteVariable: [\n@@ -42,7 +51,7 @@ export = {\n \t\tasync (req: Delete, res: Response) => {\n \t\t\tawait Container.get(VariablesController).deleteVariable(req);\n \n-\t\t\tres.status(204).send();\n+\t\t\treturn res.status(204).send();\n \t\t},\n \t],\n \tgetVariables: [",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2Fcli%2Fsrc%2Fpublic-api%2Fv1%2Fhandlers%2Fvariables%2Fvariables.handler.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/services/project.service.ee.ts",
                "status": "modified",
                "additions": 22,
                "deletions": 0,
                "changes": 22,
                "patch": "@@ -548,6 +548,28 @@ export class ProjectService {\n \t\t});\n \t}\n \n+\tasync getProjectIdsWithScope(user: User, scopes: Scope[], projectIds?: string[]) {\n+\t\tconst where: FindOptionsWhere<Project> = {};\n+\t\tif (projectIds) {\n+\t\t\twhere.id = In(projectIds);\n+\t\t}\n+\n+\t\tif (!hasGlobalScope(user, scopes, { mode: 'allOf' })) {\n+\t\t\tconst projectRoles = await this.roleService.rolesWithScope('project', scopes);\n+\t\t\twhere.type = 'team';\n+\t\t\twhere.projectRelations = {\n+\t\t\t\trole: In(projectRoles),\n+\t\t\t\tuserId: user.id,\n+\t\t\t};\n+\t\t}\n+\n+\t\tconst projects = await this.projectRepository.find({\n+\t\t\twhere,\n+\t\t\tselect: ['id'],\n+\t\t});\n+\t\treturn projects.map((p) => p.id);\n+\t}\n+\n \t/**\n \t * Add a user to a team project with specified roles.\n \t *",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2Fcli%2Fsrc%2Fservices%2Fproject.service.ee.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/test/integration/shared/db/variables.ts",
                "status": "modified",
                "additions": 17,
                "deletions": 0,
                "changes": 17,
                "patch": "@@ -1,3 +1,4 @@\n+import type { Project } from '@n8n/db';\n import { generateNanoId, VariablesRepository } from '@n8n/db';\n import { Container } from '@n8n/di';\n import { randomString } from 'n8n-workflow';\n@@ -14,6 +15,22 @@ export async function createVariable(key = randomString(5), value = randomString\n \treturn result;\n }\n \n+export async function createProjectVariable(\n+\tkey = randomString(5),\n+\tvalue = randomString(5),\n+\tproject: Project,\n+) {\n+\tconst result = await Container.get(VariablesRepository).save({\n+\t\tid: generateNanoId(),\n+\t\tkey,\n+\t\tvalue,\n+\t\tproject,\n+\t});\n+\n+\tawait Container.get(VariablesService).updateCache();\n+\treturn result;\n+}\n+\n export async function getVariableByIdOrFail(id: string) {\n \treturn await Container.get(VariablesRepository).findOneOrFail({ where: { id } });\n }",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2Fcli%2Ftest%2Fintegration%2Fshared%2Fdb%2Fvariables.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/test/integration/variables.test.ts",
                "status": "modified",
                "additions": 3,
                "deletions": 4,
                "changes": 7,
                "patch": "@@ -163,7 +163,7 @@ describe('POST /variables', () => {\n \ttest('should fail to create a new variable and if one with the same key exists', async () => {\n \t\tawait createVariable(toCreate.key, toCreate.value);\n \t\tconst response = await authOwnerAgent.post('/variables').send(toCreate);\n-\t\texpect(response.statusCode).toBe(500);\n+\t\texpect(response.statusCode).toBe(400);\n \t\texpect(response.body.data?.key).not.toBe(toCreate.key);\n \t\texpect(response.body.data?.value).not.toBe(toCreate.value);\n \t});\n@@ -213,9 +213,8 @@ describe('POST /variables', () => {\n \ttest('should fail if value too long', async () => {\n \t\tconst toCreate = {\n \t\t\tkey: 'key',\n-\t\t\t// 256 'a's\n-\t\t\tvalue:\n-\t\t\t\t'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n+\t\t\t// 1001 'a's\n+\t\t\tvalue: Array(1001).fill('a').join(''),\n \t\t};\n \t\tconst response = await authOwnerAgent.post('/variables').send(toCreate);\n \t\texpect(response.statusCode).toBe(400);",
                "blob_url": "https://github.com/n8n-io/n8n/blob/62b55dc2fcf4ba66c28837376a5f1caef38bc204/packages%2Fcli%2Ftest%2Fintegration%2Fvariables.test.ts",
                "previous_filename": null
              }
            ],
            "total_additions": 1632,
            "total_deletions": 94,
            "total_changes": 1726,
            "ci_checks": [
              {
                "name": "Notify Slack on failure",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:06:59Z",
                "completed_at": "2025-10-02T10:07:03Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189590949/job/51782511271",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189590949/job/51782511271"
              },
              {
                "name": "BundleMon",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:00:41Z",
                "completed_at": "2025-10-02T10:00:41Z",
                "html_url": "https://github.com/n8n-io/n8n/runs/51782031321",
                "details_url": "https://app.bundlemon.dev/projects/684c498c954d58d7d57c55c5/reports/68de4d497e39ab49a77b6123"
              },
              {
                "name": "Lint / Lint",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:59:45Z",
                "completed_at": "2025-10-02T10:03:27Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189590965/job/51781961274",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189590965/job/51781961274"
              },
              {
                "name": "Bundle Size Check",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:59:42Z",
                "completed_at": "2025-10-02T10:00:44Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189590965/job/51781961254",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189590965/job/51781961254"
              },
              {
                "name": "Unit tests / Unit tests",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:59:59Z",
                "completed_at": "2025-10-02T10:14:08Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189590965/job/51781961243",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189590965/job/51781961243"
              },
              {
                "name": "Postgres",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:55:45Z",
                "completed_at": "2025-10-02T09:58:38Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189590949/job/51781696689",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189590949/job/51781696689"
              },
              {
                "name": "MariaDB",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:55:44Z",
                "completed_at": "2025-10-02T10:04:37Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189590949/job/51781696685",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189590949/job/51781696685"
              },
              {
                "name": "MySQL 8.4",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:55:47Z",
                "completed_at": "2025-10-02T10:06:56Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189590949/job/51781696683",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189590949/job/51781696683"
              },
              {
                "name": "SQLite Pooled",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:55:43Z",
                "completed_at": "2025-10-02T09:58:47Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189590949/job/51781696670",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189590949/job/51781696670"
              },
              {
                "name": "Install & Build",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:52:07Z",
                "completed_at": "2025-10-02T09:55:31Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189590949/job/51781455313",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189590949/job/51781455313"
              },
              {
                "name": "check-pr-title",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:51:54Z",
                "completed_at": "2025-10-02T09:51:59Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189590939/job/51781455274",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189590939/job/51781455274"
              },
              {
                "name": "Install & Build",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:52:07Z",
                "completed_at": "2025-10-02T09:59:40Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189590965/job/51781455207",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189590965/job/51781455207"
              },
              {
                "name": "Aikido Security: check code",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:51:50Z",
                "completed_at": "2025-10-02T09:51:52Z",
                "html_url": "https://github.com/n8n-io/n8n/runs/51781453193",
                "details_url": "https://app.aikido.dev/featurebranch/scan/50301334?groupId=1590"
              }
            ],
            "ci_status": "success",
            "timeline_metrics": {
              "time_to_first_review_hours": null,
              "time_to_first_approval_hours": null,
              "time_to_merge_hours": null,
              "first_commit_at": "2025-09-25T21:59:24Z",
              "last_commit_at": "2025-10-02T09:51:39Z",
              "time_from_first_to_last_commit_hours": 155.87083333333334,
              "total_review_time_hours": null,
              "total_wait_time_hours": null,
              "number_of_review_cycles": 0
            },
            "comments": [
              {
                "id": 3358260606,
                "author": "bundlemon[bot]",
                "body": "<!-- bundlemon -->\n## BundleMon\n\n  \n<details open>\n<summary>Files added (2)</summary>\n\nStatus | Path | Size | Limits\n:------------: | ------------ | :------------: | :------------:\n:white_check_mark: | WASM Dependencies<br/><sub>tree-sitter-bash.wasm<br/></sub> | +181.26KB | -\n:white_check_mark: | WASM Dependencies<br/><sub>tree-sitter.wasm<br/></sub> | +74.47KB | -\n</details>\n\n  \n  \n  \n  \n  \n  \n\n\nTotal files change +255.73KB \n\n\n  \n<details open>\n<summary>Groups added (2)</summary>\n\nStatus | Path | Size | Limits\n:------------: | ------------ | :------------: | :------------:\n:white_check_mark: | **/*.js<br/> | +5.8MB | -\n:white_check_mark: | **/*.css<br/> | +195.78KB | -\n</details>\n\n  \n  \n  \n  \n  \n  \n\n\nFinal result: :white_check_mark:\n\n[View report in BundleMon website \u27a1\ufe0f](https://app.bundlemon.dev/projects/684c498c954d58d7d57c55c5/reports/68de4d497e39ab49a77b6123)\n\n---\n<p align=\"center\"><a href=\"https://app.bundlemon.dev/projects/684c498c954d58d7d57c55c5/reports?branch=pay-3764-allow-expressions-to-autocomplete-project-variables&resolution=all\" target=\"_blank\" rel=\"noreferrer noopener\">Current branch size history</a></p>",
                "created_at": "2025-10-01T21:43:11Z",
                "updated_at": "2025-10-02T10:00:42Z",
                "comment_type": "issue_comment",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              },
              {
                "id": 3358301924,
                "author": "codecov[bot]",
                "body": "## [Codecov](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) Report\n:x: Patch coverage is `63.46154%` with `95 lines` in your changes missing coverage. Please review.\n| [Files with missing lines](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) | Patch % | Lines |\n|---|---|---|\n| [...ins/codemirror/completions/datatype.completions.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvZnJvbnRlbmQvZWRpdG9yLXVpL3NyYy9wbHVnaW5zL2NvZGVtaXJyb3IvY29tcGxldGlvbnMvZGF0YXR5cGUuY29tcGxldGlvbnMudHM=) | 7.14% | [26 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...sqldb/1758794506893-AddProjectIdToVariableTable.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvQG44bi9kYi9zcmMvbWlncmF0aW9ucy9teXNxbGRiLzE3NTg3OTQ1MDY4OTMtQWRkUHJvamVjdElkVG9WYXJpYWJsZVRhYmxlLnRz) | 22.72% | [17 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...qlite/1758794506893-AddProjectIdToVariableTable.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvQG44bi9kYi9zcmMvbWlncmF0aW9ucy9zcWxpdGUvMTc1ODc5NDUwNjg5My1BZGRQcm9qZWN0SWRUb1ZhcmlhYmxlVGFibGUudHM=) | 22.72% | [17 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...resdb/1758794506893-AddProjectIdToVariableTable.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvQG44bi9kYi9zcmMvbWlncmF0aW9ucy9wb3N0Z3Jlc2RiLzE3NTg3OTQ1MDY4OTMtQWRkUHJvamVjdElkVG9WYXJpYWJsZVRhYmxlLnRz) | 21.05% | [15 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [.../environments.ee/variables/variables.service.ee.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvY2xpL3NyYy9lbnZpcm9ubWVudHMuZWUvdmFyaWFibGVzL3ZhcmlhYmxlcy5zZXJ2aWNlLmVlLnRz) | 84.33% | [12 Missing and 1 partial :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...lic-api/v1/handlers/variables/variables.handler.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvY2xpL3NyYy9wdWJsaWMtYXBpL3YxL2hhbmRsZXJzL3ZhcmlhYmxlcy92YXJpYWJsZXMuaGFuZGxlci50cw==) | 73.33% | [4 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [packages/cli/src/services/project.service.ee.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvY2xpL3NyYy9zZXJ2aWNlcy9wcm9qZWN0LnNlcnZpY2UuZWUudHM=) | 80.00% | [2 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [packages/@n8n/api-types/src/dto/index.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvQG44bi9hcGktdHlwZXMvc3JjL2R0by9pbmRleC50cw==) | 0.00% | [1 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20269?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n\n:loudspeaker: Thoughts on this report? [Let us know!](https://github.com/codecov/feedback/issues/255)",
                "created_at": "2025-10-01T21:56:06Z",
                "updated_at": "2025-10-02T10:14:26Z",
                "comment_type": "issue_comment",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              }
            ],
            "total_comments": 2,
            "labels": [
              {
                "name": "core",
                "color": "DC143C",
                "description": "Enhancement outside /nodes-base and /editor-ui"
              },
              {
                "name": "n8n team",
                "color": "ffffff",
                "description": "Authored by the n8n team"
              }
            ],
            "linked_issues": [],
            "review_summary": {
              "total_reviews": 0,
              "approved_count": 0,
              "changes_requested_count": 0,
              "commented_count": 0,
              "reviewers": [],
              "review_comments": []
            },
            "commit_count": 11,
            "commits_authors": [
              "guillaumejacquart"
            ],
            "mergeable": null,
            "mergeable_state": null,
            "draft": true,
            "requested_reviewers": [],
            "assignees": []
          },
          "ai_summary": "\u2705 LOW RISK \u2022 Large code changes",
          "analyzed_at": "2025-10-02T16:07:55.189135"
        },
        {
          "pr_number": 20167,
          "title": "feat(core): Add dry run to Data Table update rows (no-changelog)",
          "author": "dariacodes",
          "state": "open",
          "created_at": "2025-09-29T18:11:06Z",
          "updated_at": "2025-10-02T10:13:50Z",
          "url": "https://github.com/n8n-io/n8n/pull/20167",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 0.40273599805555554,
            "unresolved_review_threads": 3,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 0.40273599805555554,
            "pr_age_days": 2.685345481400463,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 38,
            "critical_path_touched": false,
            "lines_added": 710,
            "lines_removed": 111,
            "files_changed": 19,
            "test_coverage_delta": 31.57894736842105,
            "historical_regression_risk": 30.0
          },
          "dynamics_metrics": {
            "author_experience_score": 35.0,
            "reviewer_load": 1,
            "approval_ratio": 0.0,
            "author_merge_history": 0,
            "avg_review_time_hours": 57.46194444444444
          },
          "business_impact_metrics": {
            "linked_to_release": true,
            "external_dependencies": 21,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 12.0,
            "blast_radius_score": 100.0,
            "dynamics_score": 51.0,
            "business_impact_score": 80.0
          },
          "detailed_info": {
            "description": "## Summary\r\n\r\n- Add dry run to update rows endpoint\r\n- Add dry run to upsert rows endpoint\r\n- Add dry runs to the node\r\n- Show both \"before\" and \"after\" states for dry runs\r\n- Rename `updateRow` to `updateRows` as if filter matches several rows, we're updating all of them\r\n\r\n## Related Linear tickets, Github issues, and Community forum posts\r\n\r\nhttps://linear.app/n8n/issue/ADO-4204/feature-add-dryrun-to-data-table-update-rows\r\n\r\n## Review / Merge checklist\r\n\r\n- [x] PR title and summary are descriptive. ([conventions](../blob/master/.github/pull_request_title_conventions.md)) <!--\r\n   **Remember, the title automatically goes into the changelog.\r\n   Use `(no-changelog)` otherwise.**\r\n-->\r\n- [ ] [Docs updated](https://github.com/n8n-io/n8n-docs) or follow-up ticket created.\r\n- [x] Tests included. <!--\r\n   A bug is not considered fixed, unless a test is added to prevent it from happening again.\r\n   A feature is not complete without tests.\r\n-->\r\n- [ ] PR Labeled with `release/backport` (if the PR is an urgent fix that needs to be backported)\r\n",
            "body_text": "## Summary\r\n\r\n- Add dry run to update rows endpoint\r\n- Add dry run to upsert rows endpoint\r\n- Add dry runs to the node\r\n- Show both \"before\" and \"after\" states for dry runs\r\n- Rename `updateRow` to `updateRows` as if filter matches several rows, we're updating all of them\r\n\r\n## Related Linear tickets, Github issues, and Community forum posts\r\n\r\nhttps://linear.app/n8n/issue/ADO-4204/feature-add-dryrun-to-data-table-update-rows\r\n\r\n## Review / Merge checklist\r\n\r\n- [x] PR title and summary are descriptive. ([conventions](../blob/master/.github/pull_request_title_conventions.md)) <!--\r\n   **Remember, the title automatically goes into the changelog.\r\n   Use `(no-changelog)` otherwise.**\r\n-->\r\n- [ ] [Docs updated](https://github.com/n8n-io/n8n-docs) or follow-up ticket created.\r\n- [x] Tests included. <!--\r\n   A bug is not considered fixed, unless a test is added to prevent it from happening again.\r\n   A feature is not complete without tests.\r\n-->\r\n- [ ] PR Labeled with `release/backport` (if the PR is an urgent fix that needs to be backported)\r\n",
            "files": [
              {
                "filename": "packages/@n8n/api-types/src/dto/data-store/update-data-store-row.dto.ts",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "patch": "@@ -19,6 +19,7 @@ const updateDataTableRowShape = {\n \t\t\tmessage: 'data must not be empty',\n \t\t}),\n \treturnData: z.boolean().optional().default(false),\n+\tdryRun: z.boolean().optional().default(false),\n };\n \n export class UpdateDataTableRowDto extends Z.class(updateDataTableRowShape) {}",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2F%40n8n%2Fapi-types%2Fsrc%2Fdto%2Fdata-store%2Fupdate-data-store-row.dto.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/@n8n/api-types/src/dto/data-store/upsert-data-store-row.dto.ts",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "patch": "@@ -19,6 +19,7 @@ const upsertDataStoreRowShape = {\n \t\t\tmessage: 'data must not be empty',\n \t\t}),\n \treturnData: z.boolean().optional().default(false),\n+\tdryRun: z.boolean().optional().default(false),\n };\n \n export class UpsertDataStoreRowDto extends Z.class(upsertDataStoreRowShape) {}",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2F%40n8n%2Fapi-types%2Fsrc%2Fdto%2Fdata-store%2Fupsert-data-store-row.dto.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/modules/data-table/__tests__/data-store-filters.integration.test.ts",
                "status": "modified",
                "additions": 20,
                "deletions": 20,
                "changes": 40,
                "patch": "@@ -1410,7 +1410,7 @@ describe('dataStore filters', () => {\n \t\t});\n \t});\n \n-\tdescribe('updateRow', () => {\n+\tdescribe('updateRows', () => {\n \t\tdescribe('equals and not equals filters', () => {\n \t\t\tit(\"updates rows with 'equals' filter correctly\", async () => {\n \t\t\t\t// ARRANGE\n@@ -1433,7 +1433,7 @@ describe('dataStore filters', () => {\n \t\t\t\t]);\n \n \t\t\t\t// ACT\n-\t\t\t\tawait dataStoreService.updateRow(\n+\t\t\t\tawait dataStoreService.updateRows(\n \t\t\t\t\tdataStoreId,\n \t\t\t\t\tproject.id,\n \t\t\t\t\t{\n@@ -1486,7 +1486,7 @@ describe('dataStore filters', () => {\n \t\t\t\t]);\n \n \t\t\t\t// ACT\n-\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\tfilters: [{ columnName: 'name', value: 'Mary', condition: 'neq' }],\n@@ -1524,7 +1524,7 @@ describe('dataStore filters', () => {\n \t\t\t\t]);\n \n \t\t\t\t// ACT\n-\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\tfilters: [{ columnName: 'name', condition: 'eq', value: null }],\n@@ -1563,7 +1563,7 @@ describe('dataStore filters', () => {\n \t\t\t\t]);\n \n \t\t\t\t// ACT\n-\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\tfilters: [{ columnName: 'name', condition: 'neq', value: null }],\n@@ -1603,7 +1603,7 @@ describe('dataStore filters', () => {\n \t\t\t\t]);\n \n \t\t\t\t// ACT\n-\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\tfilters: [{ columnName: 'name', value: '%ar%', condition: 'like' }],\n@@ -1644,7 +1644,7 @@ describe('dataStore filters', () => {\n \t\t\t\tawait dataStoreService.insertRows(dataStoreId, project.id, rows);\n \n \t\t\t\t// ACT\n-\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\tfilters: [{ columnName: 'name', value: '%ar%', condition: 'ilike' }],\n@@ -1683,7 +1683,7 @@ describe('dataStore filters', () => {\n \t\t\t\tawait dataStoreService.insertRows(dataStoreId, project.id, rows);\n \n \t\t\t\t// ACT\n-\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\tfilters: [{ columnName: 'name', value: 'Ar%', condition: 'ilike' }],\n@@ -1720,7 +1720,7 @@ describe('dataStore filters', () => {\n \t\t\t\t]);\n \n \t\t\t\t// ACT\n-\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\tfilters: [{ columnName: 'name', value: '%old', condition: 'ilike' }],\n@@ -1769,7 +1769,7 @@ describe('dataStore filters', () => {\n \t\t\t\t\t]);\n \n \t\t\t\t\t// ACT\n-\t\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\t\tfilter: {\n \t\t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\t\tfilters: [{ columnName: 'age', value: 30, condition: 'gt' }],\n@@ -1801,7 +1801,7 @@ describe('dataStore filters', () => {\n \t\t\t\t\t]);\n \n \t\t\t\t\t// ACT\n-\t\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\t\tfilter: {\n \t\t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\t\tfilters: [{ columnName: 'age', value: 30, condition: 'gte' }],\n@@ -1836,7 +1836,7 @@ describe('dataStore filters', () => {\n \t\t\t\t\t]);\n \n \t\t\t\t\t// ACT\n-\t\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\t\tfilter: {\n \t\t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\t\tfilters: [{ columnName: 'age', value: 35, condition: 'lt' }],\n@@ -1870,7 +1870,7 @@ describe('dataStore filters', () => {\n \t\t\t\t\t]);\n \n \t\t\t\t\t// ACT\n-\t\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\t\tfilter: {\n \t\t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\t\tfilters: [{ columnName: 'age', value: 35, condition: 'lte' }],\n@@ -1922,7 +1922,7 @@ describe('dataStore filters', () => {\n \n \t\t\t\t\t// ACT\n \t\t\t\t\tconst newStartDate = new Date('2024-01-01T12:00:00Z');\n-\t\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\t\tfilter: {\n \t\t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\t\tfilters: [{ columnName: 'category', value: 'C', condition: 'gt' }],\n@@ -1954,7 +1954,7 @@ describe('dataStore filters', () => {\n \n \t\t\t\t\t// ACT\n \t\t\t\t\tconst newStartDate = new Date('2024-01-01T12:00:00Z');\n-\t\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\t\tfilter: {\n \t\t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\t\tfilters: [{ columnName: 'category', value: 'C', condition: 'lt' }],\n@@ -2004,7 +2004,7 @@ describe('dataStore filters', () => {\n \n \t\t\t\t\t// ACT\n \t\t\t\t\tconst baseDate = new Date('2024-01-01');\n-\t\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\t\tfilter: {\n \t\t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\t\tfilters: [{ columnName: 'registeredAt', value: baseDate, condition: 'gt' }],\n@@ -2037,7 +2037,7 @@ describe('dataStore filters', () => {\n \n \t\t\t\t\t// ACT\n \t\t\t\t\tconst baseDate = new Date('2024-01-02');\n-\t\t\t\t\tawait dataStoreService.updateRow(dataStoreId, project.id, {\n+\t\t\t\t\tawait dataStoreService.updateRows(dataStoreId, project.id, {\n \t\t\t\t\t\tfilter: {\n \t\t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\t\tfilters: [{ columnName: 'registeredAt', value: baseDate, condition: 'lte' }],\n@@ -2083,7 +2083,7 @@ describe('dataStore filters', () => {\n \t\t\t\t]);\n \n \t\t\t\t// ACT\n-\t\t\t\tawait dataStoreService.updateRow(id, project.id, {\n+\t\t\t\tawait dataStoreService.updateRows(id, project.id, {\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\tfilters: [\n@@ -2129,7 +2129,7 @@ describe('dataStore filters', () => {\n \t\t\t\t]);\n \n \t\t\t\t// ACT\n-\t\t\t\tawait dataStoreService.updateRow(id, project.id, {\n+\t\t\t\tawait dataStoreService.updateRows(id, project.id, {\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'or',\n \t\t\t\t\t\tfilters: [\n@@ -2176,7 +2176,7 @@ describe('dataStore filters', () => {\n \t\t\t\t]);\n \n \t\t\t\t// ACT\n-\t\t\t\tawait dataStoreService.updateRow(id, project.id, {\n+\t\t\t\tawait dataStoreService.updateRows(id, project.id, {\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'or',\n \t\t\t\t\t\tfilters: [",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fcli%2Fsrc%2Fmodules%2Fdata-table%2F__tests__%2Fdata-store-filters.integration.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/modules/data-table/__tests__/data-store-proxy.service.integration.test.ts",
                "status": "modified",
                "additions": 27,
                "deletions": 0,
                "changes": 27,
                "patch": "@@ -238,6 +238,33 @@ describe('DataStoreProxyService', () => {\n \t\t\tPROJECT_ID,\n \t\t\toptions,\n \t\t\ttrue,\n+\t\t\tundefined,\n+\t\t);\n+\t});\n+\n+\tit('should call upsertRow dry run with correct parameters', async () => {\n+\t\tconst options: UpsertDataStoreRowOptions = {\n+\t\t\tfilter: {\n+\t\t\t\tfilters: [{ columnName: 'name', condition: 'eq', value: 'test' }],\n+\t\t\t\ttype: 'and',\n+\t\t\t},\n+\t\t\tdata: { name: 'newName' },\n+\t\t\tdryRun: true,\n+\t\t};\n+\n+\t\tconst dataStoreOperations = await dataStoreProxyService.getDataStoreProxy(\n+\t\t\tworkflow,\n+\t\t\tnode,\n+\t\t\t'dataStore-id',\n+\t\t);\n+\t\tawait dataStoreOperations.upsertRow(options);\n+\n+\t\texpect(dataStoreServiceMock.upsertRow).toBeCalledWith(\n+\t\t\t'dataStore-id',\n+\t\t\tPROJECT_ID,\n+\t\t\toptions,\n+\t\t\ttrue,\n+\t\t\ttrue,\n \t\t);\n \t});\n });",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fcli%2Fsrc%2Fmodules%2Fdata-table%2F__tests__%2Fdata-store-proxy.service.integration.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/modules/data-table/__tests__/data-store-size.integration.test.ts",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "patch": "@@ -69,7 +69,7 @@ describe('Data Store Size Tests', () => {\n \t\t\tmockFindDataTablesSize.mockRestore();\n \t\t});\n \n-\t\tit('should prevent updateRow when size limit exceeded', async () => {\n+\t\tit('should prevent updateRows when size limit exceeded', async () => {\n \t\t\t// ARRANGE\n \t\t\tconst dataStoreSizeValidator = Container.get(DataStoreSizeValidator);\n \t\t\tdataStoreSizeValidator.reset();\n@@ -88,7 +88,7 @@ describe('Data Store Size Tests', () => {\n \n \t\t\t// ACT & ASSERT\n \t\t\tawait expect(\n-\t\t\t\tdataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\t\tdataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\tfilters: [{ columnName: 'id', condition: 'eq', value: 1 }],\n@@ -389,7 +389,7 @@ describe('Data Store Size Tests', () => {\n \t\t\texpect(mockFindDataTablesSize).toHaveBeenCalledTimes(2);\n \n \t\t\t// Update data (should reset cache again)\n-\t\t\tawait dataStoreService.updateRow(dataStore.id, project1.id, {\n+\t\t\tawait dataStoreService.updateRows(dataStore.id, project1.id, {\n \t\t\t\tfilter: {\n \t\t\t\t\ttype: 'and',\n \t\t\t\t\tfilters: [{ columnName: 'data', condition: 'eq', value: 'test' }],",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fcli%2Fsrc%2Fmodules%2Fdata-table%2F__tests__%2Fdata-store-size.integration.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/modules/data-table/__tests__/data-store.service.integration.test.ts",
                "status": "modified",
                "additions": 316,
                "deletions": 22,
                "changes": 338,
                "patch": "@@ -1752,6 +1752,127 @@ describe('dataStore', () => {\n \t\t\t\t},\n \t\t\t]);\n \t\t});\n+\n+\t\tit('should simulate update without persisting when dryRun is true', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst { id: dataStoreId } = await dataStoreService.createDataStore(project1.id, {\n+\t\t\t\tname: 'dataStore',\n+\t\t\t\tcolumns: [\n+\t\t\t\t\t{ name: 'name', type: 'string' },\n+\t\t\t\t\t{ name: 'age', type: 'number' },\n+\t\t\t\t],\n+\t\t\t});\n+\n+\t\t\tawait dataStoreService.insertRows(\n+\t\t\t\tdataStoreId,\n+\t\t\t\tproject1.id,\n+\t\t\t\t[{ name: 'Alice', age: 30 }],\n+\t\t\t\t'id',\n+\t\t\t);\n+\n+\t\t\t// ACT\n+\t\t\tconst result = await dataStoreService.upsertRow(\n+\t\t\t\tdataStoreId,\n+\t\t\t\tproject1.id,\n+\t\t\t\t{\n+\t\t\t\t\tfilter: {\n+\t\t\t\t\t\ttype: 'and',\n+\t\t\t\t\t\tfilters: [{ columnName: 'name', value: 'Alice', condition: 'eq' }],\n+\t\t\t\t\t},\n+\t\t\t\t\tdata: { age: 35 },\n+\t\t\t\t},\n+\t\t\t\ttrue,\n+\t\t\t\ttrue,\n+\t\t\t);\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(result).toEqual([\n+\t\t\t\texpect.objectContaining({\n+\t\t\t\t\tname: 'Alice',\n+\t\t\t\t\tage: 30,\n+\t\t\t\t\tdryRunState: 'before',\n+\t\t\t\t}),\n+\t\t\t\texpect.objectContaining({\n+\t\t\t\t\tname: 'Alice',\n+\t\t\t\t\tage: 35,\n+\t\t\t\t\tdryRunState: 'after',\n+\t\t\t\t}),\n+\t\t\t]);\n+\n+\t\t\t// Verify data was NOT persisted\n+\t\t\tconst { data } = await dataStoreService.getManyRowsAndCount(dataStoreId, project1.id, {});\n+\n+\t\t\texpect(data).toEqual([\n+\t\t\t\texpect.objectContaining({\n+\t\t\t\t\tname: 'Alice',\n+\t\t\t\t\tage: 30, // unchanged\n+\t\t\t\t}),\n+\t\t\t]);\n+\t\t});\n+\n+\t\tit('should simulate insert without persisting when dryRun is true and no match', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst { id: dataStoreId } = await dataStoreService.createDataStore(project1.id, {\n+\t\t\t\tname: 'dataStore',\n+\t\t\t\tcolumns: [\n+\t\t\t\t\t{ name: 'name', type: 'string' },\n+\t\t\t\t\t{ name: 'age', type: 'number' },\n+\t\t\t\t],\n+\t\t\t});\n+\n+\t\t\tawait dataStoreService.insertRows(\n+\t\t\t\tdataStoreId,\n+\t\t\t\tproject1.id,\n+\t\t\t\t[{ name: 'Alice', age: 30 }],\n+\t\t\t\t'id',\n+\t\t\t);\n+\n+\t\t\t// ACT\n+\t\t\tconst result = await dataStoreService.upsertRow(\n+\t\t\t\tdataStoreId,\n+\t\t\t\tproject1.id,\n+\t\t\t\t{\n+\t\t\t\t\tfilter: {\n+\t\t\t\t\t\ttype: 'and',\n+\t\t\t\t\t\tfilters: [{ columnName: 'name', value: 'Bob', condition: 'eq' }],\n+\t\t\t\t\t},\n+\t\t\t\t\tdata: { name: 'Bob', age: 25 },\n+\t\t\t\t},\n+\t\t\t\ttrue,\n+\t\t\t\ttrue,\n+\t\t\t);\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(result).toEqual([\n+\t\t\t\texpect.objectContaining({\n+\t\t\t\t\tid: null,\n+\t\t\t\t\tname: null,\n+\t\t\t\t\tage: null,\n+\t\t\t\t\tdryRunState: 'before',\n+\t\t\t\t}),\n+\t\t\t\texpect.objectContaining({\n+\t\t\t\t\tid: 0, // placeholder for dry run\n+\t\t\t\t\tname: 'Bob',\n+\t\t\t\t\tage: 25,\n+\t\t\t\t\tdryRunState: 'after',\n+\t\t\t\t}),\n+\t\t\t]);\n+\n+\t\t\t// Verify data was NOT persisted\n+\t\t\tconst { count, data } = await dataStoreService.getManyRowsAndCount(\n+\t\t\t\tdataStoreId,\n+\t\t\t\tproject1.id,\n+\t\t\t\t{},\n+\t\t\t);\n+\n+\t\t\texpect(count).toEqual(1);\n+\t\t\texpect(data).toEqual([\n+\t\t\t\texpect.objectContaining({\n+\t\t\t\t\tname: 'Alice',\n+\t\t\t\t\tage: 30,\n+\t\t\t\t}),\n+\t\t\t]);\n+\t\t});\n \t});\n \n \tdescribe('deleteRows', () => {\n@@ -1976,6 +2097,15 @@ describe('dataStore', () => {\n \t\t\t\t\tage: 30,\n \t\t\t\t\tcreatedAt: expect.any(Date),\n \t\t\t\t\tupdatedAt: expect.any(Date),\n+\t\t\t\t\tdryRunState: 'before',\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\tid: null,\n+\t\t\t\t\tname: null,\n+\t\t\t\t\tage: null,\n+\t\t\t\t\tcreatedAt: null,\n+\t\t\t\t\tupdatedAt: null,\n+\t\t\t\t\tdryRunState: 'after',\n \t\t\t\t},\n \t\t\t]);\n \n@@ -2031,6 +2161,15 @@ describe('dataStore', () => {\n \t\t\t\t\tage: 25,\n \t\t\t\t\tcreatedAt: expect.any(Date),\n \t\t\t\t\tupdatedAt: expect.any(Date),\n+\t\t\t\t\tdryRunState: 'before',\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\tid: null,\n+\t\t\t\t\tname: null,\n+\t\t\t\t\tage: null,\n+\t\t\t\t\tcreatedAt: null,\n+\t\t\t\t\tupdatedAt: null,\n+\t\t\t\t\tdryRunState: 'after',\n \t\t\t\t},\n \t\t\t]);\n \n@@ -2218,7 +2357,7 @@ describe('dataStore', () => {\n \t\t});\n \t});\n \n-\tdescribe('updateRow', () => {\n+\tdescribe('updateRows', () => {\n \t\tit('should update an existing row with matching filter', async () => {\n \t\t\t// ARRANGE\n \t\t\tconst { id: dataStoreId } = await dataStoreService.createDataStore(project1.id, {\n@@ -2237,7 +2376,7 @@ describe('dataStore', () => {\n \t\t\t]);\n \n \t\t\t// ACT\n-\t\t\tconst result = await dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = await dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'name', condition: 'eq', value: 'Alice' }] },\n \t\t\t\tdata: { name: 'Alicia', age: 31, active: false, birthday: new Date('1990-01-02') },\n \t\t\t});\n@@ -2291,7 +2430,7 @@ describe('dataStore', () => {\n \t\t\t]);\n \n \t\t\t// ACT\n-\t\t\tconst result = await dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = await dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'id', condition: 'eq', value: 1 }] },\n \t\t\t\tdata: { name: 'Alicia', age: 31, active: false },\n \t\t\t});\n@@ -2343,7 +2482,7 @@ describe('dataStore', () => {\n \t\t\tawait new Promise((resolve) => setTimeout(resolve, 10));\n \n \t\t\t// ACT\n-\t\t\tconst result = await dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = await dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'name', condition: 'eq', value: 'Alice' }] },\n \t\t\t\tdata: { age: 31, active: false },\n \t\t\t});\n@@ -2386,7 +2525,7 @@ describe('dataStore', () => {\n \t\t\t]);\n \n \t\t\t// ACT\n-\t\t\tconst result = await dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = await dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'name', condition: 'eq', value: 'Alice' }] },\n \t\t\t\tdata: { name: 'Alicia' },\n \t\t\t});\n@@ -2433,7 +2572,7 @@ describe('dataStore', () => {\n \t\t\t]);\n \n \t\t\t// ACT\n-\t\t\tconst result = await dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = await dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'age', condition: 'eq', value: 30 }] },\n \t\t\t\tdata: { age: 31 },\n \t\t\t});\n@@ -2472,7 +2611,7 @@ describe('dataStore', () => {\n \t\t\tawait dataStoreService.insertRows(dataStoreId, project1.id, [{ age: 30 }]);\n \n \t\t\t// ACT\n-\t\t\tconst result = await dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = await dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'age', condition: 'eq', value: '30' }] },\n \t\t\t\tdata: { age: '31' },\n \t\t\t});\n@@ -2494,7 +2633,7 @@ describe('dataStore', () => {\n \t\t\tawait dataStoreService.insertRows(dataStoreId, project1.id, [{ age: 30 }]);\n \n \t\t\t// ACT\n-\t\t\tconst result = dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: {\n \t\t\t\t\ttype: 'and',\n \t\t\t\t\tfilters: [{ columnName: 'age', condition: 'eq', value: '30dfddf' }],\n@@ -2525,7 +2664,7 @@ describe('dataStore', () => {\n \t\t\t]);\n \n \t\t\t// ACT\n-\t\t\tconst result = await dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = await dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'active', condition: 'eq', value: true }] },\n \t\t\t\tdata: { active: false },\n \t\t\t});\n@@ -2576,7 +2715,7 @@ describe('dataStore', () => {\n \n \t\t\t// ACT\n \t\t\tconst newBirthday = new Date('1990-01-03');\n-\t\t\tconst result = await dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = await dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: {\n \t\t\t\t\ttype: 'and',\n \t\t\t\t\tfilters: [{ columnName: 'birthday', condition: 'eq', value: aliceBirthday }],\n@@ -2626,7 +2765,7 @@ describe('dataStore', () => {\n \t\t\t]);\n \n \t\t\t// ACT\n-\t\t\tconst result = await dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = await dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: {\n \t\t\t\t\ttype: 'and',\n \t\t\t\t\tfilters: [\n@@ -2678,7 +2817,7 @@ describe('dataStore', () => {\n \t\t\tawait dataStoreService.insertRows(dataStoreId, project1.id, [{ name: 'Alice', age: 30 }]);\n \n \t\t\t// ACT\n-\t\t\tconst result = await dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = await dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: {\n \t\t\t\t\ttype: 'and',\n \t\t\t\t\tfilters: [{ columnName: 'name', condition: 'eq', value: 'Charlie' }],\n@@ -2711,7 +2850,7 @@ describe('dataStore', () => {\n \t\t\tawait dataStoreService.insertRows(dataStoreId, project1.id, [{ name: 'Alice', age: 30 }]);\n \n \t\t\t// ACT\n-\t\t\tconst result = dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [] },\n \t\t\t\tdata: { name: 'Alice', age: 31 },\n \t\t\t});\n@@ -2743,7 +2882,7 @@ describe('dataStore', () => {\n \t\t\tawait dataStoreService.insertRows(dataStoreId, project1.id, [{ name: 'Alice', age: 30 }]);\n \n \t\t\t// ACT\n-\t\t\tconst result = dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'name', condition: 'eq', value: 'Alice' }] },\n \t\t\t\tdata: {},\n \t\t\t});\n@@ -2764,7 +2903,7 @@ describe('dataStore', () => {\n \n \t\tit('should fail when data store does not exist', async () => {\n \t\t\t// ACT & ASSERT\n-\t\t\tconst result = dataStoreService.updateRow('non-existent-id', project1.id, {\n+\t\t\tconst result = dataStoreService.updateRows('non-existent-id', project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'name', condition: 'eq', value: 'Alice' }] },\n \t\t\t\tdata: { age: 25 },\n \t\t\t});\n@@ -2782,7 +2921,7 @@ describe('dataStore', () => {\n \t\t\tawait dataStoreService.insertRows(dataStoreId, project1.id, [{ name: 'Alice' }]);\n \n \t\t\t// ACT & ASSERT\n-\t\t\tconst result = dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'name', condition: 'eq', value: 'Alice' }] },\n \t\t\t\tdata: { invalidColumn: 'value' },\n \t\t\t});\n@@ -2800,7 +2939,7 @@ describe('dataStore', () => {\n \t\t\tawait dataStoreService.insertRows(dataStoreId, project1.id, [{ name: 'Alice' }]);\n \n \t\t\t// ACT & ASSERT\n-\t\t\tconst result = dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: {\n \t\t\t\t\ttype: 'and',\n \t\t\t\t\tfilters: [{ columnName: 'invalidColumn', condition: 'eq', value: 'Alice' }],\n@@ -2824,7 +2963,7 @@ describe('dataStore', () => {\n \t\t\tawait dataStoreService.insertRows(dataStoreId, project1.id, [{ name: 'Alice', age: 30 }]);\n \n \t\t\t// ACT & ASSERT\n-\t\t\tconst result = dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'name', condition: 'eq', value: 'Alice' }] },\n \t\t\t\tdata: { age: 'not-a-number' },\n \t\t\t});\n@@ -2848,7 +2987,7 @@ describe('dataStore', () => {\n \t\t\t]);\n \n \t\t\t// ACT - only update age, leaving name and active unchanged\n-\t\t\tconst result = await dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = await dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'name', condition: 'eq', value: 'Alice' }] },\n \t\t\t\tdata: { age: 31 },\n \t\t\t});\n@@ -2883,7 +3022,7 @@ describe('dataStore', () => {\n \n \t\t\t// ACT\n \t\t\tconst newDate = new Date('1991-02-02');\n-\t\t\tconst result = await dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = await dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: { type: 'and', filters: [{ columnName: 'name', condition: 'eq', value: 'Alice' }] },\n \t\t\t\tdata: { birthDate: newDate.toISOString() },\n \t\t\t});\n@@ -2918,7 +3057,7 @@ describe('dataStore', () => {\n \t\t\tsoon.setDate(now.getDate() + 1);\n \n \t\t\t// ACT\n-\t\t\tconst result = await dataStoreService.updateRow(\n+\t\t\tconst result = await dataStoreService.updateRows(\n \t\t\t\tdataStoreId,\n \t\t\t\tproject1.id,\n \t\t\t\t{\n@@ -2936,6 +3075,161 @@ describe('dataStore', () => {\n \t\t\t\texpect.objectContaining({ id: 1, name: 'Alice', age: 31, active: false, timestamp: soon }),\n \t\t\t]);\n \t\t});\n+\n+\t\tit('should simulate update with dryRun=true and return before/after pairs', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst { id: dataStoreId } = await dataStoreService.createDataStore(project1.id, {\n+\t\t\t\tname: 'dataStore',\n+\t\t\t\tcolumns: [\n+\t\t\t\t\t{ name: 'name', type: 'string' },\n+\t\t\t\t\t{ name: 'age', type: 'number' },\n+\t\t\t\t],\n+\t\t\t});\n+\n+\t\t\tawait dataStoreService.insertRows(dataStoreId, project1.id, [\n+\t\t\t\t{ name: 'Alice', age: 30 },\n+\t\t\t\t{ name: 'Bob', age: 25 },\n+\t\t\t]);\n+\n+\t\t\t// ACT\n+\t\t\tconst result = await dataStoreService.updateRows(\n+\t\t\t\tdataStoreId,\n+\t\t\t\tproject1.id,\n+\t\t\t\t{\n+\t\t\t\t\tfilter: {\n+\t\t\t\t\t\ttype: 'and',\n+\t\t\t\t\t\tfilters: [{ columnName: 'name', condition: 'eq', value: 'Alice' }],\n+\t\t\t\t\t},\n+\t\t\t\t\tdata: { age: 31 },\n+\t\t\t\t},\n+\t\t\t\tfalse,\n+\t\t\t\ttrue,\n+\t\t\t);\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(Array.isArray(result)).toBe(true);\n+\t\t\texpect(result).toHaveLength(2);\n+\n+\t\t\t// Check the before state (first item)\n+\t\t\texpect((result as any)[0]).toEqual(\n+\t\t\t\texpect.objectContaining({\n+\t\t\t\t\tid: expect.any(Number),\n+\t\t\t\t\tname: 'Alice',\n+\t\t\t\t\tage: 30,\n+\t\t\t\t\tdryRunState: 'before',\n+\t\t\t\t\tcreatedAt: expect.any(Date),\n+\t\t\t\t\tupdatedAt: expect.any(Date),\n+\t\t\t\t}),\n+\t\t\t);\n+\n+\t\t\t// Check the after state (second item)\n+\t\t\texpect((result as any)[1]).toEqual(\n+\t\t\t\texpect.objectContaining({\n+\t\t\t\t\tid: expect.any(Number),\n+\t\t\t\t\tname: 'Alice',\n+\t\t\t\t\tage: 31, // Changed value\n+\t\t\t\t\tdryRunState: 'after',\n+\t\t\t\t\tcreatedAt: expect.any(Date),\n+\t\t\t\t\tupdatedAt: expect.any(Date),\n+\t\t\t\t}),\n+\t\t\t);\n+\n+\t\t\t// Should not actually update the rows\n+\t\t\tconst { data } = await dataStoreService.getManyRowsAndCount(dataStoreId, project1.id, {});\n+\t\t\tconst aliceRow = data.find((row) => row.name === 'Alice');\n+\t\t\texpect(aliceRow?.age).toBe(30); // Should still be original value\n+\t\t});\n+\n+\t\tit('should return empty array with dryRun=true when no rows match filter', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst { id: dataStoreId } = await dataStoreService.createDataStore(project1.id, {\n+\t\t\t\tname: 'dataStore',\n+\t\t\t\tcolumns: [\n+\t\t\t\t\t{ name: 'name', type: 'string' },\n+\t\t\t\t\t{ name: 'age', type: 'number' },\n+\t\t\t\t],\n+\t\t\t});\n+\n+\t\t\tawait dataStoreService.insertRows(dataStoreId, project1.id, [{ name: 'Alice', age: 30 }]);\n+\n+\t\t\t// ACT\n+\t\t\tconst result = await dataStoreService.updateRows(\n+\t\t\t\tdataStoreId,\n+\t\t\t\tproject1.id,\n+\t\t\t\t{\n+\t\t\t\t\tfilter: {\n+\t\t\t\t\t\ttype: 'and',\n+\t\t\t\t\t\tfilters: [{ columnName: 'name', condition: 'eq', value: 'NonExistent' }],\n+\t\t\t\t\t},\n+\t\t\t\t\tdata: { age: 31 },\n+\t\t\t\t},\n+\t\t\t\tfalse,\n+\t\t\t\ttrue,\n+\t\t\t);\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(result).toEqual([]);\n+\n+\t\t\t// Should not update any rows\n+\t\t\tconst { data } = await dataStoreService.getManyRowsAndCount(dataStoreId, project1.id, {});\n+\t\t\texpect(data[0].age).toBe(30);\n+\t\t});\n+\n+\t\tit('should handle multiple rows with dryRun=true returning multiple before/after pairs', async () => {\n+\t\t\t// ARRANGE\n+\t\t\tconst { id: dataStoreId } = await dataStoreService.createDataStore(project1.id, {\n+\t\t\t\tname: 'dataStore',\n+\t\t\t\tcolumns: [\n+\t\t\t\t\t{ name: 'name', type: 'string' },\n+\t\t\t\t\t{ name: 'active', type: 'boolean' },\n+\t\t\t\t],\n+\t\t\t});\n+\n+\t\t\tawait dataStoreService.insertRows(dataStoreId, project1.id, [\n+\t\t\t\t{ name: 'Alice', active: false },\n+\t\t\t\t{ name: 'Bob', active: false },\n+\t\t\t\t{ name: 'Charlie', active: true },\n+\t\t\t]);\n+\n+\t\t\t// ACT\n+\t\t\tconst result = await dataStoreService.updateRows(\n+\t\t\t\tdataStoreId,\n+\t\t\t\tproject1.id,\n+\t\t\t\t{\n+\t\t\t\t\tfilter: {\n+\t\t\t\t\t\ttype: 'and',\n+\t\t\t\t\t\tfilters: [{ columnName: 'active', condition: 'eq', value: false }],\n+\t\t\t\t\t},\n+\t\t\t\t\tdata: { active: true },\n+\t\t\t\t},\n+\t\t\t\tfalse,\n+\t\t\t\ttrue,\n+\t\t\t);\n+\n+\t\t\t// ASSERT\n+\t\t\texpect(result).toHaveLength(4);\n+\n+\t\t\t// Check first row pair\n+\t\t\texpect(result[0]).toEqual(\n+\t\t\t\texpect.objectContaining({ name: 'Alice', active: false, dryRunState: 'before' }),\n+\t\t\t);\n+\t\t\texpect(result[1]).toEqual(\n+\t\t\t\texpect.objectContaining({ name: 'Alice', active: true, dryRunState: 'after' }),\n+\t\t\t);\n+\n+\t\t\t// Check second row pair\n+\t\t\texpect(result[2]).toEqual(\n+\t\t\t\texpect.objectContaining({ name: 'Bob', active: false, dryRunState: 'before' }),\n+\t\t\t);\n+\t\t\texpect(result[3]).toEqual(\n+\t\t\t\texpect.objectContaining({ name: 'Bob', active: true, dryRunState: 'after' }),\n+\t\t\t);\n+\n+\t\t\t// Should not actually update the rows\n+\t\t\tconst { data } = await dataStoreService.getManyRowsAndCount(dataStoreId, project1.id, {});\n+\t\t\tconst activeFalseRows = data.filter((row) => row.active === false);\n+\t\t\texpect(activeFalseRows).toHaveLength(2);\n+\t\t});\n \t});\n \n \tdescribe('getManyRowsAndCount', () => {\n@@ -3022,7 +3316,7 @@ describe('dataStore', () => {\n \t\t\tawait dataStoreService.insertRows(dataStoreId, project1.id, [{ name: 'Alice' }]);\n \n \t\t\t// ACT\n-\t\t\tconst result = dataStoreService.updateRow(dataStoreId, project1.id, {\n+\t\t\tconst result = dataStoreService.updateRows(dataStoreId, project1.id, {\n \t\t\t\tfilter: {\n \t\t\t\t\ttype: 'and',\n \t\t\t\t\tfilters: [{ columnName: 'invalidColumn', condition: 'eq', value: 'Alice' }],",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fcli%2Fsrc%2Fmodules%2Fdata-table%2F__tests__%2Fdata-store.service.integration.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/modules/data-table/data-store-proxy.service.ts",
                "status": "modified",
                "additions": 15,
                "deletions": 3,
                "changes": 18,
                "patch": "@@ -153,12 +153,24 @@ export class DataStoreProxyService implements DataStoreProxyProvider {\n \t\t\t\treturn await dataStoreService.insertRows(dataStoreId, projectId, rows, returnType);\n \t\t\t},\n \n-\t\t\tasync updateRow(options: UpdateDataStoreRowOptions) {\n-\t\t\t\treturn await dataStoreService.updateRow(dataStoreId, projectId, options, true);\n+\t\t\tasync updateRows(options: UpdateDataStoreRowOptions) {\n+\t\t\t\treturn await dataStoreService.updateRows(\n+\t\t\t\t\tdataStoreId,\n+\t\t\t\t\tprojectId,\n+\t\t\t\t\t{ filter: options.filter, data: options.data },\n+\t\t\t\t\ttrue,\n+\t\t\t\t\toptions.dryRun,\n+\t\t\t\t);\n \t\t\t},\n \n \t\t\tasync upsertRow(options: UpsertDataStoreRowOptions) {\n-\t\t\t\treturn await dataStoreService.upsertRow(dataStoreId, projectId, options, true);\n+\t\t\t\treturn await dataStoreService.upsertRow(\n+\t\t\t\t\tdataStoreId,\n+\t\t\t\t\tprojectId,\n+\t\t\t\t\toptions,\n+\t\t\t\t\ttrue,\n+\t\t\t\t\toptions.dryRun,\n+\t\t\t\t);\n \t\t\t},\n \n \t\t\tasync deleteRows(options: DeleteDataTableRowsOptions) {",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fcli%2Fsrc%2Fmodules%2Fdata-table%2Fdata-store-proxy.service.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/modules/data-table/data-store-rows.repository.ts",
                "status": "modified",
                "additions": 127,
                "deletions": 13,
                "changes": 140,
                "patch": "@@ -20,6 +20,7 @@ import {\n \tDATA_TABLE_SYSTEM_COLUMNS,\n \tDataTableInsertRowsReturnType,\n \tDataTableInsertRowsResult,\n+\tDataStoreRowReturnWithState,\n } from 'n8n-workflow';\n \n import { DataStoreUserTableName } from './data-store.types';\n@@ -297,15 +298,15 @@ export class DataStoreRowsRepository {\n \t\t});\n \t}\n \n-\tasync updateRow<T extends boolean | undefined>(\n+\tasync updateRows<T extends boolean | undefined>(\n \t\tdataStoreId: string,\n \t\tdata: Record<string, DataStoreColumnJsType | null>,\n \t\tfilter: DataTableFilter,\n \t\tcolumns: DataTableColumn[],\n \t\treturnData?: T,\n \t\ttrx?: EntityManager,\n \t): Promise<T extends true ? DataStoreRowReturn[] : true>;\n-\tasync updateRow(\n+\tasync updateRows(\n \t\tdataStoreId: string,\n \t\tdata: Record<string, DataStoreColumnJsType | null>,\n \t\tfilter: DataTableFilter,\n@@ -323,21 +324,13 @@ export class DataStoreRowsRepository {\n \t\t\t\tthis.dataSource.driver.escape(x),\n \t\t\t);\n \t\t\tconst selectColumns = [...escapedSystemColumns, ...escapedColumns];\n-\t\t\tconst setData = { ...data };\n-\n-\t\t\tfor (const column of columns) {\n-\t\t\t\tif (column.name in setData) {\n-\t\t\t\t\tsetData[column.name] = normalizeValue(setData[column.name], column.type, dbType);\n-\t\t\t\t}\n-\t\t\t}\n+\t\t\tconst setData = this.prepareUpdateData(data, columns, dbType);\n \n \t\t\tlet affectedRows: Array<Pick<DataStoreRowReturn, 'id'>> = [];\n \t\t\tif (!useReturning && returnData) {\n \t\t\t\t// Only Postgres supports RETURNING statement on updates (with our typeorm),\n \t\t\t\t// on other engines we must query the list of updates rows later by ID\n-\t\t\t\tconst selectQuery = em.createQueryBuilder().select('id').from(table, 'dataTable');\n-\t\t\t\tthis.applyFilters(selectQuery, filter, 'dataTable', columns);\n-\t\t\t\taffectedRows = await selectQuery.getRawMany<{ id: number }>();\n+\t\t\t\taffectedRows = await this.getAffectedRowsForUpdate(dataStoreId, filter, columns, true, trx);\n \t\t\t}\n \n \t\t\tsetData.updatedAt = normalizeValue(new Date(), 'date', dbType);\n@@ -366,6 +359,58 @@ export class DataStoreRowsRepository {\n \t\t});\n \t}\n \n+\tasync dryRunUpdateRows(\n+\t\tdataStoreId: string,\n+\t\tdata: Record<string, DataStoreColumnJsType | null>,\n+\t\tfilter: DataTableFilter,\n+\t\tcolumns: DataTableColumn[],\n+\t\ttrx?: EntityManager,\n+\t): Promise<DataStoreRowReturnWithState[]> {\n+\t\tconst dbType = this.dataSource.options.type;\n+\n+\t\tconst beforeRows = await this.getAffectedRowsForUpdate(\n+\t\t\tdataStoreId,\n+\t\t\tfilter,\n+\t\t\tcolumns,\n+\t\t\tfalse,\n+\t\t\ttrx,\n+\t\t);\n+\n+\t\tconst columnUpdates = this.prepareUpdateData(data, columns, dbType);\n+\n+\t\treturn beforeRows.flatMap((original) => {\n+\t\t\tconst updated = { ...original, ...columnUpdates, updatedAt: new Date() };\n+\t\t\treturn this.toDryRunRows(original, updated);\n+\t\t});\n+\t}\n+\n+\tasync dryRunUpsertRow(\n+\t\tdataStoreId: string,\n+\t\tdata: Record<string, DataStoreColumnJsType | null>,\n+\t\tfilter: DataTableFilter,\n+\t\tcolumns: DataTableColumn[],\n+\t\ttrx?: EntityManager,\n+\t): Promise<DataStoreRowReturnWithState[]> {\n+\t\tconst updateResult = await this.dryRunUpdateRows(dataStoreId, data, filter, columns, trx);\n+\n+\t\tif (updateResult.length > 0) {\n+\t\t\treturn updateResult;\n+\t\t}\n+\n+\t\t// No rows were updated, simulate insert\n+\t\tconst dbType = this.dataSource.options.type;\n+\t\tconst now = new Date();\n+\t\tconst preparedData = this.prepareUpdateData(data, columns, dbType);\n+\t\tconst insertedRow: DataStoreRowReturn = {\n+\t\t\tid: 0, // Placeholder ID for dry run\n+\t\t\tcreatedAt: now,\n+\t\t\tupdatedAt: now,\n+\t\t\t...preparedData,\n+\t\t};\n+\n+\t\treturn this.toDryRunRows(null, insertedRow);\n+\t}\n+\n \t/**\n \t * Deletes rows from the data table.\n \t * Note: `dryRun` overrides `returnData` and always returns the affected rows without deleting them.\n@@ -416,7 +461,7 @@ export class DataStoreRowsRepository {\n \n \t\t\t// Skip deletion for dry run\n \t\t\tif (dryRun) {\n-\t\t\t\treturn affectedRows;\n+\t\t\t\treturn affectedRows.flatMap((row) => this.toDryRunRows(row, null));\n \t\t\t}\n \n \t\t\tconst deleteQuery = em.createQueryBuilder().delete().from(table, 'dataTable');\n@@ -444,6 +489,75 @@ export class DataStoreRowsRepository {\n \t\t});\n \t}\n \n+\tprivate async getAffectedRowsForUpdate<T extends boolean>(\n+\t\tdataStoreId: string,\n+\t\tfilter: DataTableFilter,\n+\t\tcolumns: DataTableColumn[],\n+\t\tidsOnly: T,\n+\t\ttrx?: EntityManager,\n+\t): Promise<T extends true ? Array<Pick<DataStoreRowReturn, 'id'>> : DataStoreRowReturn[]> {\n+\t\treturn await withTransaction(this.dataSource.manager, trx, async (em) => {\n+\t\t\tconst table = toTableName(dataStoreId);\n+\t\t\tconst selectColumns = idsOnly ? 'id' : '*';\n+\t\t\tconst selectQuery = em.createQueryBuilder().select(selectColumns).from(table, 'dataTable');\n+\t\t\tthis.applyFilters(selectQuery, filter, 'dataTable', columns);\n+\t\t\tconst rawRows: DataStoreRowsReturn = await selectQuery.getRawMany();\n+\n+\t\t\tif (idsOnly) {\n+\t\t\t\treturn rawRows;\n+\t\t\t}\n+\n+\t\t\treturn normalizeRows(rawRows, columns);\n+\t\t});\n+\t}\n+\n+\tprivate prepareUpdateData(\n+\t\tdata: Record<string, DataStoreColumnJsType | null>,\n+\t\tcolumns: DataTableColumn[],\n+\t\tdbType: DataSourceOptions['type'],\n+\t): Record<string, DataStoreColumnJsType | null> {\n+\t\tconst setData = { ...data };\n+\t\tfor (const column of columns) {\n+\t\t\tif (column.name in setData) {\n+\t\t\t\tsetData[column.name] = normalizeValue(setData[column.name], column.type, dbType);\n+\t\t\t}\n+\t\t}\n+\t\treturn setData;\n+\t}\n+\n+\tprivate toDryRunRows(\n+\t\tbeforeState: DataStoreRowReturn | null,\n+\t\tafterState: DataStoreRowReturn | null,\n+\t): DataStoreRowReturnWithState[] {\n+\t\tif (beforeState === null && afterState === null) {\n+\t\t\tthrow new Error('Both before and after rows cannot be null');\n+\t\t}\n+\n+\t\tif (beforeState && afterState) {\n+\t\t\treturn [\n+\t\t\t\t{ ...beforeState, dryRunState: 'before' },\n+\t\t\t\t{ ...afterState, dryRunState: 'after' },\n+\t\t\t];\n+\t\t}\n+\n+\t\t// If one of the states is null, create a template row with nulls for missing values\n+\t\tconst template = (beforeState ?? afterState)!;\n+\t\tconst nullRow = {\n+\t\t\tid: null,\n+\t\t\tcreatedAt: null,\n+\t\t\tupdatedAt: null,\n+\t\t\t...Object.fromEntries(Object.keys(template).map((key) => [key, null])),\n+\t\t};\n+\n+\t\tconst before = beforeState ?? nullRow;\n+\t\tconst after = afterState ?? nullRow;\n+\n+\t\treturn [\n+\t\t\t{ ...before, dryRunState: 'before' },\n+\t\t\t{ ...after, dryRunState: 'after' },\n+\t\t];\n+\t}\n+\n \tasync createTableWithColumns(\n \t\tdataStoreId: string,\n \t\tcolumns: DataTableColumn[],",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fcli%2Fsrc%2Fmodules%2Fdata-table%2Fdata-store-rows.repository.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/modules/data-table/data-store.controller.ts",
                "status": "modified",
                "additions": 52,
                "deletions": 4,
                "changes": 56,
                "patch": "@@ -281,11 +281,35 @@ export class DataStoreController {\n \t\t@Body dto: UpsertDataStoreRowDto,\n \t) {\n \t\ttry {\n+\t\t\t// because of strict overloads, we need separate paths\n+\t\t\tconst dryRun = dto.dryRun;\n+\t\t\tif (dryRun) {\n+\t\t\t\treturn await this.dataStoreService.upsertRow(\n+\t\t\t\t\tdataStoreId,\n+\t\t\t\t\treq.params.projectId,\n+\t\t\t\t\tdto,\n+\t\t\t\t\ttrue, // we want to always return data for dry runs\n+\t\t\t\t\tdryRun,\n+\t\t\t\t);\n+\t\t\t}\n+\n+\t\t\tconst returnData = dto.returnData;\n+\t\t\tif (returnData) {\n+\t\t\t\treturn await this.dataStoreService.upsertRow(\n+\t\t\t\t\tdataStoreId,\n+\t\t\t\t\treq.params.projectId,\n+\t\t\t\t\tdto,\n+\t\t\t\t\treturnData,\n+\t\t\t\t\tdryRun,\n+\t\t\t\t);\n+\t\t\t}\n+\n \t\t\treturn await this.dataStoreService.upsertRow(\n \t\t\t\tdataStoreId,\n \t\t\t\treq.params.projectId,\n \t\t\t\tdto,\n-\t\t\t\tdto.returnData,\n+\t\t\t\treturnData,\n+\t\t\t\tdryRun,\n \t\t\t);\n \t\t} catch (e: unknown) {\n \t\t\tif (e instanceof DataStoreNotFoundError) {\n@@ -302,18 +326,42 @@ export class DataStoreController {\n \n \t@Patch('/:dataStoreId/rows')\n \t@ProjectScope('dataStore:writeRow')\n-\tasync updateDataStoreRow(\n+\tasync updateDataStoreRows(\n \t\treq: AuthenticatedRequest<{ projectId: string }>,\n \t\t_res: Response,\n \t\t@Param('dataStoreId') dataStoreId: string,\n \t\t@Body dto: UpdateDataTableRowDto,\n \t) {\n \t\ttry {\n-\t\t\treturn await this.dataStoreService.updateRow(\n+\t\t\t// because of strict overloads, we need separate paths\n+\t\t\tconst dryRun = dto.dryRun;\n+\t\t\tif (dryRun) {\n+\t\t\t\treturn await this.dataStoreService.updateRows(\n+\t\t\t\t\tdataStoreId,\n+\t\t\t\t\treq.params.projectId,\n+\t\t\t\t\tdto,\n+\t\t\t\t\ttrue, // we want to always return data for dry runs\n+\t\t\t\t\tdryRun,\n+\t\t\t\t);\n+\t\t\t}\n+\n+\t\t\tconst returnData = dto.returnData;\n+\t\t\tif (returnData) {\n+\t\t\t\treturn await this.dataStoreService.updateRows(\n+\t\t\t\t\tdataStoreId,\n+\t\t\t\t\treq.params.projectId,\n+\t\t\t\t\tdto,\n+\t\t\t\t\treturnData,\n+\t\t\t\t\tdryRun,\n+\t\t\t\t);\n+\t\t\t}\n+\n+\t\t\treturn await this.dataStoreService.updateRows(\n \t\t\t\tdataStoreId,\n \t\t\t\treq.params.projectId,\n \t\t\t\tdto,\n-\t\t\t\tdto.returnData,\n+\t\t\t\treturnData,\n+\t\t\t\tdryRun,\n \t\t\t);\n \t\t} catch (e: unknown) {\n \t\t\tif (e instanceof DataStoreNotFoundError) {",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fcli%2Fsrc%2Fmodules%2Fdata-table%2Fdata-store.controller.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/modules/data-table/data-store.service.ts",
                "status": "modified",
                "additions": 74,
                "deletions": 15,
                "changes": 89,
                "patch": "@@ -24,6 +24,7 @@ import type {\n \tDataTablesSizeResult,\n \tDataTableInfoById,\n \tDataStoreColumnType,\n+\tDataStoreRowReturnWithState,\n } from 'n8n-workflow';\n import { DATA_TABLE_SYSTEM_COLUMN_TYPE_MAP, validateFieldType } from 'n8n-workflow';\n \n@@ -212,22 +213,49 @@ export class DataStoreService {\n \tasync upsertRow<T extends boolean | undefined>(\n \t\tdataTableId: string,\n \t\tprojectId: string,\n-\t\tdto: Omit<UpsertDataStoreRowDto, 'returnData'>,\n-\t\treturnData?: T,\n-\t): Promise<T extends true ? DataStoreRowReturn[] : true>;\n+\t\tdto: Omit<UpsertDataStoreRowDto, 'returnData' | 'dryRun'>,\n+\t\treturnData: true,\n+\t\tdryRun?: boolean,\n+\t): Promise<DataStoreRowReturn[] | DataStoreRowReturnWithState[]>;\n+\tasync upsertRow(\n+\t\tdataTableId: string,\n+\t\tprojectId: string,\n+\t\tdto: Omit<UpsertDataStoreRowDto, 'returnData' | 'dryRun'>,\n+\t\treturnData?: boolean,\n+\t\tdryRun?: true,\n+\t): Promise<DataStoreRowReturnWithState[]>;\n+\tasync upsertRow(\n+\t\tdataTableId: string,\n+\t\tprojectId: string,\n+\t\tdto: Omit<UpsertDataStoreRowDto, 'returnData' | 'dryRun'>,\n+\t\treturnData?: false,\n+\t\tdryRun?: false,\n+\t): Promise<true>;\n \tasync upsertRow(\n \t\tdataTableId: string,\n \t\tprojectId: string,\n-\t\tdto: Omit<UpsertDataStoreRowDto, 'returnData'>,\n+\t\tdto: Omit<UpsertDataStoreRowDto, 'returnData' | 'dryRun'>,\n \t\treturnData: boolean = false,\n+\t\tdryRun: boolean = false,\n \t) {\n \t\tawait this.validateDataTableSize();\n \t\tawait this.validateDataStoreExists(dataTableId, projectId);\n \n \t\tconst result = await this.dataStoreColumnRepository.manager.transaction(async (trx) => {\n \t\t\tconst columns = await this.dataStoreColumnRepository.getColumns(dataTableId, trx);\n \t\t\tthis.validateUpdateParams(dto, columns);\n-\t\t\tconst updated = await this.dataStoreRowsRepository.updateRow(\n+\n+\t\t\tif (dryRun) {\n+\t\t\t\treturn await this.dataStoreRowsRepository.dryRunUpsertRow(\n+\t\t\t\t\tdataTableId,\n+\t\t\t\t\tdto.data,\n+\t\t\t\t\tdto.filter,\n+\t\t\t\t\tcolumns,\n+\t\t\t\t\ttrx,\n+\t\t\t\t);\n+\t\t\t}\n+\n+\t\t\tconst updated = await this.dataStoreRowsRepository.updateRows(\n \t\t\t\tdataTableId,\n \t\t\t\tdto.data,\n \t\t\t\tdto.filter,\n@@ -251,7 +279,9 @@ export class DataStoreService {\n \t\t\treturn returnData ? inserted : true;\n \t\t});\n \n-\t\tthis.dataStoreSizeValidator.reset();\n+\t\tif (!dryRun) {\n+\t\t\tthis.dataStoreSizeValidator.reset();\n+\t\t}\n \n \t\treturn result;\n \t}\n@@ -277,25 +307,52 @@ export class DataStoreService {\n \t\tthis.validateAndTransformFilters(filter, columns);\n \t}\n \n-\tasync updateRow<T extends boolean | undefined>(\n+\tasync updateRows<T extends boolean | undefined>(\n \t\tdataTableId: string,\n \t\tprojectId: string,\n-\t\tdto: Omit<UpdateDataTableRowDto, 'returnData'>,\n-\t\treturnData?: T,\n-\t): Promise<T extends true ? DataStoreRowReturn[] : true>;\n-\tasync updateRow(\n+\t\tdto: Omit<UpdateDataTableRowDto, 'returnData' | 'dryRun'>,\n+\t\treturnData: true,\n+\t\tdryRun?: boolean,\n+\t): Promise<DataStoreRowReturn[] | DataStoreRowReturnWithState[]>;\n+\tasync updateRows(\n+\t\tdataTableId: string,\n+\t\tprojectId: string,\n+\t\tdto: Omit<UpdateDataTableRowDto, 'returnData' | 'dryRun'>,\n+\t\treturnData?: boolean,\n+\t\tdryRun?: true,\n+\t): Promise<DataStoreRowReturnWithState[]>;\n+\tasync updateRows(\n+\t\tdataTableId: string,\n+\t\tprojectId: string,\n+\t\tdto: Omit<UpdateDataTableRowDto, 'returnData' | 'dryRun'>,\n+\t\treturnData?: false,\n+\t\tdryRun?: false,\n+\t): Promise<true>;\n+\tasync updateRows(\n \t\tdataTableId: string,\n \t\tprojectId: string,\n-\t\tdto: Omit<UpdateDataTableRowDto, 'returnData'>,\n-\t\treturnData = false,\n+\t\tdto: Omit<UpdateDataTableRowDto, 'returnData' | 'dryRun'>,\n+\t\treturnData: boolean = false,\n+\t\tdryRun: boolean = false,\n \t) {\n \t\tawait this.validateDataTableSize();\n \t\tawait this.validateDataStoreExists(dataTableId, projectId);\n \n \t\tconst result = await this.dataStoreColumnRepository.manager.transaction(async (trx) => {\n \t\t\tconst columns = await this.dataStoreColumnRepository.getColumns(dataTableId, trx);\n \t\t\tthis.validateUpdateParams(dto, columns);\n-\t\t\treturn await this.dataStoreRowsRepository.updateRow(\n+\n+\t\t\tif (dryRun) {\n+\t\t\t\treturn await this.dataStoreRowsRepository.dryRunUpdateRows(\n+\t\t\t\t\tdataTableId,\n+\t\t\t\t\tdto.data,\n+\t\t\t\t\tdto.filter,\n+\t\t\t\t\tcolumns,\n+\t\t\t\t\ttrx,\n+\t\t\t\t);\n+\t\t\t}\n+\n+\t\t\treturn await this.dataStoreRowsRepository.updateRows(\n \t\t\t\tdataTableId,\n \t\t\t\tdto.data,\n \t\t\t\tdto.filter,\n@@ -305,7 +362,9 @@ export class DataStoreService {\n \t\t\t);\n \t\t});\n \n-\t\tthis.dataStoreSizeValidator.reset();\n+\t\tif (!dryRun) {\n+\t\t\tthis.dataStoreSizeValidator.reset();\n+\t\t}\n \n \t\treturn result;\n \t}",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fcli%2Fsrc%2Fmodules%2Fdata-table%2Fdata-store.service.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/nodes-base/nodes/DataTable/actions/row/delete.operation.ts",
                "status": "modified",
                "additions": 2,
                "deletions": 11,
                "changes": 13,
                "patch": "@@ -8,7 +8,7 @@ import {\n \n import { DRY_RUN } from '../../common/fields';\n import { getSelectFields, getSelectFilter } from '../../common/selectMany';\n-import { getDataTableProxyExecute } from '../../common/utils';\n+import { getDataTableProxyExecute, getDryRunParameter } from '../../common/utils';\n \n // named `deleteRows` since `delete` is a reserved keyword\n export const FIELD: string = 'deleteRows';\n@@ -38,16 +38,7 @@ export async function execute(\n \tindex: number,\n ): Promise<INodeExecutionData[]> {\n \tconst dataStoreProxy = await getDataTableProxyExecute(this, index);\n-\n-\tconst dryRun = this.getNodeParameter(`options.${DRY_RUN.name}`, index, false);\n-\n-\tif (typeof dryRun !== 'boolean') {\n-\t\tthrow new NodeOperationError(\n-\t\t\tthis.getNode(),\n-\t\t\t`unexpected input ${JSON.stringify(dryRun)} for boolean dryRun`,\n-\t\t);\n-\t}\n-\n+\tconst dryRun = getDryRunParameter(this, index);\n \tconst filter = await getSelectFilter(this, index);\n \n \tif (filter.filters.length === 0) {",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fnodes-base%2Fnodes%2FDataTable%2Factions%2Frow%2Fdelete.operation.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/nodes-base/nodes/DataTable/actions/row/update.operation.ts",
                "status": "modified",
                "additions": 14,
                "deletions": 3,
                "changes": 17,
                "patch": "@@ -7,8 +7,9 @@ import {\n } from 'n8n-workflow';\n \n import { makeAddRow, getAddRow } from '../../common/addRow';\n+import { DRY_RUN } from '../../common/fields';\n import { getSelectFields, getSelectFilter } from '../../common/selectMany';\n-import { getDataTableProxyExecute } from '../../common/utils';\n+import { getDataTableProxyExecute, getDryRunParameter } from '../../common/utils';\n \n export const FIELD: string = 'update';\n \n@@ -22,24 +23,34 @@ const displayOptions: IDisplayOptions = {\n export const description: INodeProperties[] = [\n \t...getSelectFields(displayOptions),\n \tmakeAddRow(FIELD, displayOptions),\n+\t{\n+\t\tdisplayName: 'Options',\n+\t\tname: 'options',\n+\t\ttype: 'collection',\n+\t\tdefault: {},\n+\t\tplaceholder: 'Add option',\n+\t\toptions: [DRY_RUN],\n+\t\tdisplayOptions,\n+\t},\n ];\n \n export async function execute(\n \tthis: IExecuteFunctions,\n \tindex: number,\n ): Promise<INodeExecutionData[]> {\n \tconst dataStoreProxy = await getDataTableProxyExecute(this, index);\n-\n+\tconst dryRun = getDryRunParameter(this, index);\n \tconst row = getAddRow(this, index);\n \tconst filter = await getSelectFilter(this, index);\n \n \tif (filter.filters.length === 0) {\n \t\tthrow new NodeOperationError(this.getNode(), 'At least one condition is required');\n \t}\n \n-\tconst updatedRows = await dataStoreProxy.updateRow({\n+\tconst updatedRows = await dataStoreProxy.updateRows({\n \t\tdata: row,\n \t\tfilter,\n+\t\tdryRun,\n \t});\n \n \treturn updatedRows.map((json) => ({ json }));",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fnodes-base%2Fnodes%2FDataTable%2Factions%2Frow%2Fupdate.operation.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/nodes-base/nodes/DataTable/actions/row/upsert.operation.ts",
                "status": "modified",
                "additions": 13,
                "deletions": 3,
                "changes": 16,
                "patch": "@@ -7,8 +7,9 @@ import {\n } from 'n8n-workflow';\n \n import { makeAddRow, getAddRow } from '../../common/addRow';\n+import { DRY_RUN } from '../../common/fields';\n import { getSelectFields, getSelectFilter } from '../../common/selectMany';\n-import { getDataTableProxyExecute } from '../../common/utils';\n+import { getDataTableProxyExecute, getDryRunParameter } from '../../common/utils';\n \n export const FIELD: string = 'upsert';\n \n@@ -22,16 +23,24 @@ const displayOptions: IDisplayOptions = {\n export const description: INodeProperties[] = [\n \t...getSelectFields(displayOptions),\n \tmakeAddRow(FIELD, displayOptions),\n+\t{\n+\t\tdisplayName: 'Options',\n+\t\tname: 'options',\n+\t\ttype: 'collection',\n+\t\tdefault: {},\n+\t\tplaceholder: 'Add option',\n+\t\toptions: [DRY_RUN],\n+\t\tdisplayOptions,\n+\t},\n ];\n \n export async function execute(\n \tthis: IExecuteFunctions,\n \tindex: number,\n ): Promise<INodeExecutionData[]> {\n \tconst dataStoreProxy = await getDataTableProxyExecute(this, index);\n-\n+\tconst dryRun = getDryRunParameter(this, index);\n \tconst row = getAddRow(this, index);\n-\n \tconst filter = await getSelectFilter(this, index);\n \n \tif (filter.filters.length === 0) {\n@@ -41,6 +50,7 @@ export async function execute(\n \tconst result = await dataStoreProxy.upsertRow({\n \t\tdata: row,\n \t\tfilter,\n+\t\tdryRun,\n \t});\n \n \treturn result.map((json) => ({ json }));",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fnodes-base%2Fnodes%2FDataTable%2Factions%2Frow%2Fupsert.operation.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/nodes-base/nodes/DataTable/common/fields.ts",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "patch": "@@ -8,5 +8,5 @@ export const DRY_RUN = {\n \ttype: 'boolean',\n \tdefault: false,\n \tdescription:\n-\t\t'Whether the operation should only be simulated, returning the rows that would have been affected',\n+\t\t'Whether the operation simulates and returns affected rows in their \"before\" and \"after\" states',\n } satisfies INodeProperties;",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fnodes-base%2Fnodes%2FDataTable%2Fcommon%2Ffields.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/nodes-base/nodes/DataTable/common/utils.ts",
                "status": "modified",
                "additions": 14,
                "deletions": 1,
                "changes": 15,
                "patch": "@@ -13,7 +13,7 @@ import { NodeOperationError } from 'n8n-workflow';\n \n import type { FieldEntry, FilterType } from './constants';\n import { ALL_CONDITIONS, ANY_CONDITION } from './constants';\n-import { DATA_TABLE_ID_FIELD } from './fields';\n+import { DATA_TABLE_ID_FIELD, DRY_RUN } from './fields';\n \n type DateLike = { toISOString: () => string };\n \n@@ -178,3 +178,16 @@ export function dataObjectToApiInput(\n \t\t}),\n \t);\n }\n+\n+export function getDryRunParameter(ctx: IExecuteFunctions, index: number): boolean {\n+\tconst dryRun = ctx.getNodeParameter(`options.${DRY_RUN.name}`, index, false);\n+\n+\tif (typeof dryRun !== 'boolean') {\n+\t\tthrow new NodeOperationError(\n+\t\t\tctx.getNode(),\n+\t\t\t`unexpected input ${JSON.stringify(dryRun)} for boolean dryRun`,\n+\t\t);\n+\t}\n+\n+\treturn dryRun;\n+}",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fnodes-base%2Fnodes%2FDataTable%2Fcommon%2Futils.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/nodes-base/nodes/Evaluation/test/Evaluation.node.test.ts",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "patch": "@@ -18,7 +18,7 @@ describe('Test Evaluation', () => {\n \tconst mockDataTable = mock<IDataStoreProjectService>({\n \t\tgetColumns: jest.fn(),\n \t\taddColumn: jest.fn(),\n-\t\tupdateRow: jest.fn(),\n+\t\tupdateRows: jest.fn(),\n \t});\n \n \tconst mockExecuteFunctions = mock<IExecuteFunctions>({\n@@ -69,7 +69,7 @@ describe('Test Evaluation', () => {\n \n \t\t\t\texpect(mockDataTable.getColumns).not.toHaveBeenCalled();\n \t\t\t\texpect(mockDataTable.addColumn).not.toHaveBeenCalled();\n-\t\t\t\texpect(mockDataTable.updateRow).not.toHaveBeenCalled();\n+\t\t\t\texpect(mockDataTable.updateRows).not.toHaveBeenCalled();\n \t\t\t});\n \n \t\t\ttest('should return empty when there is no parent evaluation trigger', async () => {\n@@ -92,7 +92,7 @@ describe('Test Evaluation', () => {\n \n \t\t\t\texpect(mockDataTable.getColumns).not.toHaveBeenCalled();\n \t\t\t\texpect(mockDataTable.addColumn).not.toHaveBeenCalled();\n-\t\t\t\texpect(mockDataTable.updateRow).not.toHaveBeenCalled();\n+\t\t\t\texpect(mockDataTable.updateRows).not.toHaveBeenCalled();\n \t\t\t});\n \n \t\t\ttest('should update rows and return input data with existing columns', async () => {\n@@ -129,7 +129,7 @@ describe('Test Evaluation', () => {\n \n \t\t\t\texpect(mockDataTable.getColumns).toHaveBeenCalled();\n \t\t\t\texpect(mockDataTable.addColumn).not.toHaveBeenCalled();\n-\t\t\t\texpect(mockDataTable.updateRow).toHaveBeenCalledWith({\n+\t\t\t\texpect(mockDataTable.updateRows).toHaveBeenCalledWith({\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\tfilters: [{ columnName: 'id', condition: 'eq', value: 23 }],\n@@ -178,7 +178,7 @@ describe('Test Evaluation', () => {\n \t\t\t\t\tname: 'bar',\n \t\t\t\t\ttype: 'string',\n \t\t\t\t});\n-\t\t\t\texpect(mockDataTable.updateRow).toHaveBeenCalledWith({\n+\t\t\t\texpect(mockDataTable.updateRows).toHaveBeenCalledWith({\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'and',\n \t\t\t\t\t\tfilters: [{ columnName: 'id', condition: 'eq', value: 23 }],",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fnodes-base%2Fnodes%2FEvaluation%2Ftest%2FEvaluation.node.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/nodes-base/nodes/Evaluation/test/evaluationUtils.test.ts",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "patch": "@@ -146,7 +146,7 @@ describe('setOutputs', () => {\n \t\t];\n \n \t\tconst mockDataTable = {\n-\t\t\tupdateRow: jest.fn(),\n+\t\t\tupdateRows: jest.fn(),\n \t\t\tgetColumns: jest.fn().mockReturnValue(outputValues.map((o) => ({ name: o.outputName }))),\n \t\t\taddColumn: jest.fn(),\n \t\t};\n@@ -190,7 +190,7 @@ describe('setOutputs', () => {\n \n \t\t\texpect(mockDataTable.getColumns).toHaveBeenCalled();\n \t\t\texpect(mockDataTable.addColumn).not.toHaveBeenCalled();\n-\t\t\texpect(mockDataTable.updateRow).toHaveBeenCalledWith({\n+\t\t\texpect(mockDataTable.updateRows).toHaveBeenCalledWith({\n \t\t\t\tfilter: {\n \t\t\t\t\ttype: 'and',\n \t\t\t\t\tfilters: [\n@@ -230,7 +230,7 @@ describe('setOutputs', () => {\n \t\t\t});\n \t\t\tawait setOutputs.call(context);\n \n-\t\t\texpect(mockDataTable.updateRow).toHaveBeenCalledWith(\n+\t\t\texpect(mockDataTable.updateRows).toHaveBeenCalledWith(\n \t\t\t\texpect.objectContaining({\n \t\t\t\t\tfilter: {\n \t\t\t\t\t\ttype: 'and',\n@@ -265,7 +265,7 @@ describe('setOutputs', () => {\n \t\t\t\tname: 'new_column',\n \t\t\t\ttype: 'string',\n \t\t\t});\n-\t\t\texpect(mockDataTable.updateRow).toHaveBeenCalledWith({\n+\t\t\texpect(mockDataTable.updateRows).toHaveBeenCalledWith({\n \t\t\t\tfilter: {\n \t\t\t\t\ttype: 'and',\n \t\t\t\t\tfilters: [",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fnodes-base%2Fnodes%2FEvaluation%2Ftest%2FevaluationUtils.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/nodes-base/nodes/Evaluation/utils/evaluationUtils.ts",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "patch": "@@ -169,7 +169,7 @@ export async function setOutputs(this: IExecuteFunctions): Promise<INodeExecutio\n \t\t\t});\n \t\t}\n \n-\t\tawait dataTableProxy.updateRow({\n+\t\tawait dataTableProxy.updateRows({\n \t\t\tfilter: {\n \t\t\t\ttype: 'and',\n \t\t\t\tfilters: [",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fnodes-base%2Fnodes%2FEvaluation%2Futils%2FevaluationUtils.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/workflow/src/data-store.types.ts",
                "status": "modified",
                "additions": 20,
                "deletions": 2,
                "changes": 22,
                "patch": "@@ -60,11 +60,13 @@ export type ListDataStoreRowsOptions = {\n export type UpdateDataStoreRowOptions = {\n \tfilter: DataTableFilter;\n \tdata: DataStoreRow;\n+\tdryRun?: boolean;\n };\n \n export type UpsertDataStoreRowOptions = {\n \tfilter: DataTableFilter;\n \tdata: DataStoreRow;\n+\tdryRun?: boolean;\n };\n \n export type DeleteDataTableRowsOptions = {\n@@ -99,6 +101,18 @@ export type DataStoreRows = DataStoreRow[];\n export type DataStoreRowReturn = DataStoreRow & DataStoreRowReturnBase;\n export type DataStoreRowsReturn = DataStoreRowReturn[];\n \n+export type DataStoreRowReturnWithState = DataStoreRow & {\n+\tid: number | null;\n+\tcreatedAt: Date | null;\n+\tupdatedAt: Date | null;\n+\tdryRunState: 'before' | 'after';\n+};\n+\n+export type DataStoreRowUpdatePair = {\n+\tbefore: DataStoreRowReturn;\n+\tafter: DataStoreRowReturn;\n+};\n+\n export type DataTableInsertRowsReturnType = 'all' | 'id' | 'count';\n export type DataTableInsertRowsBulkResult = { success: true; insertedRows: number };\n export type DataTableInsertRowsResult<\n@@ -163,9 +177,13 @@ export interface IDataStoreProjectService {\n \t\treturnType: T,\n \t): Promise<DataTableInsertRowsResult<T>>;\n \n-\tupdateRow(options: UpdateDataStoreRowOptions): Promise<DataStoreRowReturn[]>;\n+\tupdateRows(\n+\t\toptions: UpdateDataStoreRowOptions,\n+\t): Promise<DataStoreRowReturn[] | DataStoreRowReturnWithState[]>;\n \n-\tupsertRow(options: UpsertDataStoreRowOptions): Promise<DataStoreRowReturn[]>;\n+\tupsertRow(\n+\t\toptions: UpsertDataStoreRowOptions,\n+\t): Promise<DataStoreRowReturn[] | DataStoreRowReturnWithState[]>;\n \n \tdeleteRows(options: DeleteDataTableRowsOptions): Promise<DataStoreRowReturn[]>;\n }",
                "blob_url": "https://github.com/n8n-io/n8n/blob/29f6b2a9f22ad0d5eae0b2a9bc1ed5702967b923/packages%2Fworkflow%2Fsrc%2Fdata-store.types.ts",
                "previous_filename": null
              }
            ],
            "total_additions": 710,
            "total_deletions": 111,
            "total_changes": 821,
            "ci_checks": [
              {
                "name": "Notify Slack on failure",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:26:32Z",
                "completed_at": "2025-10-02T10:26:34Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190073417/job/51783858399",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190073417/job/51783858399"
              },
              {
                "name": "Bundle Size Check",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:18:37Z",
                "completed_at": "2025-10-02T10:18:36Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190073442/job/51783325666",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190073442/job/51783325666"
              },
              {
                "name": "Lint / Lint",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:18:52Z",
                "completed_at": "2025-10-02T10:22:55Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190073442/job/51783325569",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190073442/job/51783325569"
              },
              {
                "name": "Unit tests / Unit tests",
                "status": "in_progress",
                "conclusion": null,
                "started_at": "2025-10-02T10:18:52Z",
                "completed_at": null,
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190073442/job/51783325542",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190073442/job/51783325542"
              },
              {
                "name": "Postgres",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:15:34Z",
                "completed_at": "2025-10-02T10:18:35Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190073417/job/51783103410",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190073417/job/51783103410"
              },
              {
                "name": "MySQL 8.4",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:15:33Z",
                "completed_at": "2025-10-02T10:26:29Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190073417/job/51783103382",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190073417/job/51783103382"
              },
              {
                "name": "MariaDB",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:15:34Z",
                "completed_at": "2025-10-02T10:24:26Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190073417/job/51783103378",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190073417/job/51783103378"
              },
              {
                "name": "SQLite Pooled",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:15:33Z",
                "completed_at": "2025-10-02T10:18:10Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190073417/job/51783103374",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190073417/job/51783103374"
              },
              {
                "name": "notify",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:14:02Z",
                "completed_at": "2025-10-02T10:14:07Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190073459/job/51783009230",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190073459/job/51783009230"
              },
              {
                "name": "Install & Build",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:14:12Z",
                "completed_at": "2025-10-02T10:18:36Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190073442/job/51783005899",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190073442/job/51783005899"
              },
              {
                "name": "Install & Build",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:14:11Z",
                "completed_at": "2025-10-02T10:15:20Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190073417/job/51783005886",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190073417/job/51783005886"
              },
              {
                "name": "check-pr-title",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:13:57Z",
                "completed_at": "2025-10-02T10:14:02Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18190073397/job/51783005870",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18190073397/job/51783005870"
              },
              {
                "name": "Aikido Security: check code",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:13:54Z",
                "completed_at": "2025-10-02T10:13:55Z",
                "html_url": "https://github.com/n8n-io/n8n/runs/51783005415",
                "details_url": "https://app.aikido.dev/featurebranch/scan/50302645?groupId=1590"
              }
            ],
            "ci_status": "pending",
            "timeline_metrics": {
              "time_to_first_review_hours": 44.589166666666664,
              "time_to_first_approval_hours": null,
              "time_to_merge_hours": null,
              "first_commit_at": "2025-09-29T17:20:13Z",
              "last_commit_at": "2025-10-02T10:13:44Z",
              "time_from_first_to_last_commit_hours": 64.89194444444445,
              "total_review_time_hours": null,
              "total_wait_time_hours": null,
              "number_of_review_cycles": 3
            },
            "comments": [
              {
                "id": 3351231104,
                "author": "codecov[bot]",
                "body": "## [Codecov](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) Report\n:x: Patch coverage is `77.17391%` with `21 lines` in your changes missing coverage. Please review.\n| [Files with missing lines](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) | Patch % | Lines |\n|---|---|---|\n| [...li/src/modules/data-table/data-store.controller.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvY2xpL3NyYy9tb2R1bGVzL2RhdGEtdGFibGUvZGF0YS1zdG9yZS5jb250cm9sbGVyLnRz) | 71.42% | [4 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...se/nodes/DataTable/actions/row/update.operation.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvbm9kZXMtYmFzZS9ub2Rlcy9EYXRhVGFibGUvYWN0aW9ucy9yb3cvdXBkYXRlLm9wZXJhdGlvbi50cw==) | 0.00% | [4 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...ackages/nodes-base/nodes/DataTable/common/utils.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvbm9kZXMtYmFzZS9ub2Rlcy9EYXRhVGFibGUvY29tbW9uL3V0aWxzLnRz) | 33.33% | [4 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...se/nodes/DataTable/actions/row/upsert.operation.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvbm9kZXMtYmFzZS9ub2Rlcy9EYXRhVGFibGUvYWN0aW9ucy9yb3cvdXBzZXJ0Lm9wZXJhdGlvbi50cw==) | 0.00% | [3 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...src/modules/data-table/data-store-proxy.service.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvY2xpL3NyYy9tb2R1bGVzL2RhdGEtdGFibGUvZGF0YS1zdG9yZS1wcm94eS5zZXJ2aWNlLnRz) | 33.33% | [2 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...c/modules/data-table/data-store-rows.repository.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvY2xpL3NyYy9tb2R1bGVzL2RhdGEtdGFibGUvZGF0YS1zdG9yZS1yb3dzLnJlcG9zaXRvcnkudHM=) | 95.83% | [1 Missing and 1 partial :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n| [...se/nodes/DataTable/actions/row/delete.operation.ts](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io#diff-cGFja2FnZXMvbm9kZXMtYmFzZS9ub2Rlcy9EYXRhVGFibGUvYWN0aW9ucy9yb3cvZGVsZXRlLm9wZXJhdGlvbi50cw==) | 0.00% | [2 Missing :warning: ](https://app.codecov.io/gh/n8n-io/n8n/pull/20167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) |\n\n:loudspeaker: Thoughts on this report? [Let us know!](https://github.com/codecov/feedback/issues/255)",
                "created_at": "2025-09-30T10:30:52Z",
                "updated_at": "2025-10-02T09:25:31Z",
                "comment_type": "issue_comment",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              },
              {
                "id": 3359234566,
                "author": "dariacodes",
                "body": "@CharlieKolb Since you\u2019re most familiar with these changes, your input would be especially valuable.\r\n@Cadiac I\u2019d also appreciate your input, especially since I updated the evaluation tests.",
                "created_at": "2025-10-02T05:49:00Z",
                "updated_at": "2025-10-02T05:49:00Z",
                "comment_type": "issue_comment",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              },
              {
                "id": 3360292261,
                "author": "currents-bot[bot]",
                "body": "\n<!-- currents_comment_id: pw_I0yzoc -->\n<!-- currents_run_outcome: failed -->\n\n<p align=\"center\">\n<a href=\"https://app.currents.dev/run/49d479d05de73654\">\u274c</a>\n</p>\n\n<p align=\"center\">\nE2E Tests: <span title=\"n8n\">n8n</span> tests <strong>failed</strong> after 6m 51s\n</p>\n\n<p align=\"center\">\n  <a href=\"https://app.currents.dev/run/49d479d05de73654/specs?filter=PASSED\" title=\"Passed\">\ud83d\udfe2</a> 559  \u00b7  <a href=\"https://app.currents.dev/run/49d479d05de73654/specs?filter=FAILED&filter=FAILING&filter=CANCELLED&filter=TIMED_OUT\" title=\"Failed\">\ud83d\udd34</a> 1  \u00b7  <a href=\"https://app.currents.dev/run/49d479d05de73654\" title=\"Ignored\">\u26aa\ufe0f</a> 5  \u00b7  <a href=\"https://app.currents.dev/run/49d479d05de73654/specs?sort=flakiness&sort_direction=desc&fo=1\" title=\"Flaky\">\ud83d\udfe3</a> 1\n</p>\n\n<p align=\"center\">\n<a href=\"https://app.currents.dev/run/49d479d05de73654\" target=\"_blank\">View Run Details</a>\n</p>\n\n\n<details><summary>Run Details</summary>\n<p>\n\n- Project: n8n\n- Groups: 3\n- Framework: Playwright\n\n- Run Status: Failed\n- Commit: a17116e8f653e565173180ae5bd35babb3382e78\n- Spec files: 101\n- Overall tests: 565\n- Duration: 6m 51s\n- Parallelization: 9\n\n</p>\n</details>\n\n\n\n\n<details><summary>Failed Spec Files</summary>\n<p>\n\n| Spec File | Failures |\n| ------------- | ------------- |\n| [tests/ui/42-nps-survey.spec.ts](https://app.currents.dev/instance/iTbTI2m2BNbjFcqn) | 1 |\n\n</p>\n</details>\n\n\n\n<details><summary>Groups</summary>\n<p>\n\n| GroupId | Results | Spec Files Progress |\n| ------------- | ------------- | ------------- |\n| ui | <a href=\"https://app.currents.dev/run/49d479d05de73654/specs?filter=PASSED\" title=\"Passed\">\ud83d\udfe2</a> 414  \u00b7  <a href=\"https://app.currents.dev/run/49d479d05de73654/specs?filter=FAILED&filter=FAILING&filter=CANCELLED&filter=TIMED_OUT\" title=\"Failed\">\ud83d\udd34</a> 1  \u00b7  <a href=\"https://app.currents.dev/run/49d479d05de73654\" title=\"Ignored\">\u26aa\ufe0f</a> 5  \u00b7  <a href=\"https://app.currents.dev/run/49d479d05de73654/specs?sort=flakiness&sort_direction=desc&fo=1\" title=\"Flaky\">\ud83d\udfe3</a> 1 | 77 / 77\n| ui:isolated | <a href=\"https://app.currents.dev/run/49d479d05de73654/specs?filter=PASSED\" title=\"Passed\">\ud83d\udfe2</a> 25  \u00b7  <a href=\"https://app.currents.dev/run/49d479d05de73654/specs?filter=FAILED&filter=FAILING&filter=CANCELLED&filter=TIMED_OUT\" title=\"Failed\">\ud83d\udd34</a> 0  \u00b7  <a href=\"https://app.currents.dev/run/49d479d05de73654\" title=\"Ignored\">\u26aa\ufe0f</a> 0 | 4 / 4\n| No name | <a href=\"https://app.currents.dev/run/49d479d05de73654/specs?filter=PASSED\" title=\"Passed\">\ud83d\udfe2</a> 120  \u00b7  <a href=\"https://app.currents.dev/run/49d479d05de73654/specs?filter=FAILED&filter=FAILING&filter=CANCELLED&filter=TIMED_OUT\" title=\"Failed\">\ud83d\udd34</a> 0  \u00b7  <a href=\"https://app.currents.dev/run/49d479d05de73654\" title=\"Ignored\">\u26aa\ufe0f</a> 0 | 20 / 20\n\n</p>\n</details>\n\n\n\n  ---\n  \n  <div>\n  This message was posted automatically by \n  <a href=\"https://currents.dev\" target=\"_blank\">currents.dev<a/> | <a href=\"https://app.currents.dev/organizations/683ca7740952a37f8abd2859/projects/I0yzoc\">Integration Settings</a>\n  </div>\n  \n",
                "created_at": "2025-10-02T10:08:28Z",
                "updated_at": "2025-10-02T10:11:45Z",
                "comment_type": "issue_comment",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              },
              {
                "id": 3360293437,
                "author": "dariacodes",
                "body": "@CharlieKolb The thing is that it is not forbidden, you can still have such column name, and all the functionality, except for `dryRuns`, will work correctly. We could, however, show some warning on the node, if `dryRunState` exists in the db - e.g. \"The column `dryRunState` will be overwritten!\"",
                "created_at": "2025-10-02T10:08:45Z",
                "updated_at": "2025-10-02T10:08:45Z",
                "comment_type": "issue_comment",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              },
              {
                "id": 3360297135,
                "author": "CharlieKolb",
                "body": "True, but it avoids the edge case rather than risking confusing users. Don't mind either way tho \ud83d\udc4d ",
                "created_at": "2025-10-02T10:09:31Z",
                "updated_at": "2025-10-02T10:09:31Z",
                "comment_type": "issue_comment",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              },
              {
                "id": 2394885303,
                "author": "cubic-dev-ai[bot]",
                "body": "<!-- metadata:{\"confidence\":9,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"cd /mnt/workspace && rg -n \\\"rawRows as\\\" packages/cli/src/modules/data-table/data-store-rows.repository.ts\"}}]},{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"cd /mnt/workspace && sed -n '500,540p' packages/cli/src/modules/data-table/data-store-rows.repository.ts\"}}]},{\"text\":\"\",\"toolCalls\":[{\"toolName\":\"bash\",\"input\":{\"command\":\"cd /mnt/workspace && git diff\"}}]}]} -->\nRule violated: **Prefer Typeguards over Type casting**\n\nThe new helper narrows the query result with `as` assertions (`rawRows as \u2026` / `normalizeRows(...) as \u2026`). This violates the \"Prefer typeguards over type casting\" rule and risks masking unexpected row shapes. Validate the payload (e.g. check `typeof row.id === 'number'` before building the return array) or adjust the return typing without `as`.\n\n<details>\n<summary>Prompt for AI agents</summary>\n\n~~~\nAddress the following comment on packages/cli/src/modules/data-table/data-store-rows.repository.ts at line 509:\n\n<comment>The new helper narrows the query result with `as` assertions (`rawRows as \u2026` / `normalizeRows(...) as \u2026`). This violates the &quot;Prefer typeguards over type casting&quot; rule and risks masking unexpected row shapes. Validate the payload (e.g. check `typeof row.id === &#39;number&#39;` before building the return array) or adjust the return typing without `as`.</comment>\n\n<file context>\n@@ -444,6 +491,79 @@ export class DataStoreRowsRepository {\n+\t\t\tconst rawRows: DataStoreRowsReturn = await selectQuery.getRawMany();\n+\n+\t\t\tif (idsOnly) {\n+\t\t\t\treturn rawRows as T extends true\n+\t\t\t\t\t? Array&lt;Pick&lt;DataStoreRowReturn, &#39;id&#39;&gt;&gt;\n+\t\t\t\t\t: DataStoreRowReturn[];\n</file context>\n~~~\n\n</details>\n\n\u2705 Addressed in [`1ca6b24`](https://github.com/n8n-io/n8n/commit/1ca6b24ede199fb53cfe3052d7abe5816daf6155)",
                "created_at": "2025-10-01T14:46:27Z",
                "updated_at": "2025-10-01T16:05:34Z",
                "comment_type": "review_comment",
                "in_reply_to_id": null,
                "path": "packages/cli/src/modules/data-table/data-store-rows.repository.ts",
                "line": 509
              },
              {
                "id": 2398111321,
                "author": "CharlieKolb",
                "body": "Maybe even -1 \ud83e\udd14 ",
                "created_at": "2025-10-02T09:57:40Z",
                "updated_at": "2025-10-02T10:00:27Z",
                "comment_type": "review_comment",
                "in_reply_to_id": null,
                "path": "packages/cli/src/modules/data-table/data-store-rows.repository.ts",
                "line": 405
              },
              {
                "id": 2398113384,
                "author": "CharlieKolb",
                "body": "`.flatMap` :P",
                "created_at": "2025-10-02T09:58:13Z",
                "updated_at": "2025-10-02T10:00:27Z",
                "comment_type": "review_comment",
                "in_reply_to_id": null,
                "path": "packages/cli/src/modules/data-table/data-store-rows.repository.ts",
                "line": 466
              },
              {
                "id": 2398158283,
                "author": "dariacodes",
                "body": "`-1` expresses \"does not exist\" in my opinion, whereas we want to communicate that we will add this row",
                "created_at": "2025-10-02T10:09:33Z",
                "updated_at": "2025-10-02T10:09:33Z",
                "comment_type": "review_comment",
                "in_reply_to_id": 2398111321,
                "path": "packages/cli/src/modules/data-table/data-store-rows.repository.ts",
                "line": 405
              },
              {
                "id": 3289612227,
                "author": "cubic-dev-ai[bot]",
                "body": "**1 issue found** across 19 files\n\n<details>\n<summary>Prompt for AI agents (all 1 issues)</summary>\n\n~~~\n\nUnderstand the root cause of the following 1 issues and fix them.\n\n\n<file name=\"packages/cli/src/modules/data-table/data-store-rows.repository.ts\">\n\n<violation number=\"1\" location=\"packages/cli/src/modules/data-table/data-store-rows.repository.ts:509\">\nRule violated: **Prefer Typeguards over Type casting**\n\nThe new helper narrows the query result with `as` assertions (`rawRows as \u2026` / `normalizeRows(...) as \u2026`). This violates the &quot;Prefer typeguards over type casting&quot; rule and risks masking unexpected row shapes. Validate the payload (e.g. check `typeof row.id === &#39;number&#39;` before building the return array) or adjust the return typing without `as`.</violation>\n</file>\n\n~~~\n\n</details>\n\n<sub>React with \ud83d\udc4d or \ud83d\udc4e to teach cubic. Mention `@cubic-dev-ai` to give feedback, ask questions, or re-run the review.</sub>",
                "created_at": "2025-10-01T14:46:27Z",
                "updated_at": null,
                "comment_type": "review",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              },
              {
                "id": 3293707965,
                "author": "CharlieKolb",
                "body": "I'm okay with not trying to avoid a column name clash, but should we add `dryRunState` to the forbidden column names going forward? \ud83e\udd14 \n\nSorry about the mess with the overloads, this isn't scaling well \ud83d\ude05 \n\nCode looks great, very clean solutions all around \ud83d\ude4c ",
                "created_at": "2025-10-02T10:00:27Z",
                "updated_at": null,
                "comment_type": "review",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              }
            ],
            "total_comments": 11,
            "labels": [
              {
                "name": "node/improvement",
                "color": "008672",
                "description": "New feature or request"
              },
              {
                "name": "core",
                "color": "DC143C",
                "description": "Enhancement outside /nodes-base and /editor-ui"
              },
              {
                "name": "n8n team",
                "color": "ffffff",
                "description": "Authored by the n8n team"
              }
            ],
            "linked_issues": [
              {
                "number": 39,
                "title": "Node connection arrow can be deleted in read-only execution view",
                "state": "closed",
                "url": "https://github.com/n8n-io/n8n/issues/39",
                "created_at": "2019-10-08T17:42:44Z",
                "closed_at": "2020-05-24T12:07:24Z",
                "labels": []
              }
            ],
            "review_summary": {
              "total_reviews": 3,
              "approved_count": 0,
              "changes_requested_count": 0,
              "commented_count": 2,
              "reviewers": [
                "dariacodes",
                "cubic-dev-ai[bot]",
                "CharlieKolb"
              ],
              "review_comments": [
                {
                  "id": 3289612227,
                  "author": "cubic-dev-ai[bot]",
                  "body": "**1 issue found** across 19 files\n\n<details>\n<summary>Prompt for AI agents (all 1 issues)</summary>\n\n~~~\n\nUnderstand the root cause of the following 1 issues and fix them.\n\n\n<file name=\"packages/cli/src/modules/data-table/data-store-rows.repository.ts\">\n\n<violation number=\"1\" location=\"packages/cli/src/modules/data-table/data-store-rows.repository.ts:509\">\nRule violated: **Prefer Typeguards over Type casting**\n\nThe new helper narrows the query result with `as` assertions (`rawRows as \u2026` / `normalizeRows(...) as \u2026`). This violates the &quot;Prefer typeguards over type casting&quot; rule and risks masking unexpected row shapes. Validate the payload (e.g. check `typeof row.id === &#39;number&#39;` before building the return array) or adjust the return typing without `as`.</violation>\n</file>\n\n~~~\n\n</details>\n\n<sub>React with \ud83d\udc4d or \ud83d\udc4e to teach cubic. Mention `@cubic-dev-ai` to give feedback, ask questions, or re-run the review.</sub>",
                  "created_at": "2025-10-01T14:46:27Z",
                  "updated_at": null,
                  "comment_type": "review",
                  "in_reply_to_id": null,
                  "path": null,
                  "line": null
                },
                {
                  "id": 3293707965,
                  "author": "CharlieKolb",
                  "body": "I'm okay with not trying to avoid a column name clash, but should we add `dryRunState` to the forbidden column names going forward? \ud83e\udd14 \n\nSorry about the mess with the overloads, this isn't scaling well \ud83d\ude05 \n\nCode looks great, very clean solutions all around \ud83d\ude4c ",
                  "created_at": "2025-10-02T10:00:27Z",
                  "updated_at": null,
                  "comment_type": "review",
                  "in_reply_to_id": null,
                  "path": null,
                  "line": null
                }
              ]
            },
            "commit_count": 13,
            "commits_authors": [
              "dariacodes"
            ],
            "mergeable": null,
            "mergeable_state": null,
            "draft": false,
            "requested_reviewers": [
              "Cadiac"
            ],
            "assignees": []
          },
          "ai_summary": "\u26a1 MEDIUM RISK",
          "analyzed_at": "2025-10-02T16:07:59.852420"
        },
        {
          "pr_number": 20298,
          "title": "feat: Exclude large data tables by default, allow inclusion with override flag",
          "author": "BGZStephen",
          "state": "open",
          "created_at": "2025-10-02T09:58:33Z",
          "updated_at": "2025-10-02T10:06:39Z",
          "url": "https://github.com/n8n-io/n8n/pull/20298",
          "stuckness_metrics": {
            "time_since_last_activity_hours": 0.5231881725,
            "unresolved_review_threads": 0,
            "failed_ci_checks": 0,
            "time_waiting_for_reviewer_hours": 0.5231881725,
            "pr_age_days": 0.0274245071875,
            "rebase_force_push_count": 0,
            "comment_velocity_decay": 0.0,
            "linked_issue_stale_time_hours": 0.0
          },
          "blast_radius_metrics": {
            "downstream_dependencies": 8,
            "critical_path_touched": false,
            "lines_added": 88,
            "lines_removed": 5,
            "files_changed": 4,
            "test_coverage_delta": 50.0,
            "historical_regression_risk": 0.0
          },
          "dynamics_metrics": {
            "author_experience_score": 93.0,
            "reviewer_load": 2,
            "approval_ratio": 0.0,
            "author_merge_history": 3,
            "avg_review_time_hours": 0.135
          },
          "business_impact_metrics": {
            "linked_to_release": false,
            "external_dependencies": 6,
            "priority_label": null,
            "affects_core_functionality": true
          },
          "composite_scores": {
            "stuckness_score": 0.0,
            "blast_radius_score": 32.0,
            "dynamics_score": 20.0,
            "business_impact_score": 40.0
          },
          "detailed_info": {
            "description": "## Summary\r\n\r\n<!--\r\nDescribe what the PR does and how to test.\r\nPhotos and videos are recommended.\r\n-->\r\n\r\nThis PR adds a flag to entity exports to allow including large data tables in exports, by default, large data tables are excluded.\r\n\r\n## Related Linear tickets, Github issues, and Community forum posts\r\n\r\nPAY-3911\r\n\r\n<!--\r\nInclude links to **Linear ticket** or Github issue or Community forum post.\r\nImportant in order to close *automatically* and provide context to reviewers.\r\nhttps://linear.app/n8n/issue/\r\n-->\r\n<!-- Use \"closes #<issue-number>\", \"fixes #<issue-number>\", or \"resolves #<issue-number>\" to automatically close issues when the PR is merged. -->\r\n\r\n\r\n## Review / Merge checklist\r\n\r\n- [x] PR title and summary are descriptive. ([conventions](../blob/master/.github/pull_request_title_conventions.md)) <!--\r\n   **Remember, the title automatically goes into the changelog.\r\n   Use `(no-changelog)` otherwise.**\r\n-->\r\n- [ ] [Docs updated](https://github.com/n8n-io/n8n-docs) or follow-up ticket created.\r\n- [x] Tests included. <!--\r\n   A bug is not considered fixed, unless a test is added to prevent it from happening again.\r\n   A feature is not complete without tests.\r\n-->\r\n- [ ] PR Labeled with `release/backport` (if the PR is an urgent fix that needs to be backported)\r\n",
            "body_text": "## Summary\r\n\r\n<!--\r\nDescribe what the PR does and how to test.\r\nPhotos and videos are recommended.\r\n-->\r\n\r\nThis PR adds a flag to entity exports to allow including large data tables in exports, by default, large data tables are excluded.\r\n\r\n## Related Linear tickets, Github issues, and Community forum posts\r\n\r\nPAY-3911\r\n\r\n<!--\r\nInclude links to **Linear ticket** or Github issue or Community forum post.\r\nImportant in order to close *automatically* and provide context to reviewers.\r\nhttps://linear.app/n8n/issue/\r\n-->\r\n<!-- Use \"closes #<issue-number>\", \"fixes #<issue-number>\", or \"resolves #<issue-number>\" to automatically close issues when the PR is merged. -->\r\n\r\n\r\n## Review / Merge checklist\r\n\r\n- [x] PR title and summary are descriptive. ([conventions](../blob/master/.github/pull_request_title_conventions.md)) <!--\r\n   **Remember, the title automatically goes into the changelog.\r\n   Use `(no-changelog)` otherwise.**\r\n-->\r\n- [ ] [Docs updated](https://github.com/n8n-io/n8n-docs) or follow-up ticket created.\r\n- [x] Tests included. <!--\r\n   A bug is not considered fixed, unless a test is added to prevent it from happening again.\r\n   A feature is not complete without tests.\r\n-->\r\n- [ ] PR Labeled with `release/backport` (if the PR is an urgent fix that needs to be backported)\r\n",
            "files": [
              {
                "filename": "packages/cli/src/commands/export/__tests__/entities.test.ts",
                "status": "modified",
                "additions": 28,
                "deletions": 2,
                "changes": 30,
                "patch": "@@ -9,7 +9,7 @@ describe('ExportEntitiesCommand', () => {\n \tconst mockExportService = mockInstance(ExportService);\n \n \tdescribe('run', () => {\n-\t\tit('should export entities', async () => {\n+\t\tit('should export entities without large data tables', async () => {\n \t\t\tconst command = new ExportEntitiesCommand();\n \t\t\t// @ts-expect-error Protected property\n \t\t\tcommand.flags = {\n@@ -22,7 +22,33 @@ describe('ExportEntitiesCommand', () => {\n \t\t\t};\n \t\t\tawait command.run();\n \n-\t\t\texpect(mockExportService.exportEntities).toHaveBeenCalledWith('./exports');\n+\t\t\texpect(mockExportService.exportEntities).toHaveBeenCalledWith(\n+\t\t\t\t'./exports',\n+\t\t\t\tnew Set<string>([\n+\t\t\t\t\t'execution_annotation_tags',\n+\t\t\t\t\t'execution_annotations',\n+\t\t\t\t\t'execution_data',\n+\t\t\t\t\t'execution_entity',\n+\t\t\t\t\t'execution_metadata',\n+\t\t\t\t]),\n+\t\t\t);\n+\t\t});\n+\n+\t\tit('should export entities with large data tables', async () => {\n+\t\t\tconst command = new ExportEntitiesCommand();\n+\t\t\t// @ts-expect-error Protected property\n+\t\t\tcommand.flags = {\n+\t\t\t\toutputDir: './exports',\n+\t\t\t\tincludeLargeDataTables: true,\n+\t\t\t};\n+\t\t\t// @ts-expect-error Protected property\n+\t\t\tcommand.logger = {\n+\t\t\t\tinfo: jest.fn(),\n+\t\t\t\terror: jest.fn(),\n+\t\t\t};\n+\t\t\tawait command.run();\n+\n+\t\t\texpect(mockExportService.exportEntities).toHaveBeenCalledWith('./exports', new Set<string>());\n \t\t});\n \t});\n ",
                "blob_url": "https://github.com/n8n-io/n8n/blob/6d5eb5a32b5a6188bcf1fa19ab0938a7452fae48/packages%2Fcli%2Fsrc%2Fcommands%2Fexport%2F__tests__%2Fentities.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/commands/export/entities.ts",
                "status": "modified",
                "additions": 18,
                "deletions": 2,
                "changes": 20,
                "patch": "@@ -11,19 +11,35 @@ const flagsSchema = z.object({\n \t\t.string()\n \t\t.describe('Output directory path')\n \t\t.default(safeJoinPath(__dirname, './outputs')),\n+\tincludeLargeDataTables: z.boolean().describe('Include large data tables').default(false),\n });\n \n @Command({\n \tname: 'export:entities',\n \tdescription: 'Export database entities to JSON files',\n-\texamples: ['', '--outputDir=./exports', '--outputDir=/path/to/backup'],\n+\texamples: [\n+\t\t'',\n+\t\t'--outputDir=./exports',\n+\t\t'--outputDir=/path/to/backup',\n+\t\t'--includeLargeDataTables=true',\n+\t],\n \tflagsSchema,\n })\n export class ExportEntitiesCommand extends BaseCommand<z.infer<typeof flagsSchema>> {\n \tasync run() {\n \t\tconst outputDir = this.flags.outputDir;\n \n-\t\tawait Container.get(ExportService).exportEntities(outputDir);\n+\t\tconst excludedLargeDataTables = new Set<string>();\n+\n+\t\tif (!this.flags.includeLargeDataTables) {\n+\t\t\texcludedLargeDataTables.add('execution_annotation_tags');\n+\t\t\texcludedLargeDataTables.add('execution_annotations');\n+\t\t\texcludedLargeDataTables.add('execution_data');\n+\t\t\texcludedLargeDataTables.add('execution_entity');\n+\t\t\texcludedLargeDataTables.add('execution_metadata');\n+\t\t}\n+\n+\t\tawait Container.get(ExportService).exportEntities(outputDir, excludedLargeDataTables);\n \t}\n \n \tcatch(error: Error) {",
                "blob_url": "https://github.com/n8n-io/n8n/blob/6d5eb5a32b5a6188bcf1fa19ab0938a7452fae48/packages%2Fcli%2Fsrc%2Fcommands%2Fexport%2Fentities.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/services/__tests__/export.service.test.ts",
                "status": "modified",
                "additions": 33,
                "deletions": 0,
                "changes": 33,
                "patch": "@@ -47,6 +47,11 @@ describe('ExportService', () => {\n \t\t\t\ttableName: 'workflow_entity',\n \t\t\t\tcolumns: [{ databaseName: 'id' }, { databaseName: 'name' }, { databaseName: 'active' }],\n \t\t\t},\n+\t\t\t{\n+\t\t\t\tname: 'Execution Data',\n+\t\t\t\ttableName: 'execution_data',\n+\t\t\t\tcolumns: [{ databaseName: 'id' }],\n+\t\t\t},\n \t\t];\n \t\t// @ts-expect-error Accessing private property for testing\n \t\tmockDataSource.options = { type: 'sqlite' };\n@@ -123,6 +128,34 @@ describe('ExportService', () => {\n \n \t\t\tawait exportService.exportEntities(outputDir);\n \n+\t\t\texpect(mockDataSource.query).toHaveBeenCalledTimes(5); // 1 migrations + 3 entity queries\n+\t\t\texpect(appendFile).toHaveBeenCalled();\n+\t\t});\n+\n+\t\tit('should handle multiple pages of data, excluding execution_data', async () => {\n+\t\t\tconst outputDir = '/test/output';\n+\t\t\tconst mockEntities = Array.from({ length: 500 }, (_, i) => ({\n+\t\t\t\tid: i + 1,\n+\t\t\t\temail: `test${i + 1}@example.com`,\n+\t\t\t\tfirstName: `User${i + 1}`,\n+\t\t\t}));\n+\n+\t\t\t// Mock the migrations table query to fail (table doesn't exist)\n+\t\t\tjest\n+\t\t\t\t.mocked(mockDataSource.query)\n+\t\t\t\t.mockImplementationOnce(async (query: string) => {\n+\t\t\t\t\tif (query.includes('migrations') && query.includes('COUNT')) {\n+\t\t\t\t\t\tthrow new Error('Table not found');\n+\t\t\t\t\t}\n+\t\t\t\t\treturn [];\n+\t\t\t\t})\n+\t\t\t\t.mockResolvedValueOnce(mockEntities) // First page for User\n+\t\t\t\t.mockResolvedValueOnce([]) // Second page for User (empty, end of data)\n+\t\t\t\t.mockResolvedValueOnce([]); // Workflow entities\n+\t\t\tjest.mocked(readdir).mockResolvedValue([]);\n+\n+\t\t\tawait exportService.exportEntities(outputDir, new Set(['execution_data']));\n+\n \t\t\texpect(mockDataSource.query).toHaveBeenCalledTimes(4); // 1 migrations + 3 entity queries\n \t\t\texpect(appendFile).toHaveBeenCalled();\n \t\t});",
                "blob_url": "https://github.com/n8n-io/n8n/blob/6d5eb5a32b5a6188bcf1fa19ab0938a7452fae48/packages%2Fcli%2Fsrc%2Fservices%2F__tests__%2Fexport.service.test.ts",
                "previous_filename": null
              },
              {
                "filename": "packages/cli/src/services/export.service.ts",
                "status": "modified",
                "additions": 9,
                "deletions": 1,
                "changes": 10,
                "patch": "@@ -83,7 +83,7 @@ export class ExportService {\n \t\treturn systemTablesExported;\n \t}\n \n-\tasync exportEntities(outputDir: string) {\n+\tasync exportEntities(outputDir: string, excludedTables: Set<string> = new Set()) {\n \t\tthis.logger.info('\\n\u26a0\ufe0f\u26a0\ufe0f This feature is currently under development. \u26a0\ufe0f\u26a0\ufe0f');\n \n \t\tvalidateDbTypeForExportEntities(this.dataSource.options.type);\n@@ -110,6 +110,14 @@ export class ExportService {\n \t\tfor (const metadata of entityMetadatas) {\n \t\t\t// Get table name and entity name\n \t\t\tconst tableName = metadata.tableName;\n+\n+\t\t\tif (excludedTables.has(tableName)) {\n+\t\t\t\tthis.logger.info(\n+\t\t\t\t\t`   \ud83d\udcad Skipping table: ${tableName} (${metadata.name}) as it exists as an exclusion`,\n+\t\t\t\t);\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n \t\t\tconst entityName = metadata.name.toLowerCase();\n \n \t\t\tthis.logger.info(`\\n\ud83d\udcca Processing table: ${tableName} (${entityName})`);",
                "blob_url": "https://github.com/n8n-io/n8n/blob/6d5eb5a32b5a6188bcf1fa19ab0938a7452fae48/packages%2Fcli%2Fsrc%2Fservices%2Fexport.service.ts",
                "previous_filename": null
              }
            ],
            "total_additions": 88,
            "total_deletions": 5,
            "total_changes": 93,
            "ci_checks": [
              {
                "name": "MariaDB",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:12:34Z",
                "completed_at": "2025-10-02T10:12:26Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905884/job/51782913191",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905884/job/51782913191"
              },
              {
                "name": "Notify Slack on failure",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:12:26Z",
                "completed_at": "2025-10-02T10:12:26Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905884/job/51782904402",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905884/job/51782904402"
              },
              {
                "name": "Postgres",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:12:26Z",
                "completed_at": "2025-10-02T10:12:26Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905884/job/51782904309",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905884/job/51782904309"
              },
              {
                "name": "SQLite Pooled",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:12:26Z",
                "completed_at": "2025-10-02T10:12:26Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905884/job/51782904266",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905884/job/51782904266"
              },
              {
                "name": "MySQL 8.4",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:12:26Z",
                "completed_at": "2025-10-02T10:12:26Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905884/job/51782904229",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905884/job/51782904229"
              },
              {
                "name": "Install & Build",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:12:26Z",
                "completed_at": "2025-10-02T10:12:26Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905884/job/51782904181",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905884/job/51782904181"
              },
              {
                "name": "Notify Slack on failure",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:12:21Z",
                "completed_at": "2025-10-02T10:12:25Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189722539/job/51782895651",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189722539/job/51782895651"
              },
              {
                "name": "chromatic",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:07:03Z",
                "completed_at": "2025-10-02T10:07:03Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905935/job/51782519782",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905935/job/51782519782"
              },
              {
                "name": "changeset",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:06:57Z",
                "completed_at": "2025-10-02T10:07:03Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905935/job/51782492601",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905935/job/51782492601"
              },
              {
                "name": "E2E - Checks",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:06:42Z",
                "completed_at": "2025-10-02T10:06:42Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905948/job/51782492493",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905948/job/51782492493"
              },
              {
                "name": "Playwright",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:06:42Z",
                "completed_at": "2025-10-02T10:06:42Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905948/job/51782492238",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905948/job/51782492238"
              },
              {
                "name": "E2E",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:06:42Z",
                "completed_at": "2025-10-02T10:06:42Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905948/job/51782492234",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905948/job/51782492234"
              },
              {
                "name": "Check Eligibility for Test Run",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:06:42Z",
                "completed_at": "2025-10-02T10:06:41Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905948/job/51782492065",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905948/job/51782492065"
              },
              {
                "name": "claude-code-action",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:06:41Z",
                "completed_at": "2025-10-02T10:06:41Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905883/job/51782491944",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905883/job/51782491944"
              },
              {
                "name": "notify",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:06:41Z",
                "completed_at": "2025-10-02T10:06:41Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189905876/job/51782491833",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189905876/job/51782491833"
              },
              {
                "name": "check-pr-title",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:06:36Z",
                "completed_at": "2025-10-02T10:06:40Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189902986/job/51782480793",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189902986/job/51782480793"
              },
              {
                "name": "Bundle Size Check",
                "status": "completed",
                "conclusion": "skipped",
                "started_at": "2025-10-02T10:00:15Z",
                "completed_at": "2025-10-02T10:00:15Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189722555/job/51781998381",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189722555/job/51781998381"
              },
              {
                "name": "Lint / Lint",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:00:30Z",
                "completed_at": "2025-10-02T10:01:46Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189722555/job/51781998309",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189722555/job/51781998309"
              },
              {
                "name": "Unit tests / Unit tests",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:00:31Z",
                "completed_at": "2025-10-02T10:05:24Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189722555/job/51781998298",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189722555/job/51781998298"
              },
              {
                "name": "Postgres",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:00:13Z",
                "completed_at": "2025-10-02T10:06:33Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189722539/job/51781980286",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189722539/job/51781980286"
              },
              {
                "name": "MariaDB",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:00:15Z",
                "completed_at": "2025-10-02T10:12:18Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189722539/job/51781980272",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189722539/job/51781980272"
              },
              {
                "name": "MySQL 8.4",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:00:12Z",
                "completed_at": "2025-10-02T10:12:01Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189722539/job/51781980234",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189722539/job/51781980234"
              },
              {
                "name": "SQLite Pooled",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T10:00:12Z",
                "completed_at": "2025-10-02T10:05:13Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189722539/job/51781980214",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189722539/job/51781980214"
              },
              {
                "name": "cubic \u00b7 AI code reviewer",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:58:43Z",
                "completed_at": "2025-10-02T10:06:41Z",
                "html_url": "https://github.com/n8n-io/n8n/runs/51781902368",
                "details_url": "https://www.cubic.dev/pr/n8n-io/n8n/pull/20298"
              },
              {
                "name": "Install & Build",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:58:52Z",
                "completed_at": "2025-10-02T09:59:59Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189722539/job/51781898250",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189722539/job/51781898250"
              },
              {
                "name": "check-pr-title",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:58:42Z",
                "completed_at": "2025-10-02T09:58:47Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189722544/job/51781898155",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189722544/job/51781898155"
              },
              {
                "name": "Install & Build",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:58:51Z",
                "completed_at": "2025-10-02T10:00:15Z",
                "html_url": "https://github.com/n8n-io/n8n/actions/runs/18189722555/job/51781898106",
                "details_url": "https://github.com/n8n-io/n8n/actions/runs/18189722555/job/51781898106"
              },
              {
                "name": "Aikido Security: check code",
                "status": "completed",
                "conclusion": "success",
                "started_at": "2025-10-02T09:58:37Z",
                "completed_at": "2025-10-02T09:58:39Z",
                "html_url": "https://github.com/n8n-io/n8n/runs/51781896896",
                "details_url": "https://app.aikido.dev/featurebranch/scan/50301659?groupId=1590"
              }
            ],
            "ci_status": "success",
            "timeline_metrics": {
              "time_to_first_review_hours": 0.135,
              "time_to_first_approval_hours": null,
              "time_to_merge_hours": null,
              "first_commit_at": "2025-10-02T09:38:34Z",
              "last_commit_at": "2025-10-02T09:38:34Z",
              "time_from_first_to_last_commit_hours": 0.0,
              "total_review_time_hours": null,
              "total_wait_time_hours": null,
              "number_of_review_cycles": 1
            },
            "comments": [
              {
                "id": 3360281541,
                "author": "codecov[bot]",
                "body": "## [Codecov](https://app.codecov.io/gh/n8n-io/n8n/pull/20298?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=n8n-io) Report\n:white_check_mark: All modified and coverable lines are covered by tests.\n\n:loudspeaker: Thoughts on this report? [Let us know!](https://github.com/codecov/feedback/issues/255)",
                "created_at": "2025-10-02T10:05:59Z",
                "updated_at": "2025-10-02T10:05:59Z",
                "comment_type": "issue_comment",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              },
              {
                "id": 3293753430,
                "author": "cubic-dev-ai[bot]",
                "body": "**No issues found** across 4 files",
                "created_at": "2025-10-02T10:06:39Z",
                "updated_at": null,
                "comment_type": "review",
                "in_reply_to_id": null,
                "path": null,
                "line": null
              }
            ],
            "total_comments": 2,
            "labels": [
              {
                "name": "core",
                "color": "DC143C",
                "description": "Enhancement outside /nodes-base and /editor-ui"
              },
              {
                "name": "n8n team",
                "color": "ffffff",
                "description": "Authored by the n8n team"
              }
            ],
            "linked_issues": [],
            "review_summary": {
              "total_reviews": 1,
              "approved_count": 0,
              "changes_requested_count": 0,
              "commented_count": 1,
              "reviewers": [
                "cubic-dev-ai[bot]"
              ],
              "review_comments": [
                {
                  "id": 3293753430,
                  "author": "cubic-dev-ai[bot]",
                  "body": "**No issues found** across 4 files",
                  "created_at": "2025-10-02T10:06:39Z",
                  "updated_at": null,
                  "comment_type": "review",
                  "in_reply_to_id": null,
                  "path": null,
                  "line": null
                }
              ]
            },
            "commit_count": 1,
            "commits_authors": [
              "BGZStephen"
            ],
            "mergeable": null,
            "mergeable_state": null,
            "draft": false,
            "requested_reviewers": [
              "afitzek",
              "konstantintieber"
            ],
            "assignees": []
          },
          "ai_summary": "\u2705 LOW RISK",
          "analyzed_at": "2025-10-02T16:08:02.477905"
        }
      ],
      "avg_delivery_risk_score": 37.225,
      "high_risk_pr_count": 0,
      "critical_risk_pr_count": 0,
      "team_velocity_impact": 37.225,
      "release_risk_assessment": "Low risk - most PRs are healthy"
    }
  },
  "last_updated": "2025-10-02T16:08:06.967778"
}